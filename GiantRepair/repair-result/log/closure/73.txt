Repair : closure_73
Current failed test : com.google.javascript.jscomp.CodePrinterTest::testUnicode | 2019.09.06 AD at 15:38:21 CDT
Location : com.google.javascript.jscomp.CodeGenerator.strEscape:[1051, 1034, 1045, 1046, 996, 997, 993, 994, 995, 1056, 1057, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1009, 1011, 1013, 1016, 1019, 1021, 1023, 1024, 1026, 1028, 1030, 1035, 1036, 1039]#1.0
Compute Candidate : 2019.09.06 AD at 15:39:57 CDT - 2019.09.06 AD at 17:20:51 CDT , PNumber : 11382, CandNumber : 817 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+continue;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+continue;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+continue;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+continue;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+continue;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+continue;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+continue;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+continue;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+continue;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+continue;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+continue;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+continue;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(true,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V3/4718/pattern-ver1-serial/src.com.sleepfuriously.hpgworkout.GraphActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(false,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V13/6998/pattern-ver1-serial/api.src.main.java.org.ednovo.gooru.domain.service.ScollectionServiceImpl.java-createCollectionItem.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:21:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
+ String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')&&(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>1&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)==0&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==0&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)==0)||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==0))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>=0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder==null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:22:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return null;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+return null;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+return null;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return null;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return null;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+return null;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;quote<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+return null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-1)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/3678/pattern-ver1-serial/src.main.java.org.fcrepo.client.FedoraClient.java-getPids.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-1)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/3678/pattern-ver1-serial/src.main.java.org.fcrepo.client.FedoraClient.java-getPids.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:23:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Solution---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c<0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6188/pattern-ver1-serial/GravityGame.GravityGameApplet.java-onEditLocX1.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<=s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c<=2){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/3732/pattern-ver1-serial/reformulation-core.src.main.java.org.semanticweb.ontop.owlrefplatform.core.unfolding.TypeLift.java-f.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Collection;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,myUid;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
+break;
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/3303/pattern-ver1-serial/src.main.java.ServerApp.Connection.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>3&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/925/pattern-ver1-serial/Group_Project_Bork.CommandFactory.java-parse.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i>s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,MAX_SERVICE_NODES;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+break;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+break;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+break;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+break;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+break;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+break;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+break;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)<='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)<='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)<=']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)<=']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2900/pattern-ver1-serial/BlueMesh.src.blue.mesh.ServerThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()-2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i-1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(false,i-1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i--){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+s);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+doublequoteEscape);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+singlequoteEscape);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+backslashEscape);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+quote);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i+c,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c<0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)>='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)>='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)>=']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)>=']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c!=0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+1);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)!='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)!=']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)!='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)!=']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+3);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i+3,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(false,i+3,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-2)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-2)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,localLevel;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')!=(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2!=((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+break;
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/2394/pattern-ver1-serial/app.src.main.java.io.github.d2edev.distinctivering.db.DataProvider.java-query.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)>'-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)>'-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)>']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)>']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:29:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)==4&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)==4)||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==4&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==4))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i++,new ArrayList<KeyBinding>()){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=0.0&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i<=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)==5&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)==5)||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==5&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==5))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V26/1681/pattern-ver1-serial/src.edu.umn.cs.melt.copper.compiletime.srcbuilders.single.ParserFragmentEngineBuilder.java-writeRunProductionSemanticAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c>=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6682/pattern-ver1-serial/src.Geometry.Graham_Scan.java-leftTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
+case 401 :
+
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:30:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();quote++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.toString()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
+
+case 4 :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2088/pattern-ver1-serial/core.src.com.finalstand.game.Screens.PlayScreen.java-findCreepStartingPos.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,_afterComposeMethodCache;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(s!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(doublequoteEscape!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(singlequoteEscape!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(backslashEscape!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(sb!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return "An arena doesn't seem to be built yet.";
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return "An arena doesn't seem to be built yet.";
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return "An arena doesn't seem to be built yet.";
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return "An arena doesn't seem to be built yet.";
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+return "An arena doesn't seem to be built yet.";
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return "An arena doesn't seem to be built yet.";
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return "An arena doesn't seem to be built yet.";
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return "An arena doesn't seem to be built yet.";
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+return "An arena doesn't seem to be built yet.";
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return "";
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return "";
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return "";
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return "";
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+return "";
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+return "";
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return "";
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return "";
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return "";
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+i++;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+i++;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.List;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,mActions;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c==0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/870/pattern-ver1-serial/src.com.orange.game.zjh.statemachine.ZjhGameStateMachineBuilder.java-decideNextState.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,mRelationId;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Iterator;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
+case 5 :
+
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1378/pattern-ver1-serial/src.haven.OptWnd.java-changed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ final StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ final char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
+ String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
+ String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ String END_SCRIPT="/script";
+ String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
-sb.append("\\0");
+sb.append("\\0".trim());
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
-sb.append("\\n");
+sb.append("\\n".trim());
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
-sb.append("\\r");
+sb.append("\\r".trim());
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
-sb.append("\\t");
+sb.append("\\t".trim());
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
-sb.append(backslashEscape);
+sb.append(backslashEscape.trim());
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
-sb.append(doublequoteEscape);
+sb.append(doublequoteEscape.trim());
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
-sb.append(singlequoteEscape);
+sb.append(singlequoteEscape.trim());
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
-sb.append("\\>");
+sb.append("\\>".trim());
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
+sb.append("<\\".trim());
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
+sb.append("<\\".trim());
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Iterator;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)==-1&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Iterator;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)==-1)||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Iterator;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==-1&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Iterator;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==-1))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c++;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c++;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+c++;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+c++;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+c++;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+i++;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+i++;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+i++;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+i++;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+i++;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+i++;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+i++;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+i++;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+i++;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+i++;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString().trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c--;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c--;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+c--;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+c--;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+c--;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return s;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return doublequoteEscape;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return singlequoteEscape;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return backslashEscape;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return new String(sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+i--;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+i--;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+i--;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+i--;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+i--;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+i--;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+i--;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+i--;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+i--;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+i--;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+c++;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/5574/pattern-ver1-serial/no.ntnu.item.semesterassignment.src.no.ntnu.item.semesterassignment.taxidispatcher.TaxiDispatcher.java-getRequestQueuePosition.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return (String)sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return null;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return null;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+return null;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+return null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return null;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return null;
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+synchronized(sb){
 sb.append(c);
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return null;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:39:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+synchronized(sb){
 sb.append("\\>");
+}
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/5664/pattern-ver1-serial/src.tr.broadcast.BroadcastManager.java-onClaimTokenReceive.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+synchronized(sb){
 sb.append(c);
+}
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/5664/pattern-ver1-serial/src.tr.broadcast.BroadcastManager.java-onClaimTokenReceive.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString().toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
-sb.append("\\0");
+sb.append(("\\0").toLowerCase());
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
-sb.append("\\n");
+sb.append(("\\n").toLowerCase());
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
-sb.append("\\r");
+sb.append(("\\r").toLowerCase());
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
-sb.append("\\t");
+sb.append(("\\t").toLowerCase());
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
-sb.append(backslashEscape);
+sb.append((backslashEscape).toLowerCase());
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
-sb.append(doublequoteEscape);
+sb.append((doublequoteEscape).toLowerCase());
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
-sb.append(singlequoteEscape);
+sb.append((singlequoteEscape).toLowerCase());
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
-sb.append("\\>");
+sb.append(("\\>").toLowerCase());
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
+sb.append(("<\\").toLowerCase());
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
+sb.append(("<\\").toLowerCase());
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return null;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+return null;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+return null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i+-1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(false,i+-1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+-1);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0,continentName,countryCode;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+break;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:41:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+break;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+break;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+break;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+break;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+break;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+break;
 }
+break;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+break;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return (String)(sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+return null;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+return null;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+return null;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+return null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+return null;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+while(true){
+
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+while(true){
+
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+while(true){
+
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+while(true){
+
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+while(true){
+
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+}
+while(true){
+
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+while(true){
+
+}
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+while(true){
+
+}
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+while(true){
+
+}
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+break;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+break;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+break;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+break;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+break;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+break;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+break;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+break;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-2)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-2)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/5377/pattern-ver1-serial/src.main.Map.java-setTempPos.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)>0&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)>0)||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)>0&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)>0))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return null;
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+return null;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4615/pattern-ver1-serial/src.at.jku.ssw.cmm.launcher.AddProfileListener.java-mouseClicked.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+return null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4615/pattern-ver1-serial/src.at.jku.ssw.cmm.launcher.AddProfileListener.java-mouseClicked.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+return null;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+return null;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4615/pattern-ver1-serial/src.at.jku.ssw.cmm.launcher.AddProfileListener.java-mouseClicked.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+i--;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:52:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+i--;
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i++,Charset.forName("UTF-8")){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+if(sb!=null){
 sb.append(c);
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.equals(null)){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(!outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+if(c>0){
 sb.append(c);
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("]");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("]");
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+sb.append("]");
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append("]");
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+sb.append("]");
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+sb.append("]");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+sb.append("]");
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+sb.append("]");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+sb.append("]");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+sb.append("]");
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+sb.append("            scope.apply();\n");
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/4602/pattern-ver1-serial/layout.src.main.java.com.flarestar.drones.layout.directives.Click.java-afterViewCreated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ @SuppressWarnings("UnusedAssignment") StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
+ @SuppressWarnings("UnusedAssignment") String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+ @SuppressWarnings("UnusedAssignment") StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ @SuppressWarnings("UnusedAssignment") String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
-char c=s.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
- final String END_SCRIPT="/script";
- final String START_COMMENT="!--";
+ @SuppressWarnings("UnusedAssignment") String END_SCRIPT="/script";
+ @SuppressWarnings("UnusedAssignment") String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c=c;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+outputCharsetEncoder=outputCharsetEncoder;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+c=c;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(i==4){
+continue;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(i==4){
+continue;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(i==4){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4672/pattern-ver1-serial/main.src.main.java.com.example.wduello.collectionmanager.ItemListFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+c=1000;
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(true){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(true){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(outputCharsetEncoder.canEncode(c)==false){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+int a=0;
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+int a=0;
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+int a=0;
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+int a=0;
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+int a=0;
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:55:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+int a=0;
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+int a=0;
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+int a=0;
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+int a=0;
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+int a=0;
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+String OUTSTRING="";
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+String OUTSTRING="";
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+String OUTSTRING="";
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+String OUTSTRING="";
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+String OUTSTRING="";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+String OUTSTRING="";
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+String OUTSTRING="";
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:56:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+String OUTSTRING="";
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+String OUTSTRING="";
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+String OUTSTRING="";
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.isEmpty()){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.isEmpty()){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.isEmpty()){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.isEmpty()){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+i++;
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();){
+i++;
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
-sb.append("\\0");
+sb.append(Strings.nullToEmpty("\\0"));
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
-sb.append("\\n");
+sb.append(Strings.nullToEmpty("\\n"));
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:57:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
-sb.append("\\r");
+sb.append(Strings.nullToEmpty("\\r"));
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
-sb.append("\\t");
+sb.append(Strings.nullToEmpty("\\t"));
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("["+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/5078/pattern-ver1-serial/benchmark.org.imdea.benchmark.rubis.RUBiSBenchmark.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(outputCharsetEncoder.canEncode(c)==true){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+int indexSelection=0;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+int indexSelection=0;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+int indexSelection=0;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+int indexSelection=0;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+int indexSelection=0;
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+int indexSelection=0;
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
+int indexSelection=0;
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+int indexSelection=0;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+int indexSelection=0;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+int indexSelection=0;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+" "+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/5232/pattern-ver1-serial/src.com.mydeblob.guard.CommandHandler.java-giveKit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(sb.equals("sounds")){
+continue;
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 17:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(sb.equals("sounds")){
+continue;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.equals("sounds")){
+continue;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(" & ");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(" & ");
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+sb.append(" & ");
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(" & ");
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+sb.append(" & ");
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
+if(sb!=null){
 sb.append("\\0");
+}
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
+if(sb!=null){
 sb.append("\\n");
+}
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
+if(sb!=null){
 sb.append("\\r");
+}
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
+if(sb!=null){
 sb.append("\\t");
+}
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/1378/pattern-ver1-serial/src.fyp.samoleary.WildlifePrototype2.GMap.GMapActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("    }\n");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:00:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("    }\n");
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if("Chrome".equals(i)&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+int a=1;
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+int a=1;
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+int a=1;
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+int a=1;
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+int a=1;
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+int a=1;
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+int a=1;
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+int a=1;
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+int a=1;
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+int a=1;
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
+if(s!=null){
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7646/pattern-ver1-serial/src.java.com.smi.travel.datalayer.dao.impl.TourOperationImpl.java-updateTourOperation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+sb.append(c);
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+sb.append(c);
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
+sb.append(c);
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+boolean b=true;
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+boolean b=true;
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+boolean b=true;
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+boolean b=true;
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+boolean b=true;
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+boolean b=true;
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+boolean b=true;
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+boolean b=true;
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+boolean b=true;
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+boolean b=true;
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString()+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder==null){
+continue;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape==null){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape==null){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape==null){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(outputCharsetEncoder==null){
+continue;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s==null){
+continue;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("client "+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6134/pattern-ver1-serial/src.main.java.com.fejkathegame.server.ServerProgram.java-received.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder==null){
+return "";
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape==null){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape==null){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape==null){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(outputCharsetEncoder==null){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder==null){
+return null;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(outputCharsetEncoder==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s==null){
+return null;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(sb==null){
+return null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+if(sb==null){
+return null;
+}
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(sb==null){
+return null;
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(sb==null){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
+if(sb==null){
+return null;
+}
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
+if(s==null){
+return null;
+}
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(sb==null){
+return null;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+if("&null".equals(outputCharsetEncoder)){
+return null;
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if("&null".equals(s)){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if("&null".equals(doublequoteEscape)){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if("&null".equals(singlequoteEscape)){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if("&null".equals(backslashEscape)){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if("&null".equals(outputCharsetEncoder)){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+if("&null".equals(sb)){
+return null;
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+if("&null".equals(sb)){
+return null;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if("&null".equals(s)){
+return null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if("&null".equals(doublequoteEscape)){
+return null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+appendHexJavaScriptRepresentation(sb,c);
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+appendHexJavaScriptRepresentation(sb,c);
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append(c);
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("\\0");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("\\n");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("\\r");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("\\t");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("\\>");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+appendHexJavaScriptRepresentation(sb,c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+appendHexJavaScriptRepresentation(sb,c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+appendHexJavaScriptRepresentation(sb,c);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+appendHexJavaScriptRepresentation(sb,c);
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+sb.append(c);
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+sb.append(c);
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+sb.append(c);
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+sb.append(c);
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+sb.append(c);
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+sb.append(c);
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(c);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("\\0");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("\\n");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("\\r");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("\\t");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("\\>");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
-sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(quote);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append("<\\");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+appendHexJavaScriptRepresentation(sb,c);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
-sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(c);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(sb.equals("")){
+return "";
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+sb.append(c);
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+2-1);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/250/pattern-ver1-serial/src.main.java.com.scienjus.client.PixivParserClient.java-buildGetUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
 sb.append(c);
+if(c>0x1f&&c<=0x7f){
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(!(outputCharsetEncoder==null)){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5193/pattern-ver1-serial/IJC_UI.src.nl.detoren.ijc.ui.view.Hoofdscherm.java-updateUpdateStandButton.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(c);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+sb.append(c);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+sb.append("<\\");
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+appendHexJavaScriptRepresentation(sb,c);
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+if(c<0){
+return null;
+}
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:09:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(c<0){
+return null;
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(c<0){
+return null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(c<0){
+return null;
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("https://myschool.ru.is/myschool/"+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(c);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(sb.equals("-1")){
+return null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+appendHexJavaScriptRepresentation(sb,c);
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+appendHexJavaScriptRepresentation(sb,c);
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+appendHexJavaScriptRepresentation(sb,c);
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+appendHexJavaScriptRepresentation(sb,c);
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+2+" votes");
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+sb.append(c);
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+sb.append("\\0");
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+sb.append("\\n");
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+sb.append("\\r");
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("There was a problem with the call to ManyWho: "+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+2*-1);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+sb.append(c);
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+2*1000);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+if(sb==null){
+return null;
+}
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+assert (outputCharsetEncoder!=null);
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (s!=null);
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (doublequoteEscape!=null);
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (singlequoteEscape!=null);
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (backslashEscape!=null);
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+assert (sb!=null);
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (outputCharsetEncoder!=null);
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+assert (sb!=null);
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+assert (s!=null);
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+assert (s!=null);
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (!s.isEmpty());
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (!doublequoteEscape.isEmpty());
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (!singlequoteEscape.isEmpty());
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (!backslashEscape.isEmpty());
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+assert (!s.isEmpty());
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:12:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.equals(InputStream.class)){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.equals(InputStream.class)){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.equals(InputStream.class)){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(outputCharsetEncoder.equals(InputStream.class)){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(doublequoteEscape.equals(InputStream.class)){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(singlequoteEscape.equals(InputStream.class)){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(backslashEscape.equals(InputStream.class)){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(outputCharsetEncoder.equals(InputStream.class)){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
-}else {
 appendHexJavaScriptRepresentation(sb,c);
+}else {
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+appendHexJavaScriptRepresentation(sb,c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+appendHexJavaScriptRepresentation(sb,c);
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+if(sb!=null){
+appendHexJavaScriptRepresentation(sb,c);
+}
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+}else {
+if(sb!=null){
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(sb!=null){
+char c=s.charAt(i);
+switch (c){
+case '\0' :
+
+sb.append("\\0");
+break;
+case '\n' :
+
+sb.append("\\n");
+break;
+case '\r' :
+
+sb.append("\\r");
+break;
+case '\t' :
+
+sb.append("\\t");
+break;
+case '\\' :
+
+sb.append(backslashEscape);
+break;
+case '\"' :
+
+sb.append(doublequoteEscape);
+break;
+case '\'' :
+
+sb.append(singlequoteEscape);
+break;
+case '>' :
+
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+sb.append("\\>");
+}else {
+sb.append(c);
+}
+break;
+case '<' :
+
+ final String END_SCRIPT="/script";
+ final String START_COMMENT="!--";
+if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+sb.append("<\\");
+}else {
+if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+sb.append("<\\");
+}else {
+sb.append(c);
+}
+}
+break;
+default :
+
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
+}
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString().replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+appendHexJavaScriptRepresentation(sb,c);
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return String.format("%s",sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
+sb.append("<\\".trim());
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
+sb.append("<\\".trim());
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/7016/pattern-ver1-serial/ClassApplication.src.main.java.com.exam.ViewExamAnsAction.java-performBaseAction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
-sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(quote);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
-sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+sb.append(quote);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
-sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(quote);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (c!=s.charAt(i));
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+assert (sb!=new StringBuilder(s.length()+2));
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("PATH: \n"+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+assert (sb!=null);
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+assert (sb!=null);
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.startsWith("https")){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.startsWith("https")){
+return doublequoteEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.startsWith("https")){
+return singlequoteEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.startsWith("https")){
+return backslashEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s.startsWith("https")){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(String.valueOf(s.length()+2));
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder(s.length()+2+"/logout");
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
-StringBuilder sb=new StringBuilder(s.length()+2);
+StringBuilder sb=new StringBuilder("\nDealer has: \n"+s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.equalsIgnoreCase("/")){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.equalsIgnoreCase("/")){
+return doublequoteEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.equalsIgnoreCase("/")){
+return singlequoteEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.equalsIgnoreCase("/")){
+return backslashEscape;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:15:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s.equalsIgnoreCase("/")){
+return s;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(doublequoteEscape.equalsIgnoreCase("/")){
+return doublequoteEscape;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+assert (outputCharsetEncoder!=null);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (s!=null);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (doublequoteEscape!=null);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (singlequoteEscape!=null);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (backslashEscape!=null);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+assert (outputCharsetEncoder!=null);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.equalsIgnoreCase("")){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.equalsIgnoreCase("")){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.equalsIgnoreCase("")){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.equalsIgnoreCase("")){
+return "";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s.equalsIgnoreCase("")){
+return "";
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(doublequoteEscape);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(doublequoteEscape);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+sb.append(doublequoteEscape);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(doublequoteEscape);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+appendHexJavaScriptRepresentation(sb,c);
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder!=null||"查看红包".equals(outputCharsetEncoder)){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(outputCharsetEncoder!=null&&outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5865/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java-validateRequiredData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString()==null?"":sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(s.isEmpty()){
+s=null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(doublequoteEscape.isEmpty()){
+doublequoteEscape=null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(singlequoteEscape.isEmpty()){
+singlequoteEscape=null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(backslashEscape.isEmpty()){
+backslashEscape=null;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+}
+if(s.isEmpty()){
+s=null;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(s.isEmpty()){
+s=null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)+c=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)+c=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)+quote=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)+quote=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((c=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&c=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((quote=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c>=0&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&i>=0&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if((outputCharsetEncoder!=null)&&(outputCharsetEncoder.canEncode(c))){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if((c>0x1f||c=='\'')&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if((i>=2||i=='\'')&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString()!=null?sb.toString():new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:19:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb==null?null:sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder!=null||outputCharsetEncoder==null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb.toString()==null?new String():sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(outputCharsetEncoder==null||outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/443/pattern-ver1-serial/bundles.opaeum-compilation.org.opaeum.compilation.java.src.org.opaeum.javageneration.bpm.actions.AbstractProtectedNodeBuilder.java-implementCallbackOnComplete.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+assert (c>=0):"Receive a negative tratment";
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+assert (c>=0):"Receive a negative tratment";
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+assert (c>=0):"Receive a negative tratment";
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+assert (c>=0):"Receive a negative tratment";
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
+if(sb!=null){
 return sb.toString();
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
-return sb.toString();
+return sb!=null?sb.toString():null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+assert (outputCharsetEncoder!=null):"Appointments day is not allowed to be null!";
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (s!=null):"Appointments day is not allowed to be null!";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (doublequoteEscape!=null):"Appointments day is not allowed to be null!";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (singlequoteEscape!=null):"Appointments day is not allowed to be null!";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (backslashEscape!=null):"Appointments day is not allowed to be null!";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+assert (outputCharsetEncoder!=null):"Appointments day is not allowed to be null!";
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+assert (c!=0):"Receive a size tratment";
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+assert (c!=0):"Receive a size tratment";
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+assert (c!=0):"Receive a size tratment";
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+assert (c!=0):"Receive a size tratment";
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(sb==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(sb==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(c>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(c>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(" (");
+sb.append(") ");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+sb.append(" (");
+sb.append(") ");
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:22:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+sb.append(" (");
+sb.append(") ");
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+sb.append(" (");
+sb.append(") ");
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
+sb.append(" (");
+sb.append(") ");
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+sb.append(" (");
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
+sb.append(") ");
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(c<=0){
+c=1;
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+sb.append("\"category\" : [");
+sb.append("]");
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/1798/pattern-ver1-serial/src.main.java.com.github.jerdeb.daqvalidator.Validator.java-listCompliantCDM.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
-}else {
 sb.append(c);
+}else {
+sb.append("<\\");
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+}else {
+sb.append(c);
+}
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
-sb.append("\\>");
-}else {
 sb.append(c);
+}else {
+sb.append("\\>");
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
+sb.append(".");
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/6450/pattern-ver1-serial/src.calculator.Calculator.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
-sb.append(c);
+sb.append(".");
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/6450/pattern-ver1-serial/src.calculator.Calculator.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
+sb.append(".");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/6450/pattern-ver1-serial/src.calculator.Calculator.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:23:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
+sb.append(".");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/6450/pattern-ver1-serial/src.calculator.Calculator.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
-if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder!=null&&!outputCharsetEncoder.equals("")){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(sb!=null){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c<=0x7f||"查看红包".equals(c>0x1f)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f&&c<=0x7f||c=='%'){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c<0L||(c>0x1f&&c<=0x7f)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s!=null&&s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/3737/pattern-ver1-serial/src.com.ichi2.libanki.sync.RemoteMediaServer.java-addFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s!=null&&s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/3737/pattern-ver1-serial/src.com.ichi2.libanki.sync.RemoteMediaServer.java-addFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(true){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-1)>=0&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-1)>=0&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(((s.charAt(i-1)=='-'||s.charAt(i-1)=='\'')&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||((s.charAt(i-1)==']'||s.charAt(i-1)=='\'')&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:24:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c>0x1f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(((s.charAt(i-1)=='-')&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||((s.charAt(i-1)==']')&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(sb==null){
+throw new IllegalStateException("User isn't registered! "+s);
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
+if(doublequoteEscape==null){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
+if(singlequoteEscape==null){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
+if(backslashEscape==null){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
+if(outputCharsetEncoder==null){
+return s;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return "";
+}
+if(doublequoteEscape==null){
+return s;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return "";
+}
+if(singlequoteEscape==null){
+return s;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return "";
+}
+if(backslashEscape==null){
+return s;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s==null){
+return "";
+}
+if(sb==null){
+return s;
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+sb.append("<table style=\"text-align: center;\" width=\"100%\" "+"height=\"100%\" border=\"0\" bordercolor=\"#000000\">");
+sb.append("</table>");
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5923/pattern-ver1-serial/photoweb.src.com.utils.web.GenerateHTML.java-genDayNavigate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.startsWith("\r\n")){
+s=s.substring(2);
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.startsWith("\r\n")){
+doublequoteEscape=doublequoteEscape.substring(2);
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.startsWith("\r\n")){
+singlequoteEscape=singlequoteEscape.substring(2);
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.startsWith("\r\n")){
+backslashEscape=backslashEscape.substring(2);
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s.startsWith("\r\n")){
+s=s.substring(2);
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s.startsWith("\r\n")){
+s=s.substring(2);
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+if(s.startsWith("/")){
+s=s.substring(1);
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+if(doublequoteEscape.startsWith("/")){
+doublequoteEscape=doublequoteEscape.substring(1);
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+if(singlequoteEscape.startsWith("/")){
+singlequoteEscape=singlequoteEscape.substring(1);
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
+if(backslashEscape.startsWith("/")){
+backslashEscape=backslashEscape.substring(1);
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.trim().charAt(0)!=';'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7874/pattern-ver1-serial/HSPC_SubmissionsProgram.src.hspc.submissionsprogram.ConfigReader.java-ConfigReader.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.trim().charAt(0)!=';'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7874/pattern-ver1-serial/HSPC_SubmissionsProgram.src.hspc.submissionsprogram.ConfigReader.java-ConfigReader.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 0, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
-}else {
 appendHexJavaScriptRepresentation(sb,c);
-}
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
+boolean succeeded=false;
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+succeeded=true;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
+if(!succeeded){
+return null;
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
+boolean succeeded=false;
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+succeeded=true;
 }
 }
 }
 sb.append(quote);
+if(!succeeded){
+return null;
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(!s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(!s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s!=null&&s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5865/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java-validateRequiredData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s!=null&&s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5865/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.validator.UserInternaturValidator.java-validateRequiredData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+sb.append(c);
+if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+if(quote==3){
+System.out.println("debug");
+}
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+if(quote==3){
+System.out.println("debug");
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+if(quote==3){
+System.out.println("debug");
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
+if(quote==3){
+System.out.println("debug");
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+if(quote==3){
+System.out.println("debug");
+}
 sb.append(c);
+if(quote==3){
+System.out.println("debug");
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+if(quote==3){
+System.out.println("debug");
+}
 appendHexJavaScriptRepresentation(sb,c);
+if(quote==3){
+System.out.println("debug");
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(true){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(true){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())==false){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())==false){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if((s!=null)&&(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length()))){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if((s!=null)&&(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length()))){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())==true){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())==true){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
-if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+if(s==null||s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/443/pattern-ver1-serial/bundles.opaeum-compilation.org.opaeum.compilation.java.src.org.opaeum.javageneration.bpm.actions.AbstractProtectedNodeBuilder.java-implementCallbackOnComplete.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+if(s==null||s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/443/pattern-ver1-serial/bundles.opaeum-compilation.org.opaeum.compilation.java.src.org.opaeum.javageneration.bpm.actions.AbstractProtectedNodeBuilder.java-implementCallbackOnComplete.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s.startsWith("extern ")){
+return s.substring(6,s.length()-1).trim();
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(doublequoteEscape.startsWith("extern ")){
+return doublequoteEscape.substring(6,doublequoteEscape.length()-1).trim();
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(singlequoteEscape.startsWith("extern ")){
+return singlequoteEscape.substring(6,singlequoteEscape.length()-1).trim();
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(backslashEscape.startsWith("extern ")){
+return backslashEscape.substring(6,backslashEscape.length()-1).trim();
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
+if(s.startsWith("extern ")){
+return s.substring(6,s.length()-1).trim();
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s.startsWith("extern ")){
+return s.substring(6,s.length()-1).trim();
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||outputCharsetEncoder==null||doublequoteEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||outputCharsetEncoder==null||singlequoteEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||outputCharsetEncoder==null||backslashEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||doublequoteEscape==null||singlequoteEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||doublequoteEscape==null||backslashEscape==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null||outputCharsetEncoder==null||sb==null){
+return null;
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(s==null||outputCharsetEncoder==null||sb==null){
+return null;
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
+if(s==null||outputCharsetEncoder==null||doublequoteEscape==null){
+return null;
+}
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+s="20160101";
+}
+if(doublequoteEscape==null){
+doublequoteEscape="20200101";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5352/pattern-ver1-serial/GitlabMonitor.src.main.java.org.gitmining.monitor.service.StudentService.java-getStudentEventItem.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+s="20160101";
+}
+if(singlequoteEscape==null){
+singlequoteEscape="20200101";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5352/pattern-ver1-serial/GitlabMonitor.src.main.java.org.gitmining.monitor.service.StudentService.java-getStudentEventItem.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s==null){
+s="20160101";
+}
+if(backslashEscape==null){
+backslashEscape="20200101";
+}
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5352/pattern-ver1-serial/GitlabMonitor.src.main.java.org.gitmining.monitor.service.StudentService.java-getStudentEventItem.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
-sb.append("<\\");
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
+sb.append("<\\");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
-sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
+sb.append("<\\");
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
-if(outputCharsetEncoder.canEncode(c)){
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
-}else {
-if(c>0x1f&&c<=0x7f){
-sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
-}
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
 sb.append(c);
-}else {
-appendHexJavaScriptRepresentation(sb,c);
-}
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+}else {
+if(c==c){
+sb.append(c);
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/1425/pattern-ver1-serial/ScalableStorageService.src.consistent_hashing.Range.java-isWithin.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
+long startTime=System.currentTimeMillis();
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+long startTime=System.currentTimeMillis();
 sb.append(c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
+long startTime=System.currentTimeMillis();
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+long startTime=System.currentTimeMillis();
 appendHexJavaScriptRepresentation(sb,c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+long startTime=System.currentTimeMillis();
 sb.append("\\>");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+long startTime=System.currentTimeMillis();
 sb.append(c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
+long startTime=System.currentTimeMillis();
 sb.append("<\\");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
+long startTime=System.currentTimeMillis();
 sb.append("<\\");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
+long startTime=System.currentTimeMillis();
 sb.append(c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+long startTime=System.currentTimeMillis();
 sb.append(c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
-}else {
-if(c>0x1f&&c<=0x7f){
-sb.append(c);
 }else {
-appendHexJavaScriptRepresentation(sb,c);
-}
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.isEmpty()&&!s.isEmpty())||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/3915/pattern-ver1-serial/src.main.java.org.datanucleus.metadata.MetaDataMerger.java-mergeMemberAnnotationsData.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.isEmpty()&&!s.isEmpty()))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/3915/pattern-ver1-serial/src.main.java.org.datanucleus.metadata.MetaDataMerger.java-mergeMemberAnnotationsData.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
+sb.append(c);
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||!(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(!(s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3067/pattern-ver1-serial/core.src.com.ashenrider.game.Player.java-killPlayer.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-'))||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
-sb.append("<\\");
-}else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
-}
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
-if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
-}else {
-sb.append(c);
-}
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(0x1f!=0&&(s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if(c!=0&&c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i!=0&&i>=2&&(2!=0&&(s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 20, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+}else {
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+}else {
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+}else {
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 }else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+}else {
+sb.append(c);
+}
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }else {
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
+}else {
+sb.append(c);
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
 }else {
+if(c>0x1f&&c<=0x7f){
 sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
+if(outputCharsetEncoder!=null){
+if(outputCharsetEncoder.canEncode(c)){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}else {
+if(c>0x1f&&c<=0x7f){
+sb.append(c);
+}else {
+appendHexJavaScriptRepresentation(sb,c);
+}
+}
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 26, UPD : 0, INS : 1, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
+if(s!=null){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
+}
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 28, UPD : 3, INS : 0, DEL : 25
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-'))||((s.charAt(i-1)==']'&&s.charAt(i-2)==']')))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&!((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 31, UPD : 31, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if((i>=2)&&(((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']')))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 34, UPD : 34, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))||"查看红包".equals(i>=2)){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i<0L||(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']')))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(true){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))==false){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/293/pattern-ver1-serial/src.snpsvm.app.CommandLineApp.java-main.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))==true){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 35, UPD : 35, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
-if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
+if(i>=2&&(((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-'))||((s.charAt(i-1)==']'&&s.charAt(i-2)==']')))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
-if(c>0x1f&&c<=0x7f){
+if((c>0x1f)&&(c<=0x7f)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 36, UPD : 36, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[987,1058]
------------Candidate---------------
 static String strEscape(String s,char quote,String doublequoteEscape,String singlequoteEscape,String backslashEscape,CharsetEncoder outputCharsetEncoder){
 StringBuilder sb=new StringBuilder(s.length()+2);
+if(sb.toString().contains("E")&&sb.toString().charAt(sb.indexOf("E")+1)!='-'&&Integer.parseInt(sb.toString().substring(sb.indexOf("E")+1,sb.length()))<=15){
+return String.format("%.0f",Double.parseDouble(sb.toString().replace(' ','\0')));
+}
 sb.append(quote);
 for(int i=0;i<s.length();i++){
 char c=s.charAt(i);
 switch (c){
 case '\0' :
 
 sb.append("\\0");
 break;
 case '\n' :
 
 sb.append("\\n");
 break;
 case '\r' :
 
 sb.append("\\r");
 break;
 case '\t' :
 
 sb.append("\\t");
 break;
 case '\\' :
 
 sb.append(backslashEscape);
 break;
 case '\"' :
 
 sb.append(doublequoteEscape);
 break;
 case '\'' :
 
 sb.append(singlequoteEscape);
 break;
 case '>' :
 
 if(i>=2&&((s.charAt(i-1)=='-'&&s.charAt(i-2)=='-')||(s.charAt(i-1)==']'&&s.charAt(i-2)==']'))){
 sb.append("\\>");
 }else {
 sb.append(c);
 }
 break;
 case '<' :
 
  final String END_SCRIPT="/script";
  final String START_COMMENT="!--";
 if(s.regionMatches(true,i+1,END_SCRIPT,0,END_SCRIPT.length())){
 sb.append("<\\");
 }else {
 if(s.regionMatches(false,i+1,START_COMMENT,0,START_COMMENT.length())){
 sb.append("<\\");
 }else {
 sb.append(c);
 }
 }
 break;
 default :
 
 if(outputCharsetEncoder!=null){
 if(outputCharsetEncoder.canEncode(c)){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }else {
 if(c>0x1f&&c<=0x7f){
 sb.append(c);
 }else {
 appendHexJavaScriptRepresentation(sb,c);
 }
 }
 }
 }
 sb.append(quote);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 40, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:34:40 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation:[1160, 1164, 1165, 1161, 1163]#1.0
Compute Candidate : 2019.09.06 AD at 18:36:03 CDT - 2019.09.06 AD at 18:45:11 CDT , PNumber : 11281, CandNumber : 106 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+return ;
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7084/pattern-ver1-serial/src.main.java.com.pratilipi.api.impl.pratilipi.PratilipiContentImageApi.java-postPratilipiContent.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
-}catch(IOException ex){
+}catch(Exception ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V37/2962/pattern-ver1-serial/src.sdk.src.com.tapit.vastsdk.TVASTPostbackTask.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
-throw new RuntimeException(ex);
+throw new IllegalStateException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/7629/pattern-ver1-serial/smb.src.main.java.no.maddin.niofs.smb.SMBPath.java-getParent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
-throw new RuntimeException(ex);
+throw new RuntimeException("",ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1081/pattern-ver1-serial/src.main.java.edu.kit.ipd.crowdcontrol.objectservice.moneytransfer.MoneyTransferManager.java-sendNotification.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
-throw new RuntimeException(ex);
+throw new IllegalArgumentException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/4179/pattern-ver1-serial/CommonChickenRuntimeEngine.src.ccre.log.LogLevel.java-fromByte.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(false){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/5532/pattern-ver1-serial/src.it.polimi.dima.watchdog.sms.commands.flags.SMSM3Handler.java-visit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+ex.printStackTrace();
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/3119/pattern-ver1-serial/src.org.loklak.api.client.ClientConnection.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+c++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+c++;
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+c--;
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+c--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:46:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
-throw new RuntimeException(ex);
+throw new UnsupportedOperationException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb==null){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if(sb==null){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if(ex==null){
+return ;
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb==null){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb==null){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if("index".equals(sb)){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if("index".equals(ex)){
+return ;
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if("index".equals(sb)){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if("index".equals(c)){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if("index".equals(c)){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb.equals("TIME")){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb.equals("TIME")){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if(ex.equals("TIME")){
+return ;
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if("&null".equals(sb)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if("&null".equals(sb)){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if("&null".equals(c)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if("&null".equals(c)){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.equals("DATETIME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if(sb.equals("DATETIME")){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+sb.append("]");
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+sb.append("]");
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+sb=sb;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+c=c;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+sb=sb;
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+c=c;
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(c<0){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(c<0){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+int a=0;
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+int a=0;
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb.equals(c)){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb.equals(c)){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+String OUTSTRING="";
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+String OUTSTRING="";
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+int ex=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.equals(InputStream.class)){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if(sb.equals(InputStream.class)){
+return ;
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb.equals(InputStream.class)){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.equals("setPackMode")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+sb.append(" & ");
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+sb.append(" & ");
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+sb.append("    }\n");
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+sb.append("    }\n");
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+int a=1;
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+int a=1;
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+sb.append(c);
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+sb.append(c);
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+boolean ex=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+boolean b=true;
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+boolean b=true;
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+appendHexJavaScriptRepresentation(c,sb);
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+assert (sb!=null);
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+assert (sb!=null);
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+assert (ex!=null);
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb!=null){
+appendHexJavaScriptRepresentation(c,sb);
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb!=null){
+try{
+appendHexJavaScriptRepresentation(c,sb);
+}catch(IOException ex){
+throw new RuntimeException(ex);
+}
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if(ex!=null){
+throw new RuntimeException(ex);
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+if(ex.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+assert (sb!=null);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+assert (sb!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+assert (c>0);
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/702/pattern-ver1-serial/rlpark.plugin.rltoys.jvsrc.rlpark.plugin.rltoys.experiments.parametersweep.reinforcementlearning.internal.AbstractEpisodeRewardMonitor.java-registerMeasurement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+assert (c>0);
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/702/pattern-ver1-serial/rlpark.plugin.rltoys.jvsrc.rlpark.plugin.rltoys.experiments.parametersweep.reinforcementlearning.internal.AbstractEpisodeRewardMonitor.java-registerMeasurement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+assert (c>=0):"Receive a negative tratment";
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+assert (c>=0):"Receive a negative tratment";
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
+assert (ex!=null):"Appointments day is not allowed to be null!";
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+assert (sb!=null):"Appointments day is not allowed to be null!";
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+assert (c!=0):"Receive a size tratment";
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+assert (c!=0):"Receive a size tratment";
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
-}catch(IOException ex){
+appendHexJavaScriptRepresentation(c,sb);
+}catch(Exception ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/3586/pattern-ver1-serial/EREFAndroid.app.src.main.java.rs.veselinromic.eref.android.fragment.SubjectsFragment.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(c>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(c>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+sb.append(" (");
+sb.append(") ");
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+sb.append(" (");
+sb.append(") ");
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
+if(sb.equals("NAME")){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
 appendHexJavaScriptRepresentation(c,sb);
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(sb.length()==2){
+return ;
+}
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(sb.length()==1){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6820/pattern-ver1-serial/src.main.java.org.asciidoc.intellij.actions.asciidoc.SimpleFormatAsciiDocAction.java-removeSymbol.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+if(c==3){
+System.out.println("debug");
+}
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
+}
+if(c==3){
+System.out.println("debug");
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+if(c==3){
+System.out.println("debug");
+}
 appendHexJavaScriptRepresentation(c,sb);
+if(c==3){
+System.out.println("debug");
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
 try{
+for(int i=0;i<24;i++){
 appendHexJavaScriptRepresentation(c,sb);
+}
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1154,1165]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(StringBuilder sb,char c){
+long startTime=System.currentTimeMillis();
 try{
 appendHexJavaScriptRepresentation(c,sb);
 }catch(IOException ex){
 throw new RuntimeException(ex);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 18:55:10 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.CodeGenerator.appendHexJavaScriptRepresentation:[1177, 1187, 1192, 1182, 1183, 1184, 1185]#1.0
Compute Candidate : 2019.09.06 AD at 18:56:28 CDT - 2019.09.06 AD at 19:15:31 CDT , PNumber : 11286, CandNumber : 202 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
-char[] surrogates=Character.toChars(codePoint);
+ char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[1],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[0],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[2],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[2],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:15:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)|0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint|0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)|0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)|0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[3],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[3],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u".trim()).append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+codePoint++;
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+codePoint++;
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+codePoint++;
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+codePoint++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+codePoint--;
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:16:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+codePoint--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+codePoint--;
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+codePoint--;
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+synchronized(out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf])){
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(("\\u").toLowerCase()).append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if("\\u".isEmpty()){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(("\\u").toUpperCase()).append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if(out==null){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out==null){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out==null){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:19:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+if(out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf])!=null){
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(out==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
+if(!Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+if(HEX_CHARS[codePoint&0xf]>0){
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if("index".equals(out)){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if("index".equals(codePoint)){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if("index".equals(surrogates)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if("index".equals(out)){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if("index".equals(codePoint)){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out.equals("TIME")){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("TIME")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out.equals("TIME")){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if("&null".equals(out)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if("&null".equals(codePoint)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if("&null".equals(surrogates)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if("&null".equals(out)){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if("&null".equals(codePoint)){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out.equals("DATETIME")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("DATETIME")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if(out.equals("DATETIME")){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[codePoint>>>12*100&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[codePoint>>>8*100&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[codePoint>>>4*100&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+out.append("]");
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("]");
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+codePoint=codePoint;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:21:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+codePoint=codePoint;
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[1]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+surrogates[0]=1000;
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+surrogates[1]=1000;
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
+if(true){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
+if(Character.isSupplementaryCodePoint(codePoint)==false){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(codePoint<0){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(codePoint<0){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if(codePoint<0){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("-1")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[0]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[2]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+int a=0;
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+int a=0;
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out.equals(codePoint)){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out.equals(surrogates)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals(out)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals(codePoint)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out.equals(codePoint)){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+String OUTSTRING="";
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+String OUTSTRING="";
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(Strings.nullToEmpty("\\u")).append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+int Character=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:23:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/2063/pattern-ver1-serial/src.minecraft.co.uk.flansmods.common.BlockPlaneWorkbench.java-getBlockTextureFromSideAndMetadata.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out.equals(InputStream.class)){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out.equals(InputStream.class)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals(InputStream.class)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out.equals(InputStream.class)){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if(out.equals(InputStream.class)){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
+if(Character.isSupplementaryCodePoint(codePoint)==true){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[codePoint&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[codePoint&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[codePoint&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+int indexSelection=0;
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:24:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf-1]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[0-1],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[1-1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out.equals("setPackMode")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("setPackMode")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+if(out.equals("setPackMode")){
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+out.append(" & ");
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(" & ");
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("    }\n");
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+int a=1;
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+int a=1;
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+boolean Character=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+boolean b=true;
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+boolean b=true;
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals(null)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates.equals(null)){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
+if(Character.isSupplementaryCodePoint(Math.abs(codePoint))){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
-char[] surrogates=Character.toChars(codePoint);
+char[] surrogates=Character.toChars(Math.abs(codePoint));
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[3]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+assert (out!=null);
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+assert (surrogates!=null);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+assert (out!=null);
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out!=null){
+char[] surrogates=Character.toChars(codePoint);
+appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out!=null){
+if(Character.isSupplementaryCodePoint(codePoint)){
+char[] surrogates=Character.toChars(codePoint);
+appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[1],out);
+return ;
+}
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+assert (surrogates!=Character.toChars(codePoint));
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+assert (out!=null);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+assert (out!=null);
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("655")){
+System.out.println();
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates.equals("655")){
+System.out.println();
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
+}
+if(out==null){
+throw new IOException("player is not initialised, game might not be started");
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+throw new IOException("Root not directory or IO error occurred");
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates==null){
+throw new IOException("Root not directory or IO error occurred");
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/7398/pattern-ver1-serial/core.src.main.java.org.infinispan.loaders.file.FileCacheStore.java-toStreamLockSafe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(codePoint>7){
+throw new IOException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(codePoint>7){
+throw new IOException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
+}
+if("\\u"==null){
+throw new IOException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:27:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+appendHexJavaScriptRepresentation(surrogates[1],out);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[1]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[1]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[1]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[1],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[0]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[0]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[0]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[2]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[2]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[2]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(out.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+if(out.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[0],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+try{
 appendHexJavaScriptRepresentation(surrogates[1],out);
+}finally{
+appendHexJavaScriptRepresentation(surrogates[0],out);
+}
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+try{
 appendHexJavaScriptRepresentation(surrogates[0],out);
+}finally{
 appendHexJavaScriptRepresentation(surrogates[1],out);
+}
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+assert (codePoint>=0):"Receive a negative tratment";
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+assert (codePoint>=0):"Receive a negative tratment";
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf-1]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf-1]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Arrays;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf-1]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+assert (out!=null):"Appointments day is not allowed to be null!";
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+assert (surrogates!=null):"Appointments day is not allowed to be null!";
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+assert (out!=null):"Appointments day is not allowed to be null!";
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+assert (codePoint!=0):"Receive a size tratment";
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+assert (codePoint!=0):"Receive a size tratment";
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[3]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[3]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[3]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/5951/pattern-ver1-serial/src.Game.Desk.java-setInitialQueens.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+out.append(" (");
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+out.append(") ");
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
+out.append(" (");
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(") ");
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
-if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(Character.isSupplementaryCodePoint(codePoint)){
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(out==null){
+return ;
+}
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+return ;
+}
+if(out==null){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[1]-1,out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
+appendHexJavaScriptRepresentation(surrogates[0]-1,out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
-appendHexJavaScriptRepresentation(surrogates[0],out);
-appendHexJavaScriptRepresentation(surrogates[1],out);
+appendHexJavaScriptRepresentation(surrogates[0]-1,out);
+appendHexJavaScriptRepresentation(surrogates[1]-1,out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(surrogates.equals("NAME")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(out.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+if(out.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates.equals("INFO")){
+return ;
+}
+if(surrogates.equals("UNIT")){
+return ;
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+if(out.equals("INFO")){
+return ;
+}
+if(out.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+throw new IOException("User isn't registered! "+codePoint);
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+throw new IOException("Could not find user with id "+codePoint);
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5858/pattern-ver1-serial/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.UserManagementController.java-deleteUser.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates==null){
+throw new IOException("Could not find user with id "+codePoint);
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5858/pattern-ver1-serial/chpl.chpl-service.src.main.java.gov.healthit.chpl.web.controller.UserManagementController.java-deleteUser.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(out==null||surrogates==null){
+throw new IOException();
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(out==null||surrogates==null){
+throw new IOException();
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null||out==null){
+throw new IOException();
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+if(surrogates==null||out==null){
+throw new IOException();
+}
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+if(codePoint==3){
+System.out.println("debug");
+}
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+if(codePoint==3){
+System.out.println("debug");
+}
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+if(codePoint==3){
+System.out.println("debug");
+}
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+if(codePoint==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/168/pattern-ver1-serial/src.main.java.joshie.harvest.animals.render.RenderHarvestAnimal.java-getEntityTexture.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+if(surrogates==null){
+throw new IOException("Can not found requested dataSource ["+out+"], for device ["+codePoint+"].");
+}
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/499/pattern-ver1-serial/crux-dev.src.main.java.org.cruxframework.crux.core.rebind.context.scanner.DataSourceScanner.java-getDataSource.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+long startTime=System.currentTimeMillis();
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
+long startTime=System.currentTimeMillis();
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
 out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/168/pattern-ver1-serial/src.main.java.joshie.harvest.animals.render.RenderHarvestAnimal.java-getEntityTexture.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/5532/pattern-ver1-serial/sample.src.main.java.com.blunderer.materialdesignlibrary.sample.searchbar.SearchBarAutoCompletionActivity.java-getActionBarHandler.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 24, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 appendHexJavaScriptRepresentation(surrogates[1],out);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:32:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[1167,1192]
------------Candidate---------------
 private static void appendHexJavaScriptRepresentation(int codePoint,Appendable out) throws IOException{
 if(Character.isSupplementaryCodePoint(codePoint)){
 char[] surrogates=Character.toChars(codePoint);
 appendHexJavaScriptRepresentation(surrogates[0],out);
 appendHexJavaScriptRepresentation(surrogates[1],out);
+out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 return ;
 }
-out.append("\\u").append(HEX_CHARS[(codePoint>>>12)&0xf]).append(HEX_CHARS[(codePoint>>>8)&0xf]).append(HEX_CHARS[(codePoint>>>4)&0xf]).append(HEX_CHARS[codePoint&0xf]);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 19:33:04 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.Compiler.parseTestCode:[1247, 1243, 1244, 1246, 1249, 1250]#1.0
Compute Candidate : 2019.09.06 AD at 19:34:28 CDT - 2019.09.06 AD at 19:48:01 CDT , PNumber : 11337, CandNumber : 0 
Location : com.google.javascript.jscomp.CodeGenerator.jsString:[944, 959, 960, 961, 940, 943, 952, 964, 945, 946, 954, 955, 956]#1.0
Compute Candidate : 2019.09.06 AD at 19:49:24 CDT - 2019.09.06 AD at 20:18:06 CDT , PNumber : 11301, CandNumber : 336 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+continue;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+ int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote=1;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote=1;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+return null;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+return null;
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+long singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<=s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<=doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Collection;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,myUid;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:18:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+default :
+
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7688/pattern-ver1-serial/cluster.src.main.java.io.servicefabric.cluster.ClusterMembership.java-processUpdates.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i>s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq>doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote=0;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote=0;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,MAX_SERVICE_NODES;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+break;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+float singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
-doubleq++;
+doubleq--;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
-singleq++;
+singleq--;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i--){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+Integer singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,doublequote;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,quote;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,localLevel;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
+doublequote=s;
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
+singlequote=s;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4596/pattern-ver1-serial/VortexGameEngine.src.vortex.Game.java-setDriver.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote=2;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote=2;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i++,new ArrayList<KeyBinding>()){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
+doublequote="";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
+singlequote="";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
-doublequote="\"";
+doublequote="";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
-singlequote="\\\'";
+singlequote="";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
+doublequote=null;
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:21:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
+singlequote=null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
-doublequote="\"";
+doublequote=null;
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:21:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
-singlequote="\\\'";
+singlequote=null;
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:21:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
+case 401 :
+
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();singleq++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:23:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();doubleq++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
-doubleq++;
+singleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
-doubleq++;
+i++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,_afterComposeMethodCache;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+return "An arena doesn't seem to be built yet.";
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+return "";
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+return "";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+return "";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,mActions;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+return s;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,mRelationId;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Iterator;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+case 5 :
+
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1378/pattern-ver1-serial/src.haven.OptWnd.java-changed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote=10;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote=10;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+ int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
-String doublequote,singlequote;
+ String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+ int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
-char quote;
+ char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
+break;
+default :
+
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5242/pattern-ver1-serial/jcollada-schema-1.4.src.main.java.net.dryanhild.collada.schema14.parser.geometry.GeometryParser.java-parse.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+singleq++;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+doubleq++;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+singleq++;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+singleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+doubleq++;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+doubleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:26:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+i++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+singleq--;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+doubleq--;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+singleq--;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+doubleq--;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<=s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<=doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+singleq--;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+singleq--;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+doubleq--;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+doubleq--;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:27:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+i--;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,continentName,countryCode;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(doubleq<singleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/3724/pattern-ver1-serial/Fanorona.java-isPossibleCapturingMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+while(true){
+
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+while(true){
+
+}
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+while(true){
+
+}
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0,userEmail;i<s.length();i++,i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+i++;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+doubleq++;
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+doubleq++;
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+singleq++;
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+singleq++;
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();i++,Charset.forName("UTF-8")){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+if('\"'!=0){
 quote='\"';
+}
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+if('\''!=0){
 quote='\'';
+}
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
-int singleq=0,doubleq=0;
+ @SuppressWarnings("UnusedAssignment") int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
-String doublequote,singlequote;
-char quote;
+ @SuppressWarnings("UnusedAssignment") String doublequote,singlequote;
+ @SuppressWarnings("UnusedAssignment") char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+s=s;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
+s=s;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+singleq=singleq;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+doubleq=doubleq;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(i==4){
+continue;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+doubleq++;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+quote=1000;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+singleq=1000;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(true){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+int a=0;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+int a=0;
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+int a=0;
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+int a=0;
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+String OUTSTRING="";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+String OUTSTRING="";
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+String OUTSTRING="";
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+String OUTSTRING="";
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.isEmpty()){
+return null;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.isEmpty()){
+return null;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();){
+i++;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
+int i=5;
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+singleq++;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
+s=new String();
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4713/pattern-ver1-serial/CapstoneProject.src.capstone.BinaryTree.java-getRecords.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(Double.isNaN(singleq)){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:36:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+int indexSelection=0;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
+int indexSelection=0;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+int indexSelection=0;
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+int indexSelection=0;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.equals("sounds")){
+continue;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+int a=1;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+int a=1;
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+int a=1;
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+int a=1;
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s!=null){
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7646/pattern-ver1-serial/src.java.com.smi.travel.datalayer.dao.impl.TourOperationImpl.java-updateTourOperation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+boolean b=true;
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+boolean b=true;
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+boolean b=true;
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+boolean b=true;
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+default :
+
+{
+throw new AssertionError();
+}
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5060/pattern-ver1-serial/src.main.java.blue.lapis.nocturne.gui.text.SelectableMember.java-setMapping.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s==null){
+continue;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
-switch (s.charAt(i)){
+switch (s.charAt(Math.abs(i))){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
-for(int i=0;i<s.length();i++){
+for(int i=0;i<s.length();Math.abs(i++)){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s==null){
+return "";
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return "";
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(outputCharsetEncoder==null){
+return "";
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s==null){
+return null;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return null;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(outputCharsetEncoder==null){
+return null;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s==null){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(outputCharsetEncoder==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if("&null".equals(s)){
+return null;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if("&null".equals(s)){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if("&null".equals(outputCharsetEncoder)){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if("&null".equals(singleq)){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if("&null".equals(doubleq)){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if("&null".equals(singleq)){
+return null;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if("&null".equals(doubleq)){
+return null;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+quote='\"';
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+doublequote="\\\"";
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+quote='\"';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+quote='\"';
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+doublequote="\\\"";
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+doublequote="\\\"";
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+singlequote="\'";
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+singlequote="\'";
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+doublequote="\\\"";
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+singlequote="\'";
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+singlequote="\'";
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||singleq==Long.MIN_VALUE){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
+doublequote="\\\"".replaceAll("\n","");
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
+singlequote="\'".replaceAll("\n","");
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
-doublequote="\"";
+doublequote="\"".replaceAll("\n","");
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
-singlequote="\\\'";
+singlequote="\\\'".replaceAll("\n","");
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
+doublequote=("\\\"").replace("\\","\\\\");
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
+singlequote=("\'").replace("\\","\\\\");
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
-doublequote="\"";
+doublequote=("\"").replace("\\","\\\\");
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
-singlequote="\\\'";
+singlequote=("\\\'").replace("\\","\\\\");
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+quote='\"';
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+doublequote="\\\"";
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
-doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+singlequote="\'";
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
-singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
 quote='\'';
+if(singleq<doubleq){
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+doublequote="\"";
 if(singleq<doubleq){
 quote='\'';
-doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+singlequote="\\\'";
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
-singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+try{
 quote='\"';
+}finally{
 doublequote="\\\"";
+}
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+try{
 quote='\"';
-doublequote="\\\"";
+}finally{
 singlequote="\'";
+}
+doublequote="\\\"";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+try{
 doublequote="\\\"";
+}finally{
+quote='\"';
+}
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
 doublequote="\\\"";
+try{
 singlequote="\'";
+}finally{
+quote='\"';
+}
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (s!=null);
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+assert (s!=null);
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+assert (outputCharsetEncoder!=null);
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+assert (!s.isEmpty());
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (!s.isEmpty());
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s.contains(s)){
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(outputCharsetEncoder.equals(InputStream.class)){
+return s;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s!=null){
+switch (s.charAt(i)){
+case '"' :
+
+doubleq++;
+break;
+case '\'' :
+
+singleq++;
+break;
+}
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s!=null){
+int singleq=0,doubleq=0;
+for(int i=0;i<s.length();i++){
+switch (s.charAt(i)){
+case '"' :
+
+doubleq++;
+break;
+case '\'' :
+
+singleq++;
+break;
+}
+}
+String doublequote,singlequote;
+char quote;
+if(singleq<doubleq){
+quote='\'';
+doublequote="\"";
+singlequote="\\\'";
+}else {
+quote='\"';
+doublequote="\\\"";
+singlequote="\'";
+}
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(outputCharsetEncoder!=null){
+int singleq=0,doubleq=0;
+for(int i=0;i<s.length();i++){
+switch (s.charAt(i)){
+case '"' :
+
+doubleq++;
+break;
+case '\'' :
+
+singleq++;
+break;
+}
+}
+String doublequote,singlequote;
+char quote;
+if(singleq<doubleq){
+quote='\'';
+doublequote="\"";
+singlequote="\\\'";
+}else {
+quote='\"';
+doublequote="\\\"";
+singlequote="\'";
+}
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+if(quote==0){
+return null;
+}
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(quote==0){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+if(quote==0){
+return null;
+}
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (singleq!=0);
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (doubleq!=0);
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.startsWith("https")){
+return s;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.startsWith("https")){
+return s;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+doubleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
+doubleq++;
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+singleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
+singleq++;
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+doubleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+doubleq++;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+doubleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+doubleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+singleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+singleq++;
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+singleq++;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+singleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
+doubleq++;
 singlequote="\\\'";
 }else {
 quote='\"';
+doubleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
+singleq++;
 singlequote="\\\'";
 }else {
 quote='\"';
+singleq++;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.equalsIgnoreCase("/")){
+return s;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.equalsIgnoreCase("/")){
+return s;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+assert (s!=null);
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (s!=null);
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (outputCharsetEncoder!=null);
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.equalsIgnoreCase("")){
+return "";
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.equalsIgnoreCase("")){
+return "";
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote.equals(null)){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote.equals(null)){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote.equals("655")){
+System.out.println();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote.equals("655")){
+System.out.println();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote='\''+1;
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote=1;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
+quote=1;
 doublequote="\"";
 singlequote="\\\'";
 }else {
-quote='\"';
+quote='\"'+1;
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||"查看红包".equals(singleq)){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||singleq==3){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(s.isEmpty()){
+s=null;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s.isEmpty()){
+s=null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<0||singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||singleq==0){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||singleq>9){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq&&singleq<4000000){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq&&singleq!=9999){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(doubleq>0&&singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (singleq>=0):"Receive a negative tratment";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (doubleq>=0):"Receive a negative tratment";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (singleq>=0):"Receive a negative tratment";
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (doubleq>=0):"Receive a negative tratment";
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (s!=null):"Appointments day is not allowed to be null!";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+assert (s!=null):"Appointments day is not allowed to be null!";
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+assert (outputCharsetEncoder!=null):"Appointments day is not allowed to be null!";
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (singleq!=0):"Receive a size tratment";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+assert (doubleq!=0):"Receive a size tratment";
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (singleq!=0):"Receive a size tratment";
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+assert (doubleq!=0):"Receive a size tratment";
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
 }
+if(s.isEmpty()){
+s=null;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(s.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq||singleq=='"'){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(quote>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(doubleq<=0){
+doubleq=1;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(singleq<=0){
+singleq=1;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote==null){
+doublequote="";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/755/pattern-ver1-serial/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java-getMessage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote==null){
+singlequote="";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/755/pattern-ver1-serial/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java-getMessage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
+if(quote<0){
+quote=0;
+}
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(quote<0){
+quote=0;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
+if(quote<0){
+quote=0;
+}
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(quote<=0){
+quote=1;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+if(singleq<=0){
+singleq=1;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+if(doubleq<=0){
+doubleq=1;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+if(doubleq>singleq){
+doubleq=singleq;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
+if(singleq>doubleq){
+singleq=doubleq;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(doubleq==100){
+doubleq=0;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote.equals("127.0.0.1")){
+doublequote="114.113.202.141";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5284/pattern-ver1-serial/src.netease.pomelo.chat.MainActivity.java-responseData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote.equals("127.0.0.1")){
+singlequote="114.113.202.141";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5284/pattern-ver1-serial/src.netease.pomelo.chat.MainActivity.java-responseData.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder)==null?"":strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder).trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return s;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return doublequote;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return singlequote;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return new String(strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return (String)strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder)!=null?strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder):new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder).toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder)==null?new String():strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder).replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote==null){
+singlequote=doublequote.toString();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/70/pattern-ver1-serial/app.src.main.java.kr.ac.snu.imlab.scdc.service.core.SCDCService.java-changeConfig.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote==null){
+doublequote=singlequote.toString();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/70/pattern-ver1-serial/app.src.main.java.kr.ac.snu.imlab.scdc.service.core.SCDCService.java-changeConfig.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return (String)(strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return String.format("%s",strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
-return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
+return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder)+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote==null||doublequote==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote==null||singlequote==null){
+return null;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s==null){
+return "";
+}
+if(outputCharsetEncoder==null){
+return s;
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.startsWith("\r\n")){
+s=s.substring(2);
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.startsWith("\r\n")){
+s=s.substring(2);
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(s.startsWith("/")){
+s=s.substring(1);
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(singleq<0){
+singleq=0;
+}
+if(doubleq<0){
+doubleq=0;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(doubleq<0){
+doubleq=0;
+}
+if(singleq<0){
+singleq=0;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
+boolean haveBreadCrumbs=false;
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq&&haveBreadCrumbs){
 quote='\'';
 doublequote="\"";
+haveBreadCrumbs=true;
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
+boolean haveBreadCrumbs=false;
 String doublequote,singlequote;
 char quote;
-if(singleq<doubleq){
+if(singleq<doubleq&&haveBreadCrumbs){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
+haveBreadCrumbs=true;
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s==null||outputCharsetEncoder==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(outputCharsetEncoder==null||s==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s==null||doublequote==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(s==null||singlequote==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(doublequote==null||s==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(singlequote==null||s==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(outputCharsetEncoder==null||doublequote==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}
+if(outputCharsetEncoder==null||singlequote==null){
+throw new NullPointerException();
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
+boolean succeeded=false;
 String doublequote,singlequote;
 char quote;
+if(!succeeded){
+return null;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+succeeded=true;
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
+boolean succeeded=false;
 String doublequote,singlequote;
 char quote;
+if(!succeeded){
+return null;
+}
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+succeeded=true;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(singleq==3){
+System.out.println("debug");
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(singleq==3){
+System.out.println("debug");
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(doubleq==3){
+System.out.println("debug");
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(doubleq==3){
+System.out.println("debug");
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+if(singleq==3){
+System.out.println("debug");
+}
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+if(singleq==3){
+System.out.println("debug");
+}
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+if(doubleq==3){
+System.out.println("debug");
+}
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+if(doubleq==3){
+System.out.println("debug");
+}
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
 }
+if(s.endsWith("/")==false){
+s=s+"/";
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
+}
+if(s.endsWith("/")==false){
+s=s+"/";
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+if(s.startsWith("extern ")){
+return s.substring(6,s.length()-1).trim();
+}
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+if(s.startsWith("extern ")){
+return s.substring(6,s.length()-1).trim();
+}
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(doubleq<3){
+doubleq=3;
+}
+if(singleq<3){
+singleq=3;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
+if(singleq<3){
+singleq=3;
+}
+if(doubleq<3){
+doubleq=3;
+}
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
-doublequote="\"";
-singlequote="\\\'";
-}else {
 quote='\"';
+doublequote="\\\"";
+singlequote="\'";
+}else {
+quote='\'';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
-doublequote="\"";
-singlequote="\\\'";
-}else {
 quote='\"';
 doublequote="\\\"";
+singlequote="\'";
+}else {
+quote='\"';
+doublequote="\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
-quote='\'';
-doublequote="\"";
-singlequote="\\\'";
-}else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+}else {
+quote='\"';
+doublequote="\\\"";
+singlequote="\\\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
+long startTime=System.currentTimeMillis();
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
+long startTime=System.currentTimeMillis();
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
+long startTime=System.currentTimeMillis();
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_73_buggy/src/com/google/javascript/jscomp/CodeGenerator.java[938,966]
------------Candidate---------------
 static String jsString(String s,CharsetEncoder outputCharsetEncoder){
+long startTime=System.currentTimeMillis();
 int singleq=0,doubleq=0;
 for(int i=0;i<s.length();i++){
 switch (s.charAt(i)){
 case '"' :
 
 doubleq++;
 break;
 case '\'' :
 
 singleq++;
 break;
 }
 }
 String doublequote,singlequote;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 char quote;
 if(singleq<doubleq){
 quote='\'';
 doublequote="\"";
 singlequote="\\\'";
 }else {
 quote='\"';
 doublequote="\\\"";
 singlequote="\'";
 }
 return strEscape(s,quote,doublequote,singlequote,"\\\\",outputCharsetEncoder);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testUnicode]
---------START : 2019.09.06 AD at 15:38:21 CDT
---------TIME : 2019.09.06 AD at 20:38:22 CDT
--------------- END -----------------
Finish : closure-73 > patch : 1 | Start : Fri Sep 06 15:38:21 CDT 2019 | End : 2019.09.06 AD at 20:38:22 CDT
