Repair : closure_38
Current failed test : com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero | 2019.09.05 AD at 00:21:58 CDT
Location : com.google.javascript.jscomp.CodeConsumer.addNumber:[265, 243, 244, 245, 249, 267, 246, 250, 251, 252, 253, 254, 255, 256, 259, 260, 262, 264]#1.0
Compute Candidate : 2019.09.05 AD at 00:24:03 CDT - 2019.09.05 AD at 01:02:59 CDT , PNumber : 11377, CandNumber : 643 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+return ;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+return ;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+return ;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+return ;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+return ;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+return ;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+return ;
 }
 }else {
 add(String.valueOf(x));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+return ;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+continue;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
+ char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+ long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
-long mantissa=value;
+ long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
-int exp=0;
+ int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>1){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==0&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:05:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==0){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:06:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>=2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=1;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=0;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:06:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<=0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>3){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/925/pattern-ver1-serial/Group_Project_Bork.CommandFactory.java-parse.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa,0)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp,0));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value,0));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x>0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+break;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=2;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev<='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x<=x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=3;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp-1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
-exp++;
+exp--;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:09:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&x=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+prev+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+negativeZero+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+prev)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+x+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+value+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp<2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev>='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x>=x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp!=2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev!='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
-int exp=0;
+Integer exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+3)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(1,exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa,prev)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp,prev));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=prev;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=x;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=value;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=mantissa;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=exp;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:12:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<5&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5490/pattern-ver1-serial/Paintroid.src.org.catrobat.paintroid.dialog.layerchooser.LayerChooserDialog.java-addLayer.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:14:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x>x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:14:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev>'-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:14:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==4&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:14:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==4){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp,exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2403/pattern-ver1-serial/app.src.main.java.com.door43.translationstudio.core.Indexer.java-getFrame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:15:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<20&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V34/2783/pattern-ver1-serial/app.src.main.java.EV3.BluetoothRobot.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=100;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=0.0){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)<=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==5&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==5){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add("");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/250/pattern-ver1-serial/android.app.src.main.java.io.cliper.PingService.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:17:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+Long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3545/pattern-ver1-serial/nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowFileQueue.java-summarize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
-long mantissa=value;
+Long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3545/pattern-ver1-serial/nifi-nar-bundles.nifi-framework-bundle.nifi-framework.nifi-framework-core.src.main.java.org.apache.nifi.controller.StandardFlowFileQueue.java-summarize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=1000;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4169/pattern-ver1-serial/src.mygame.Player.java-Player.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=0.0;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa,2)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp,2));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value,2));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=4;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:18:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+' '+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2387/pattern-ver1-serial/sphinx4-core.src.main.java.edu.cmu.sphinx.result.Nbest.java-getNewPathString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==9){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/4103/pattern-ver1-serial/src.eu.hansolo.enzo.qlocktwo.QlockGerman.java-getTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==9&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/4103/pattern-ver1-serial/src.eu.hansolo.enzo.qlocktwo.QlockGerman.java-getTime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
-exp++;
+prev++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
-exp++;
+value++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
-exp++;
+mantissa++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
-exp++;
+x++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x!=x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/4543/pattern-ver1-serial/launcher.src.main.java.com.benny.openlauncher.widget.GridAppDrawer.java-readyForDrag.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:19:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x!=!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/4543/pattern-ver1-serial/launcher.src.main.java.com.benny.openlauncher.widget.GridAppDrawer.java-readyForDrag.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:20:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+1)!=value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/4543/pattern-ver1-serial/launcher.src.main.java.com.benny.openlauncher.widget.GridAppDrawer.java-readyForDrag.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:20:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<100&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2154/pattern-ver1-serial/src.ID3Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<11&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2044/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.item.ItemRelocatorModule.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:23:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Solution---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<1&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/7783/pattern-ver1-serial/coup.Driver.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+mantissa+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+exp+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>0){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/2887/pattern-ver1-serial/app.src.main.java.com.unisofia.fmi.pfly.ui.adapter.TasksAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=8){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4137/pattern-ver1-serial/src.bots.RunBot.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==50){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/633/pattern-ver1-serial/core.src.main.java.brooklyn.util.task.SingleThreadedScheduler.java-submit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==50&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/633/pattern-ver1-serial/core.src.main.java.brooklyn.util.task.SingleThreadedScheduler.java-submit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+Boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/934/pattern-ver1-serial/mifosng-provider.src.main.java.org.mifosplatform.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer.java-commandFromApiJson.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
+add(String.valueOf(x));
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
+ final char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+ final long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ final char prev=getLastChar();
+ final boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ char prev=getLastChar();
+ boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
+ char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+ long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
+ char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
-int exp=0;
+ int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
+ char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
-long mantissa=value;
+ long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+ long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add(" ".trim());
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Iterator;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==-1&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Iterator;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev==-1){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:27:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(prev==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+prev++;
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+mantissa++;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+value++;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+mantissa++;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+mantissa++;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+exp++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+prev++;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+prev++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+exp--;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+prev--;
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+exp--;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+exp--;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+exp--;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+mantissa--;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+value--;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+mantissa--;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+exp--;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+exp--;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+prev--;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+prev--;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+value++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3681/pattern-ver1-serial/src.main.java.halo.query.Query.java-buildArgs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev!=0){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+synchronized(this){
 mantissa/=10;
+}
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+addNumber(x);
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+addNumber(x);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+addNumber(x);
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+addNumber(prev);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+addNumber(prev);
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+addNumber(prev);
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+addNumber(prev);
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+addNumber(x);
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf((int)(x)));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+boolean negativeZero=isNegativeZero((int)(x));
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs((int)(x))>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString((int)(exp)));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add((" ").toLowerCase());
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+(int)(1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+-1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+synchronized(this){
 add(String.valueOf(x));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+synchronized(this){
 add(Long.toString(value));
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+if(equals(x)){
+return ;
+}
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+}
+if(equals(x)){
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if(equals(x)){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(equals(x)){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+}
+if(equals(negativeZero)){
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev<0){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
+while(true){
+
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+while(true){
+
+}
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+while(true){
+
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+while(true){
+
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+while(true){
+
+}
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+while(true){
+
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+while(true){
+
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.format("%04d",x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/350/pattern-ver1-serial/src.main.java.jp.co.tabocom.teratermstation.model.TargetNode.java-sortChildren.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev>0){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
+synchronized(this){
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+synchronized(this){
 if(x<0&&prev=='-'){
 add(" ");
+}
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+synchronized(this){
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
+synchronized(this){
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if(x==prev){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if(prev==x){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(x==value){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(x==mantissa){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(x==exp){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(value==x){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(mantissa==x){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+if(prev==getLastChar()){
+return ;
+}
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+if(negativeZero==isNegativeZero(x)){
+return ;
+}
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+if(prev==getLastChar()){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+synchronized(this){
 add(" ");
+}
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+if(10!=0){
 mantissa/=10;
+}
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+if("index".equals(x)){
+return ;
+}
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if("index".equals(x)){
+return ;
+}
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if("index".equals(prev)){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+if("index".equals(negativeZero)){
+return ;
+}
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+if("index".equals(x)){
+return ;
+}
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if("index".equals(value)){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if("index".equals(mantissa)){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if("index".equals(exp)){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+if("index".equals(mantissa)){
+return ;
+}
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+if("index".equals(value)){
+return ;
+}
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if("&null".equals(x)){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if("&null".equals(value)){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+if("&null".equals(x)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if("&null".equals(prev)){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+if("&null".equals(negativeZero)){
+return ;
+}
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if("&null".equals(value)){
+return ;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+if("&null".equals(value)){
+return ;
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if("&null".equals(x)){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if("&null".equals(mantissa)){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add((Long.toString(value)).toLowerCase());
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/5971/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.SmisCommandHelper.java-getExistingPortGroupsFromArray.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,30-(exp+1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:42:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(30-(10),exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x).trim());
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value).trim());
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ @SuppressWarnings("UnusedAssignment") char prev=getLastChar();
+ @SuppressWarnings("UnusedAssignment") boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
+ @SuppressWarnings("UnusedAssignment") long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ @SuppressWarnings("UnusedAssignment") char prev=getLastChar();
+ @SuppressWarnings("UnusedAssignment") boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
-long mantissa=value;
+ @SuppressWarnings("UnusedAssignment") long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
-char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+ @SuppressWarnings("UnusedAssignment") char prev=getLastChar();
+ @SuppressWarnings("UnusedAssignment") boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
-int exp=0;
+ @SuppressWarnings("UnusedAssignment") int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+1+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+add(" ");
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+x=x;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+add(" ");
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev+prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev+x=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+prev);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+negativeZero);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+add(" ");
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+add(" ");
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+add(" ");
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:50:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+value=1000;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(true){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=10*prev;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=10*x;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=10*value;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=10*mantissa;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=10*exp;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+if(x<0){
+return ;
+}
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+}
+if(x<0){
+return ;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+if(x<0){
+return ;
+}
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(x<0){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa<0){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(exp<0){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(value<0){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+if(value<0){
+return ;
+}
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("https://myschool.ru.is/myschool/"+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add("https://myschool.ru.is/myschool/"+Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add("Succeeded to create a home: "+Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/5704/pattern-ver1-serial/myapplication.src.main.java.tinkermode.com.myapplication.VerifyAccountActivity.java-done.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=0xEfffffff&(10);
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x)+" votes");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value)+" votes");
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2/2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+int a=0;
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+int a=0;
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+int a=0;
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+int a=0;
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+int a=0;
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+int a=0;
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+int a=0;
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+int a=0;
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(2.0*(10),exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,2.0*(exp+1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("There was a problem with the call to ManyWho: "+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add("There was a problem with the call to ManyWho: "+Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("Your Victory Points: "+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/6304/pattern-ver1-serial/AtlantisGame.src.client.game.GameModel.java-processMessage.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+String OUTSTRING="";
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+String OUTSTRING="";
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+String OUTSTRING="";
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+String OUTSTRING="";
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+String OUTSTRING="";
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+String OUTSTRING="";
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+String OUTSTRING="";
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+String OUTSTRING="";
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=12*3600000){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/459/pattern-ver1-serial/app.src.main.java.com.example.android.sunshine.app.sync.SunshineSyncAdapter.java-notifyWeather.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(Strings.nullToEmpty(String.valueOf(x)));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Strings.nullToEmpty(Long.toString(value)));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:55:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add(Strings.nullToEmpty(" "));
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+int Math=5;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+" "+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/5436/pattern-ver1-serial/src.ObjectModel.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(Math.round(10),exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,Math.round(exp+1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add((String.valueOf(x)).toLowerCase());
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+' ');
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2387/pattern-ver1-serial/sphinx4-core.src.main.java.edu.cmu.sphinx.result.Nbest.java-getNewPathString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(Double.isNaN(exp)){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+(Integer.toString(exp)+1));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("￥"+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3610/pattern-ver1-serial/app.src.main.java.appframe.appframe.widget.swiperefresh.SwipeRefreshXMyAnswerAdapater.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(Math.abs(x)));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
-boolean negativeZero=isNegativeZero(x);
+boolean negativeZero=isNegativeZero(Math.abs(x));
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(Math.abs(x))>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(Math.abs(exp)));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 01:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
 add(" ");
+if(x<0&&prev=='-'){
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa==0){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if(mantissa==0){
+return ;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+if(mantissa==0){
+return ;
+}
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+int indexSelection=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+int indexSelection=0;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
+int indexSelection=0;
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+int indexSelection=0;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+int indexSelection=0;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+int indexSelection=0;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+int indexSelection=0;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,Math.max(10,exp+1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(Math.max(10,exp+1),exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa/2)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3673/pattern-ver1-serial/src.com.tomclaw.mandarin.mmp.MmpSession.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value/2));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3673/pattern-ver1-serial/src.com.tomclaw.mandarin.mmp.MmpSession.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("PATH: \n"+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add("PATH: \n"+Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(String.valueOf(x)));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(String.valueOf(Long.toString(value)));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=mantissa+10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+int a=1;
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+int a=1;
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+int a=1;
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+int a=1;
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:03:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+int a=1;
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+int a=1;
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+int a=1;
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+int a=1;
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x)+"/logout");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value)+"/logout");
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add("\nDealer has: \n"+String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add("\nDealer has: \n"+Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+boolean Math=true;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+boolean Long=true;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+boolean Integer=true;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+value);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+mantissa);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+boolean b=true;
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+boolean b=true;
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+boolean b=true;
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+boolean b=true;
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+boolean b=true;
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+boolean b=true;
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+boolean b=true;
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+boolean b=true;
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa).trim()+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/5751/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.play.collection.info.ResourceInfoView.java-setCountryCodeDetails.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+mantissa/=10;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+mantissa/=10;
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
 exp++;
 }
+mantissa/=10;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(negativeZero&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+mantissa/=10;
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+mantissa/=10;
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+mantissa/=10;
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+while(mantissa/10*Math.pow(10,exp+1)==value){
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+mantissa/=10;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+mantissa/=10;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:07:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+mantissa/=10;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+mantissa/=10;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+mantissa/=10;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2||exp==Long.MIN_VALUE){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+int exp=0;
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
-int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
 exp++;
 }
 }
+mantissa/=10;
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
+mantissa/=10;
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(Long.toString(value).replace("\"",""));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2617/pattern-ver1-serial/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.realtime.FilterExpressionCodeGenerator.java-visit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+String vis=new String();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(vis.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/6385/pattern-ver1-serial/app.src.main.java.commdgriest.httpsgithub.wimk.Inventory.java-searchByName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+String utils=new String();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(utils.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V26/5772/pattern-ver1-serial/RunQuery.src.retrieWin.PatternBuilder.Aju.java-runBootStrapforEntityAndNER.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+assert (prev!=getLastChar());
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+assert (negativeZero!=isNegativeZero(x));
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+assert (mantissa!=value);
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+assert (exp!=0);
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+assert (value!=(long)x);
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+exp++;
 }else {
 add(Long.toString(value));
+exp++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+exp++;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+exp++;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+exp++;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+exp++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+exp++;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+exp++;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+exp++;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+exp++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
 exp++;
 }
 }
+mantissa++;
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
 exp++;
 }
+mantissa++;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+mantissa++;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+mantissa++;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+mantissa/=-1;
+mantissa++;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+if(!negativeZero){
+throw new IllegalStateException("マージ対象のファイルが一つも見つかりませんでした。");
+}
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4688/pattern-ver1-serial/src.org.teachothers.fishwatchr.CommentList.java-merge.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2||"查看红包".equals(exp)){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100||"查看红包".equals(Math.abs(x))){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2||exp==3){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100||Math.abs(x)==3){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+add(Long.toString(value));
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+add(Long.toString(value));
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+add(Long.toString(value));
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+add(Long.toString(value));
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+add(Long.toString(value));
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(value));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+add(Long.toString(value));
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+add(String.valueOf(x));
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+add(String.valueOf(x));
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(String.valueOf(x));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:12:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+add(String.valueOf(x));
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+add(String.valueOf(x));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+add(String.valueOf(x));
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+add(String.valueOf(x));
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+add(Long.toString(value));
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp<0||exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)<0||Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:13:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+1+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+add(Long.toString(value));
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+add(String.valueOf(x));
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+add(Long.toString(value));
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+add(String.valueOf(x));
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+add(String.valueOf(x));
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+add(String.valueOf(x));
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+add(String.valueOf(x));
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(true){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&negativeZero){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100==false){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x&&(long)x>=0&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&x>=0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100||Math.abs(x)==Long.MIN_VALUE){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+add(Long.toString(value));
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+long value=(long)x;
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
-long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if((x<0||x=='\'')&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:15:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(((long)x==x||(long)x=='\'')&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2||exp==0){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100||Math.abs(x)==0){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("ClientConnector{"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/4331/pattern-ver1-serial/src.main.java.net.openhft.chronicle.map.TcpReplicator.java-toString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2||exp>9){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100||Math.abs(x)>9){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add((Long.toString(mantissa)!=null?Long.toString(mantissa)+"E":"")+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/3147/pattern-ver1-serial/src.com.pindroid.action.IntentHelper.java-ViewNote.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x+" -u "+x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x+" -u "+prev));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(String.valueOf(x+" -u "+negativeZero));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(prev+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(negativeZero+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(x+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(value+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(mantissa+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:17:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
+add(String.valueOf(x));
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(String.valueOf(x));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+add(String.valueOf(x));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+add(String.valueOf(x));
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+add(String.valueOf(x));
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+add(String.valueOf(x));
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:18:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("["+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/5078/pattern-ver1-serial/benchmark.org.imdea.benchmark.rubis.RUBiSBenchmark.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&Math.abs(x)<4000000){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:19:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&exp<4000000){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+" "+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/5436/pattern-ver1-serial/src.ObjectModel.java-toString.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+add(String.valueOf(x));
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+add(String.valueOf(x));
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Double.isNaN(Math.abs(x))){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100==true){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&exp!=9999){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&Math.abs(x)!=9999){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(100>0&&Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(2>0&&exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+add(Long.toString(value));
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+assert (x>=0):"Receive a negative tratment";
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+assert (x>=0):"Receive a negative tratment";
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
+assert (prev>=0):"Receive a negative tratment";
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+assert (x>=0):"Receive a negative tratment";
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+assert (value>=0):"Receive a negative tratment";
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+assert (value>=0):"Receive a negative tratment";
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+assert (mantissa>=0):"Receive a negative tratment";
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+assert (exp>=0):"Receive a negative tratment";
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+assert (exp>=0):"Receive a negative tratment";
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("&"+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/358/pattern-ver1-serial/src.main.java.com.compomics.util.pride.PrideWebService.java-getQueryURL.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+assert (x!=0):"Receive a size tratment";
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+assert (x!=0):"Receive a size tratment";
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
+assert (prev!=0):"Receive a size tratment";
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
+assert (x!=0):"Receive a size tratment";
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+assert (value!=0):"Receive a size tratment";
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+assert (mantissa!=0):"Receive a size tratment";
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+assert (exp!=0):"Receive a size tratment";
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+assert (value!=0):"Receive a size tratment";
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+assert (exp!=0):"Receive a size tratment";
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E".trim()+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/5751/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.play.collection.info.ResourceInfoView.java-setCountryCodeDetails.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:24:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(x>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(exp>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(value>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(x>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(exp<=0){
+exp=1;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa<0){
+mantissa=0;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:25:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if(mantissa<0){
+mantissa=0;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+if(mantissa<0){
+mantissa=0;
+}
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(x<0){
+return ;
+}
 long value=(long)x;
+if(x>=value){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(x<0){
+return ;
+}
 long value=(long)x;
 long mantissa=value;
+if(x>=mantissa){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(x<0){
+return ;
+}
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(x>=exp){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(value<0){
+return ;
+}
+if(value>=x){
+return ;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(mantissa<0){
+return ;
+}
+if(mantissa>=x){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp<0){
+return ;
+}
+if(exp>=x){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(value<0){
+return ;
+}
 long mantissa=value;
+if(value>=mantissa){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:26:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(value<0){
+return ;
+}
 long mantissa=value;
 int exp=0;
+if(value>=exp){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(mantissa<0){
+return ;
+}
+if(mantissa>=value){
+return ;
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(mantissa<0){
+return ;
+}
 int exp=0;
+if(mantissa>=exp){
+return ;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
+if(mantissa!=10){
 exp++;
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*1==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/688/pattern-ver1-serial/src.it.demo.src.main.java.com.example.demo.Target.java-create.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*3==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(value<=0){
+value=1;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa<=0){
+mantissa=1;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp<=0){
+exp=1;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(value<=0){
+value=1;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+if(value<=0){
+value=1;
+}
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(mantissa<=0){
+mantissa=1;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(value>mantissa){
+value=mantissa;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(value>exp){
+value=exp;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(mantissa>value){
+mantissa=value;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(mantissa>exp){
+mantissa=exp;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(mantissa>exp){
+mantissa=exp;
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.concurrent.Executors;
+
+import java.util.concurrent.ExecutorService;
+
+import java.util.Collections;
+
+import java.util.Map;
+
+import java.util.HashMap;
+
+import java.util.concurrent.TimeUnit;
+
+import java.util.concurrent.LinkedBlockingDeque;
+
+import java.util.ArrayList;
+
+import java.util.Comparator;
+
+import java.util.List;
+
+import java.util.concurrent.BlockingQueue;
+
+import java.util.concurrent.ConcurrentHashMap;
+
+import java.util.concurrent.Semaphore;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*4==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/777/pattern-ver1-serial/src.java.picard.sam.markduplicates.EstimateLibraryComplexity.java-EstimateLibraryComplexity.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+if(exp==100){
+exp=0;
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if(exp==100){
+exp=0;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import java.util.Set;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*2.0==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/6462/pattern-ver1-serial/artifact.src.main.java.com.qmatic.regulator.SecondVersionAlgorithm.java-isQueueLevelLessThanSecondQuarterThreshold.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*100.0==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/2302/pattern-ver1-serial/yiDeGuanEx.src.main.java.com.mdground.yizhida.activity.prescription.PrescriptionDrugUseDetailActivity.java-init.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*(int)(Math.pow(10,exp+1))==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*(Math.pow(10,exp+1)+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*-1==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*(int)Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/6656/pattern-ver1-serial/src.game.Game.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*exp==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3014/pattern-ver1-serial/app.src.main.java.com.yatrashare.activities.OfferRideActivity.java-onDateSet.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*prev==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/6925/pattern-ver1-serial/src.MovieList.java-addMovie.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add(String.valueOf(x));
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(" ");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(" ");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
-add(" ");
+add(String.valueOf(x));
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*value==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:30:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+ final String currency=String.valueOf(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
-add(String.valueOf(x));
+add(currency);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
+ final String currency=Long.toString(value);
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(currency);
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev=='-'||"查看红包".equals(x<0)){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x&&!negativeZero||"查看红包".equals((long)x==x)){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev=='-'||prev=='%'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0L||(x<0&&prev=='-')){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x<0L||((long)x==x&&!negativeZero)){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(true){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(true){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x&&!negativeZero&&negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0&&prev=='-'&&negativeZero){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if(!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2329/pattern-ver1-serial/src.main.java.com.shootoff.gui.controller.ShootOFFController.java-setFullScreenStatus.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
+if(x<0){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
-add(Long.toString(value));
+add(String.valueOf(x));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+succeeded=true;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean succeeded=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(!succeeded){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+succeeded=true;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean succeeded=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+succeeded=true;
 }
+if(!succeeded){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+succeeded=true;
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean succeeded=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
+if(!succeeded){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+succeeded=true;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
+succeeded=true;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean succeeded=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+succeeded=true;
+}
 }
+if(!succeeded){
+return ;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+succeeded=true;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+succeeded=true;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean succeeded=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+succeeded=true;
 }
 }else {
 add(String.valueOf(x));
+}
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add((Long.toString(mantissa)+"E"+Integer.toString(exp)).toLowerCase());
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/5971/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.SmisCommandHelper.java-getExistingPortGroupsFromArray.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("https://myschool.ru.is/myschool/"+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean haveBreadCrumbs=false;
 if(x<0&&prev=='-'){
 add(" ");
+haveBreadCrumbs=true;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+haveBreadCrumbs=true;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean haveBreadCrumbs=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+haveBreadCrumbs=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+haveBreadCrumbs=true;
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+haveBreadCrumbs=true;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean haveBreadCrumbs=false;
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+haveBreadCrumbs=true;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&haveBreadCrumbs){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("Succeeded to create a home: "+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/5704/pattern-ver1-serial/myapplication.src.main.java.tinkermode.com.myapplication.VerifyAccountActivity.java-done.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp)+" votes");
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("There was a problem with the call to ManyWho: "+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp).replace("\"",""));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2617/pattern-ver1-serial/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.realtime.FilterExpressionCodeGenerator.java-visit.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp).trim());
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3379/pattern-ver1-serial/Android-Client.app.src.main.java.vitymobi.com.todobluemix.ActivityLogin.java-validanteCredentials.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp)+" -u "+prev);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp)+" -u "+negativeZero);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Strings.nullToEmpty(Long.toString(mantissa)+"E"+Integer.toString(exp)));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp).subSequence(0,6));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("PATH: \n"+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(String.valueOf(Long.toString(mantissa)+"E"+Integer.toString(exp)));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp)+"/logout");
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add("\nDealer has: \n"+Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+synchronized(this){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+}
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
-add(" ");
-}
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
+if(x<0&&prev=='-'){
+add(" ");
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
-add(" ");
-}
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+if(x<0&&prev=='-'){
+add(" ");
+}
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+1)+prev==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+1)+x==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa/10*Math.pow(10,exp+1)+value==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+if(x==3){
+System.out.println("debug");
+}
 add(" ");
+if(x==3){
+System.out.println("debug");
+}
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+if(x==3){
+System.out.println("debug");
+}
 add(String.valueOf(x));
+if(x==3){
+System.out.println("debug");
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(x==3){
+System.out.println("debug");
+}
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(x==3){
+System.out.println("debug");
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+if(prev==3){
+System.out.println("debug");
+}
 add(String.valueOf(x));
+if(prev==3){
+System.out.println("debug");
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+if(prev==3){
+System.out.println("debug");
+}
 add(Long.toString(value));
+if(prev==3){
+System.out.println("debug");
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+if(prev==3){
+System.out.println("debug");
+}
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+if(prev==3){
+System.out.println("debug");
+}
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+if(prev==3){
+System.out.println("debug");
+}
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if(prev==3){
+System.out.println("debug");
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+if(prev==3){
+System.out.println("debug");
+}
 add(" ");
+if(prev==3){
+System.out.println("debug");
+}
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+if(prev==3){
+System.out.println("debug");
+}
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(prev==3){
+System.out.println("debug");
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+if(prev==3){
+System.out.println("debug");
+}
 mantissa/=10;
 exp++;
+if(prev==3){
+System.out.println("debug");
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(mantissa==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
+if(exp>2&&!negativeZero){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 1, DEL : 10
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
+boolean haveBreadCrumbs=false;
 if(x<0&&prev=='-'){
 add(" ");
+haveBreadCrumbs=true;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&haveBreadCrumbs){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&haveBreadCrumbs){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+haveBreadCrumbs=true;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
+boolean haveBreadCrumbs=false;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&haveBreadCrumbs){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+haveBreadCrumbs=true;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 5, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
+while(true){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/1657/pattern-ver1-serial/reversi.src.main.java.org.kratos.reversi.application.View.java-run.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+ final String dropStatement=Long.toString(mantissa)+"E"+Integer.toString(exp);
+add(dropStatement);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 9, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
-if((long)x==x&&!negativeZero){
+if((long)x==x){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
-if(Math.abs(x)>=100){
+if(Math.abs(x)>=100&&!negativeZero){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+ final String currency=Long.toString(mantissa)+"E"+Integer.toString(exp);
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+add(currency);
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 9, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
+long startTime=System.currentTimeMillis();
 add(String.valueOf(x));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
+long startTime=System.currentTimeMillis();
 add(" ");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+long startTime=System.currentTimeMillis();
 add(Long.toString(value));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
+long startTime=System.currentTimeMillis();
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+long startTime=System.currentTimeMillis();
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+long startTime=System.currentTimeMillis();
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
+long startTime=System.currentTimeMillis();
 mantissa/=10;
 exp++;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
+long startTime=System.currentTimeMillis();
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
-}else {
 add(Long.toString(value));
+}else {
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
+synchronized(this){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
+if(exp==12){
+return ;
+}else {
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
-}
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
-}
-}
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+}else {
+add(Long.toString(value));
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
+if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+}else {
+add(Long.toString(value));
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(Math.abs(x)==12){
+return ;
+}else {
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
+}
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+}else {
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
-}else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp>2){
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
+if(Math.abs(x)>=100){
+while(mantissa/10*Math.pow(10,exp+1)==value){
+mantissa/=10;
+exp++;
+}
+}
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(Math.abs(x)>=100){
+while(mantissa/10*Math.pow(10,exp+1)==value){
+mantissa/=10;
+exp++;
+}
+}
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:44:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
+if(exp>2){
+add(Long.toString(mantissa)+"E"+Integer.toString(exp));
+}else {
+add(Long.toString(value));
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
-if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
-}else {
-add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
 if(x<0&&prev=='-'){
 add(" ");
 }
 if((long)x==x&&!negativeZero){
+synchronized(this){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
+}
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 49, UPD : 49, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
-add(" ");
-}
 if((long)x==x&&!negativeZero){
 long value=(long)x;
 long mantissa=value;
 int exp=0;
 if(Math.abs(x)>=100){
 while(mantissa/10*Math.pow(10,exp+1)==value){
 mantissa/=10;
 exp++;
 }
 }
 if(exp>2){
 add(Long.toString(mantissa)+"E"+Integer.toString(exp));
 }else {
 add(Long.toString(value));
 }
 }else {
 add(String.valueOf(x));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 4, INS : 0, DEL : 48
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:45:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/CodeConsumer.java[240,267]
------------Candidate---------------
 void addNumber(double x){
 char prev=getLastChar();
 boolean negativeZero=isNegativeZero(x);
-if(x<0&&prev=='-'){
-add(" ");
-}
-if((long)x==x&&!negativeZero){
-long value=(long)x;
-long mantissa=value;
-int exp=0;
-if(Math.abs(x)>=100){
-while(mantissa/10*Math.pow(10,exp+1)==value){
-mantissa/=10;
-exp++;
-}
-}
-if(exp>2){
-add(Long.toString(mantissa)+"E"+Integer.toString(exp));
-}else {
-add(Long.toString(value));
-}
-}else {
-add(String.valueOf(x));
-}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 90, UPD : 4, INS : 0, DEL : 86
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 02:45:26 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.NodeUtil.opToStr:[2148, 2124, 2166, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165]#1.0
Compute Candidate : 2019.09.05 AD at 02:47:12 CDT - 2019.09.05 AD at 03:20:46 CDT , PNumber : 11188, CandNumber : 158 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
-return null;
+return new String();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5649/pattern-ver1-serial/src.todolist.logic.FunctionChecker.java-deleteChecker.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return null;
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return null;
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return null;
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return null;
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return null;
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return null;
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return null;
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return null;
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:21:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return null;
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return null;
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
-return null;
+return "";
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/5469/pattern-ver1-serial/OnlineBookStoreServer.src.Server.Routines.java-getMYSQLPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
+case 401 :
+
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
+
+case 4 :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2088/pattern-ver1-serial/core.src.com.finalstand.game.Screens.PlayScreen.java-findCreepStartingPos.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:23:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "type";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
-return "void";
+return "type";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "type";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "type";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "type";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "type";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "type";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:24:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "type";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "type";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "type";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4968/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
+import java.util.Iterator;
+
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
+
+case 5 :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1378/pattern-ver1-serial/src.haven.OptWnd.java-changed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "byte";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
-return "void";
+return "byte";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "byte";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "byte";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "byte";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "byte";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "byte";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "byte";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "byte";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "byte";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/5150/pattern-ver1-serial/src.wyil.lang.Type.java-toString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
-return "void";
+return "";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/2335/pattern-ver1-serial/ds3-autogen-c.src.main.java.com.spectralogic.ds3autogen.c.helpers.RequestHelper.java-getAmazonS3InitParams.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:26:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return opToStr(0);
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return opToStr(0);
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return opToStr(0);
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return opToStr(0);
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return opToStr(0);
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return opToStr(0);
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return opToStr(0);
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return opToStr(0);
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:27:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return opToStr(0);
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return opToStr(0);
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-".trim();
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|".trim();
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||".trim();
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^".trim();
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&".trim();
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&".trim();
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "===".trim();
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "==".trim();
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!".trim();
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!=".trim();
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return new String("-");
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return new String("|");
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return new String("||");
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return new String("^");
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return new String("&&");
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return new String("&");
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return new String("===");
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return new String("==");
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return new String("!");
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return new String("!=");
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-".toLowerCase();
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|".toLowerCase();
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||".toLowerCase();
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^".toLowerCase();
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&".toLowerCase();
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&".toLowerCase();
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "===".toLowerCase();
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "==".toLowerCase();
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!".toLowerCase();
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!=".toLowerCase();
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return (String)("-");
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return (String)("|");
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return (String)("||");
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return (String)("^");
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return (String)("&&");
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return (String)("&");
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return (String)("===");
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return (String)("==");
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return (String)("!");
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return (String)("!=");
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
-static String opToStr(int operator){
-switch (operator){
+static String opToStr(int stepNumber){
+switch (stepNumber){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6757/pattern-ver1-serial/app.src.main.java.verticalstepperform.ernestoyaquello.com.verticalstepperform.NewAlarmFormActivity.java-createStepContentView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+int a=0;
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+String OUTSTRING="";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+int a=1;
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+String SUB="%#.&f";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+String BITOR="%#.&f";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+String OR="%#.&f";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+boolean b=true;
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+if(operator<0){
+return null;
+}
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-".replaceAll("\r","");
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|".replaceAll("\r","");
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||".replaceAll("\r","");
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^".replaceAll("\r","");
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&".replaceAll("\r","");
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&".replaceAll("\r","");
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "===".replaceAll("\r","");
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "==".replaceAll("\r","");
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!".replaceAll("\r","");
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!=".replaceAll("\r","");
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return String.format("%s","-");
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return String.format("%s","|");
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return String.format("%s","||");
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return String.format("%s","^");
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return String.format("%s","&&");
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return String.format("%s","&");
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return String.format("%s","===");
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return String.format("%s","==");
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return String.format("%s","!");
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return String.format("%s","!=");
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-"==null?"":"-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|"==null?"":"|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||"==null?"":"||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^"==null?"":"^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&"==null?"":"&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&"==null?"":"&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "==="==null?"":"===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "=="==null?"":"==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!"==null?"":"!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!="==null?"":"!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-"!=null?"-":new String();
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|"!=null?"|":new String();
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||"!=null?"||":new String();
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^"!=null?"^":new String();
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&"!=null?"&&":new String();
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&"!=null?"&":new String();
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "==="!=null?"===":new String();
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "=="!=null?"==":new String();
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!"!=null?"!":new String();
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!="!=null?"!=":new String();
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
-return "-";
+return "-"==null?new String():"-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
-return "|";
+return "|"==null?new String():"|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
-return "||";
+return "||"==null?new String():"||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
-return "^";
+return "^"==null?new String():"^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
-return "&&";
+return "&&"==null?new String():"&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
-return "&";
+return "&"==null?new String():"&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
-return "===";
+return "==="==null?new String():"===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
-return "==";
+return "=="==null?new String():"==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
-return "!";
+return "!"==null?new String():"!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
-return "!=";
+return "!="==null?new String():"!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+assert (operator>=0):"Receive a negative tratment";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 static String opToStr(int operator){
+assert (operator!=0):"Receive a size tratment";
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/NodeUtil.java[2115,2168]
------------Candidate---------------
 static String opToStr(int operator){
+if(operator>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 switch (operator){
 case Token.BITOR :
 
 return "|";
 case Token.OR :
 
 return "||";
 case Token.BITXOR :
 
 return "^";
 case Token.AND :
 
 return "&&";
 case Token.BITAND :
 
 return "&";
 case Token.SHEQ :
 
 return "===";
 case Token.EQ :
 
 return "==";
 case Token.NOT :
 
 return "!";
 case Token.NE :
 
 return "!=";
 case Token.SHNE :
 
 return "!==";
 case Token.LSH :
 
 return "<<";
 case Token.IN :
 
 return "in";
 case Token.LE :
 
 return "<=";
 case Token.LT :
 
 return "<";
 case Token.URSH :
 
 return ">>>";
 case Token.RSH :
 
 return ">>";
 case Token.GE :
 
 return ">=";
 case Token.GT :
 
 return ">";
 case Token.MUL :
 
 return "*";
 case Token.DIV :
 
 return "/";
 case Token.MOD :
 
 return "%";
 case Token.BITNOT :
 
 return "~";
 case Token.ADD :
 
 return "+";
 case Token.SUB :
 
 return "-";
 case Token.POS :
 
 return "+";
 case Token.NEG :
 
 return "-";
 case Token.ASSIGN :
 
 return "=";
 case Token.ASSIGN_BITOR :
 
 return "|=";
 case Token.ASSIGN_BITXOR :
 
 return "^=";
 case Token.ASSIGN_BITAND :
 
 return "&=";
 case Token.ASSIGN_LSH :
 
 return "<<=";
 case Token.ASSIGN_RSH :
 
 return ">>=";
 case Token.ASSIGN_URSH :
 
 return ">>>=";
 case Token.ASSIGN_ADD :
 
 return "+=";
 case Token.ASSIGN_SUB :
 
 return "-=";
 case Token.ASSIGN_MUL :
 
 return "*=";
 case Token.ASSIGN_DIV :
 
 return "/=";
 case Token.ASSIGN_MOD :
 
 return "%=";
 case Token.VOID :
 
 return "void";
 case Token.TYPEOF :
 
 return "typeof";
 case Token.INSTANCEOF :
 
 return "instanceof";
 default :
 
 return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 03:41:43 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.parsing.IRFactory.transformTokenType:[1139, 1153, 1273, 1109, 1111, 1113, 1115, 1117, 1119, 1121, 1123, 1125, 1127, 1129, 1131, 1133, 1135, 1137, 1141, 1143, 1145, 1147, 1149, 1151, 1155, 1157, 1159, 1161, 1163, 1165, 1167, 1169, 1171, 1173, 1175, 1177, 1179, 1181, 1183, 1185, 1187, 1189, 1191, 1193, 1195, 1197, 1200, 1202, 1204, 1206, 1208, 1210, 1212, 1214, 1216, 1218, 1220, 1222, 1224, 1226, 1228, 1230, 1232, 1234, 1236, 1238, 1240, 1242, 1244, 1246, 1248, 1250, 1252, 1254, 1256, 1258, 1260, 1262, 1264, 1266, 1268, 1270, 1275, 1277, 1279, 1281, 1283, 1287]#1.0
Compute Candidate : 2019.09.05 AD at 03:43:27 CDT - 2019.09.05 AD at 05:22:33 CDT , PNumber : 3292, CandNumber : 75 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return 0;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return 0;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return 0;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return 0;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return 0;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return 0;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return 0;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return 0;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return 0;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return 0;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return 1;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return 1;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return 1;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return 1;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return 1;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return 1;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return 1;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return 1;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return 1;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return 1;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return Integer.MIN_VALUE;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return token;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return token;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return token;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return token;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return token;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return token;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return token;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return token;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return token;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return token;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return transformTokenType(0);
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4504/pattern-ver1-serial/microsoftband.src.main.java.org.md2k.microsoftband.PrefsFragmentMicrosoftBandSettings.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/474/pattern-ver1-serial/src.de.azapps.mirakel.main_activity.list_fragment.ListFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3878/pattern-ver1-serial/app.src.main.java.com.mybus.activity.DisplayFavoritesActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5850/pattern-ver1-serial/core.src.main.java.com.nfsdb.net.http.RequestHeaderBuffer.java-write.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V28/3550/pattern-ver1-serial/showcase.src.main.java.fr.bmartel.youtubetv.showcase.cards.presenter.ImageCardViewPresenter.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
+default :
+
+break;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/3512/pattern-ver1-serial/disambiguation-work.src.main.java.pl.edu.icm.coansys.disambiguation.work.tool.StringTools.java-romanToDecimal.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
+token++;
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
+token--;
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
-throw new IllegalStateException(String.valueOf(token));
+throw new IllegalStateException(String.valueOf(token).trim());
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
-return Token.SUB;
+return Token.SUB&0xff;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
-return Token.NEG;
+return Token.NEG&0xff;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
-return Token.EXPR_RESULT;
+return Token.EXPR_RESULT&0xff;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
-return Token.RETURN;
+return Token.RETURN&0xff;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
-return Token.BITOR;
+return Token.BITOR&0xff;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
-return Token.EQ;
+return Token.EQ&0xff;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
-return Token.BITXOR;
+return Token.BITXOR&0xff;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
-return Token.NE;
+return Token.NE&0xff;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
-return Token.LT;
+return Token.LT&0xff;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
-return Token.BITAND;
+return Token.BITAND&0xff;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
-throw new IllegalStateException(String.valueOf(token));
+throw new IllegalStateException("https://myschool.ru.is/myschool/"+String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
+if("index".equals(token)){
+return 0;
+}
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
+if(token<0){
+return 0;
+}
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
+}
+if(token<0){
+return 0;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
+if(token>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_38_buggy/src/com/google/javascript/jscomp/parsing/IRFactory.java[1108,1288]
------------Candidate---------------
 private static int transformTokenType(int token){
 switch (token){
 case com.google.javascript.rhino.head.Token.RETURN :
 
 return Token.RETURN;
 case com.google.javascript.rhino.head.Token.BITOR :
 
 return Token.BITOR;
 case com.google.javascript.rhino.head.Token.BITXOR :
 
 return Token.BITXOR;
 case com.google.javascript.rhino.head.Token.BITAND :
 
 return Token.BITAND;
 case com.google.javascript.rhino.head.Token.EQ :
 
 return Token.EQ;
 case com.google.javascript.rhino.head.Token.NE :
 
 return Token.NE;
 case com.google.javascript.rhino.head.Token.LT :
 
 return Token.LT;
 case com.google.javascript.rhino.head.Token.LE :
 
 return Token.LE;
 case com.google.javascript.rhino.head.Token.GT :
 
 return Token.GT;
 case com.google.javascript.rhino.head.Token.GE :
 
 return Token.GE;
 case com.google.javascript.rhino.head.Token.LSH :
 
 return Token.LSH;
 case com.google.javascript.rhino.head.Token.RSH :
 
 return Token.RSH;
 case com.google.javascript.rhino.head.Token.URSH :
 
 return Token.URSH;
 case com.google.javascript.rhino.head.Token.ADD :
 
 return Token.ADD;
 case com.google.javascript.rhino.head.Token.SUB :
 
 return Token.SUB;
 case com.google.javascript.rhino.head.Token.MUL :
 
 return Token.MUL;
 case com.google.javascript.rhino.head.Token.DIV :
 
 return Token.DIV;
 case com.google.javascript.rhino.head.Token.MOD :
 
 return Token.MOD;
 case com.google.javascript.rhino.head.Token.NOT :
 
 return Token.NOT;
 case com.google.javascript.rhino.head.Token.BITNOT :
 
 return Token.BITNOT;
 case com.google.javascript.rhino.head.Token.POS :
 
 return Token.POS;
 case com.google.javascript.rhino.head.Token.NEG :
 
 return Token.NEG;
 case com.google.javascript.rhino.head.Token.NEW :
 
 return Token.NEW;
 case com.google.javascript.rhino.head.Token.DELPROP :
 
 return Token.DELPROP;
 case com.google.javascript.rhino.head.Token.TYPEOF :
 
 return Token.TYPEOF;
 case com.google.javascript.rhino.head.Token.GETPROP :
 
 return Token.GETPROP;
 case com.google.javascript.rhino.head.Token.GETELEM :
 
 return Token.GETELEM;
 case com.google.javascript.rhino.head.Token.CALL :
 
 return Token.CALL;
 case com.google.javascript.rhino.head.Token.NAME :
 
 return Token.NAME;
 case com.google.javascript.rhino.head.Token.NUMBER :
 
 return Token.NUMBER;
 case com.google.javascript.rhino.head.Token.STRING :
 
 return Token.STRING;
 case com.google.javascript.rhino.head.Token.NULL :
 
 return Token.NULL;
 case com.google.javascript.rhino.head.Token.THIS :
 
 return Token.THIS;
 case com.google.javascript.rhino.head.Token.FALSE :
 
 return Token.FALSE;
 case com.google.javascript.rhino.head.Token.TRUE :
 
 return Token.TRUE;
 case com.google.javascript.rhino.head.Token.SHEQ :
 
 return Token.SHEQ;
 case com.google.javascript.rhino.head.Token.SHNE :
 
 return Token.SHNE;
 case com.google.javascript.rhino.head.Token.REGEXP :
 
 return Token.REGEXP;
 case com.google.javascript.rhino.head.Token.THROW :
 
 return Token.THROW;
 case com.google.javascript.rhino.head.Token.IN :
 
 return Token.IN;
 case com.google.javascript.rhino.head.Token.INSTANCEOF :
 
 return Token.INSTANCEOF;
 case com.google.javascript.rhino.head.Token.ARRAYLIT :
 
 return Token.ARRAYLIT;
 case com.google.javascript.rhino.head.Token.OBJECTLIT :
 
 return Token.OBJECTLIT;
 case com.google.javascript.rhino.head.Token.TRY :
 
 return Token.TRY;
 case com.google.javascript.rhino.head.Token.LP :
 
 return Token.PARAM_LIST;
 case com.google.javascript.rhino.head.Token.COMMA :
 
 return Token.COMMA;
 case com.google.javascript.rhino.head.Token.ASSIGN :
 
 return Token.ASSIGN;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITOR :
 
 return Token.ASSIGN_BITOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITXOR :
 
 return Token.ASSIGN_BITXOR;
 case com.google.javascript.rhino.head.Token.ASSIGN_BITAND :
 
 return Token.ASSIGN_BITAND;
 case com.google.javascript.rhino.head.Token.ASSIGN_LSH :
 
 return Token.ASSIGN_LSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_RSH :
 
 return Token.ASSIGN_RSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_URSH :
 
 return Token.ASSIGN_URSH;
 case com.google.javascript.rhino.head.Token.ASSIGN_ADD :
 
 return Token.ASSIGN_ADD;
 case com.google.javascript.rhino.head.Token.ASSIGN_SUB :
 
 return Token.ASSIGN_SUB;
 case com.google.javascript.rhino.head.Token.ASSIGN_MUL :
 
 return Token.ASSIGN_MUL;
 case com.google.javascript.rhino.head.Token.ASSIGN_DIV :
 
 return Token.ASSIGN_DIV;
 case com.google.javascript.rhino.head.Token.ASSIGN_MOD :
 
 return Token.ASSIGN_MOD;
 case com.google.javascript.rhino.head.Token.HOOK :
 
 return Token.HOOK;
 case com.google.javascript.rhino.head.Token.OR :
 
 return Token.OR;
 case com.google.javascript.rhino.head.Token.AND :
 
 return Token.AND;
 case com.google.javascript.rhino.head.Token.INC :
 
 return Token.INC;
 case com.google.javascript.rhino.head.Token.DEC :
 
 return Token.DEC;
 case com.google.javascript.rhino.head.Token.FUNCTION :
 
 return Token.FUNCTION;
 case com.google.javascript.rhino.head.Token.IF :
 
 return Token.IF;
 case com.google.javascript.rhino.head.Token.SWITCH :
 
 return Token.SWITCH;
 case com.google.javascript.rhino.head.Token.CASE :
 
 return Token.CASE;
 case com.google.javascript.rhino.head.Token.DEFAULT :
 
 return Token.DEFAULT_CASE;
 case com.google.javascript.rhino.head.Token.WHILE :
 
 return Token.WHILE;
 case com.google.javascript.rhino.head.Token.DO :
 
 return Token.DO;
 case com.google.javascript.rhino.head.Token.FOR :
 
 return Token.FOR;
 case com.google.javascript.rhino.head.Token.BREAK :
 
 return Token.BREAK;
 case com.google.javascript.rhino.head.Token.CONTINUE :
 
 return Token.CONTINUE;
 case com.google.javascript.rhino.head.Token.VAR :
 
 return Token.VAR;
 case com.google.javascript.rhino.head.Token.WITH :
 
 return Token.WITH;
 case com.google.javascript.rhino.head.Token.CATCH :
 
 return Token.CATCH;
 case com.google.javascript.rhino.head.Token.VOID :
 
 return Token.VOID;
 case com.google.javascript.rhino.head.Token.EMPTY :
 
 return Token.EMPTY;
 case com.google.javascript.rhino.head.Token.BLOCK :
 
 return Token.BLOCK;
 case com.google.javascript.rhino.head.Token.LABEL :
 
 return Token.LABEL;
 case com.google.javascript.rhino.head.Token.EXPR_VOID :
 
 case com.google.javascript.rhino.head.Token.EXPR_RESULT :
 
 return Token.EXPR_RESULT;
 case com.google.javascript.rhino.head.Token.SCRIPT :
 
 return Token.SCRIPT;
 case com.google.javascript.rhino.head.Token.GET :
 
 return Token.GETTER_DEF;
 case com.google.javascript.rhino.head.Token.SET :
 
 return Token.SETTER_DEF;
 case com.google.javascript.rhino.head.Token.CONST :
 
 return Token.CONST;
 case com.google.javascript.rhino.head.Token.DEBUGGER :
 
 return Token.DEBUGGER;
+}
+if(token>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 throw new IllegalStateException(String.valueOf(token));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.CodePrinterTest::testMinusNegativeZero]
---------START : 2019.09.05 AD at 00:21:58 CDT
---------TIME : 2019.09.05 AD at 05:22:33 CDT
--------------- END -----------------
Finish : closure-38 > patch : 6 | Start : Thu Sep 05 00:21:58 CDT 2019 | End : 2019.09.05 AD at 05:22:33 CDT
