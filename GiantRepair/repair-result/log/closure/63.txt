Repair : closure_63
Current failed test : com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1 | 2019.09.06 AD at 06:06:59 CDT
Location : com.google.javascript.jscomp.LightweightMessageFormatter.format:[90, 91, 92, 97, 76, 77, 78, 79, 81, 68, 69, 74, 75, 84, 85, 87, 88, 89, 110, 99, 100, 101, 102, 104, 107]#1.0
Compute Candidate : 2019.09.06 AD at 06:08:46 CDT - 2019.09.06 AD at 07:03:56 CDT , PNumber : 11414, CandNumber : 719 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+continue;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+continue;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+continue;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>1){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5133/pattern-ver1-serial/app.src.main.java.com.bignerdranch.android.photogallery.PhotoGalleryFragment.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:04:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>=0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt==null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return null;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+return null;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+return null;
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return null;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+return null;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:06:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=source!=null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:06:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+long charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:06:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<=sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i<=charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+StringBuilder b=new StringBuilder(null);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno>sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i>charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+break;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+break;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+break;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+float charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i<charno;i--){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=error==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+StringBuilder b=new StringBuilder(1);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=""){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V29/276/pattern-ver1-serial/src.edu.cpp.cs.cs141.final_project.User_Interface.TextUI.TextUserInterface.java-drawAlertText.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=""){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V29/276/pattern-ver1-serial/src.edu.cpp.cs.cs141.final_project.User_Interface.TextUI.TextUserInterface.java-drawAlertText.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber!=0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+Integer charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.io.UnsupportedEncodingException;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+StringBuilder b=new StringBuilder("UTF-8");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/5909/pattern-ver1-serial/platform.security.handler.security-handler-api.src.main.java.org.codice.ddf.security.handler.api.PKIAuthenticationToken.java-PKIAuthenticationToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(getLevelName((warning)?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0>=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6682/pattern-ver1-serial/src.Geometry.Graham_Scan.java-leftTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i<charno;charno++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(source!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/4918/pattern-ver1-serial/src.org.traccar.protocol.Gl200ProtocolDecoder.java-decode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(b!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/4918/pattern-ver1-serial/src.org.traccar.protocol.Gl200ProtocolDecoder.java-decode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(error!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/4918/pattern-ver1-serial/src.org.traccar.protocol.Gl200ProtocolDecoder.java-decode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+StringBuilder b=new StringBuilder(2);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:10:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<b.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5292/pattern-ver1-serial/FireSwamp.src.byui.cit260.fireSwamp.controller.GameControl.java-createNewGame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:12:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return "An arena doesn't seem to be built yet.";
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:12:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+return "An arena doesn't seem to be built yet.";
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:12:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+return "";
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return "";
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+return "";
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+return "";
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return "";
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+return "";
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+i++;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber<0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(error.lineNumber);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5087/pattern-ver1-serial/src.main.java.ch.vorburger.raspberry.turtle.Turtle.java-haltInSeconds.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:13:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.lineNumber);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5087/pattern-ver1-serial/src.main.java.ch.vorburger.raspberry.turtle.Turtle.java-haltInSeconds.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(sourceExcerpt);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append('\n');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+b.append("^\n");
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+b.append(':');
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7257/pattern-ver1-serial/src.gamemodel.SpecialWall.java-handleProjectileArrive.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ final StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ final int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ final SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ final int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ final int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ final char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:14:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ final String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ final int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ final SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ final StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ final String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ final StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ final SourceExcerptProvider source=getSource();
+ final String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ final StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ final char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ final String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ final char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:15:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ SourceExcerptProvider source=getSource();
+ String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=source==null?null:this.excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(this.excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(sourceExcerpt.trim());
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append(": ".trim());
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
+b.append(" - ".trim());
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
+b.append("^\n".trim());
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
+b.append(error.sourceName.trim());
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
+b.append(error.description.trim());
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+charno++;
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+charno++;
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+charno++;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+i++;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+i++;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+i++;
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+charno++;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+charno++;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString().trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:18:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+charno--;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+charno--;
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return sourceExcerpt;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+if(excerpt.equals(LINE)&&0<=charno&&charno<=sourceExcerpt.length()){
+for(int i=0;i<=charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return new String(b.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+i--;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+i--;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+i--;
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:19:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+charno--;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+charno--;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return (String)b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return null;
 }else {
 b.append(' ');
+return null;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+synchronized(b){
 b.append(sourceExcerpt);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+synchronized(b){
 b.append('\n');
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+synchronized(b){
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+synchronized(b){
 b.append(':');
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+synchronized(b){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:20:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+synchronized(b){
 b.append(error.lineNumber);
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/5664/pattern-ver1-serial/src.tr.broadcast.BroadcastManager.java-onClaimTokenReceive.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString().toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append((sourceExcerpt).toLowerCase());
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append((": ").toLowerCase());
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
+b.append((" - ").toLowerCase());
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
+b.append(("^\n").toLowerCase());
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
+b.append((error.sourceName).toLowerCase());
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
+b.append((error.description).toLowerCase());
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+synchronized(this){
 b.append(sourceExcerpt);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+synchronized(this){
 b.append('\n');
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+synchronized(this){
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+synchronized(this){
 b.append(':');
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+synchronized(this){
 b.append(error.lineNumber);
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+synchronized(this){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+break;
 }else {
 b.append(' ');
+break;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return (String)(b.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return null;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:22:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return null;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return null;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+return null;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return null;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+return null;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+return null;
 }
 }
 b.append("^\n");
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+return null;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+return null;
 }
 b.append("^\n");
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+while(true){
+
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
+while(true){
+
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+while(true){
+
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:27:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+while(true){
+
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:29:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
+while(true){
+
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+while(true){
+
+}
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+while(true){
+
+}
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+synchronized(this){
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+synchronized(this){
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+synchronized(this){
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+synchronized(this){
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+synchronized(this){
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+i++;
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+i++;
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:30:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+i++;
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V2/6609/pattern-ver1-serial/src.anonscanlations.downloader.chapter.NicoNicoChapter.java-download.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append((sourceExcerpt).toUpperCase());
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append((": ").toUpperCase());
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
+b.append((" - ").toUpperCase());
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
+b.append(("^\n").toUpperCase());
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
+b.append((error.sourceName).toUpperCase());
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
+b.append((error.description).toUpperCase());
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(b!=null){
 b.append(sourceExcerpt);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if(b!=null){
 b.append('\n');
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+if(b!=null){
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(b!=null){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt!=null){
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(error.sourceName!=null){
 if(error.sourceName!=null){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+if("^\n"!=null){
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+if(b!=null){
 b.append(error.lineNumber);
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/3708/pattern-ver1-serial/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.ClientListFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(b!=null){
 b.append(':');
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName+1,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber+1,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt.equals(null)){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName.equals(null)){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+synchronized(this){
 b.append(c);
+}
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(!Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if('\n'>0){
 b.append('\n');
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(':'>0){
 b.append(':');
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+if(c>0){
 b.append(c);
+}
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:33:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt.isEmpty()){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7829/pattern-ver1-serial/app.src.main.java.de.tum.in.tumcampusapp.activities.TransportationDetailsActivity.java-onLoadInBackground.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName.isEmpty()){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7829/pattern-ver1-serial/app.src.main.java.de.tum.in.tumcampusapp.activities.TransportationDetailsActivity.java-onLoadInBackground.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append("]");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append("]");
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+b.append("]");
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append("]");
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+b.append("]");
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append("]");
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append("]");
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("]");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("            scope.apply();\n");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/4602/pattern-ver1-serial/layout.src.main.java.com.flarestar.drones.layout.directives.Click.java-afterViewCreated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ @SuppressWarnings("UnusedAssignment") SourceExcerptProvider source=getSource();
+ @SuppressWarnings("UnusedAssignment") String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ @SuppressWarnings("UnusedAssignment") int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
+ @SuppressWarnings("UnusedAssignment") SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ @SuppressWarnings("UnusedAssignment") StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ @SuppressWarnings("UnusedAssignment") int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+ @SuppressWarnings("UnusedAssignment") String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ @SuppressWarnings("UnusedAssignment") StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
+ @SuppressWarnings("UnusedAssignment") int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
-SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ @SuppressWarnings("UnusedAssignment") SourceExcerptProvider source=getSource();
+ @SuppressWarnings("UnusedAssignment") String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+charno=charno;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+if(i==4){
+continue;
+}
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.isEmpty()){
+return null;
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+charno=1000;
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(true){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(true){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(true){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(true){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)==false){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+if(error!=null){
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+if(sourceExcerpt!=null){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+if(": "!=null){
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7255/pattern-ver1-serial/parser.src.main.java.me.vertretungsplan.objects.Substitution.java-setTeacher.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+int a=0;
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+int a=0;
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+int a=0;
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+int a=0;
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+int a=0;
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+int a=0;
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+int a=0;
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+int a=0;
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=(source==null)?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7415/pattern-ver1-serial/app.src.main.java.com.metinkale.prayerapp.compass.Main.java-onRotationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+String OUTSTRING="";
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+String OUTSTRING="";
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+String OUTSTRING="";
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+String OUTSTRING="";
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+String OUTSTRING="";
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+String OUTSTRING="";
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+String OUTSTRING="";
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+String OUTSTRING="";
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.isEmpty()){
+return null;
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i<charno;){
+i++;
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(Strings.nullToEmpty(sourceExcerpt));
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
+b.append(Strings.nullToEmpty(error.sourceName));
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
+b.append(Strings.nullToEmpty(error.description));
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append(Strings.nullToEmpty(": "));
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+int i=5;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+int c=5;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+int Character=5;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(Double.isNaN(error.lineNumber)){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)==true){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt.equalsIgnoreCase(null)){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/409/pattern-ver1-serial/src.com.wasteofplastic.askyblock.ASkyBlock.java-loadPluginConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName.equalsIgnoreCase(null)){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/409/pattern-ver1-serial/src.com.wasteofplastic.askyblock.ASkyBlock.java-loadPluginConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(equals(sourceExcerpt)){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(equals(sourceExcerpt)){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+if(equals(error)){
+return null;
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+if(equals(error)){
+return null;
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(equals(error)){
+return null;
+}
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if(equals(charno)){
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+int indexSelection=0;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+int indexSelection=0;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+int indexSelection=0;
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+int indexSelection=0;
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+int indexSelection=0;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+int indexSelection=0;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:42:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+int indexSelection=0;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+int indexSelection=0;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(sourceExcerpt.isEmpty()){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if("^\n".isEmpty()){
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if((excerpt.equals(LINE))&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt.isEmpty()){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3182/pattern-ver1-serial/canal-client.src.main.java.com.tqmall.search.canal.handle.TableSectionHandle.java-runRowChangeAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(" & ");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append(" & ");
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append("    }\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("    }\n");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+int a=1;
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+int a=1;
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+int a=1;
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+int a=1;
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+int a=1;
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+int a=1;
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+int a=1;
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+int a=1;
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append(charno);
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+b.append(charno);
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(source);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+boolean Character=true;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+boolean i=true;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString()+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
+if(b!=null){
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+}
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/3203/pattern-ver1-serial/app.src.main.java.ntnu.noront_movies.activities.MovieInfoActivity.java-showMovie.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.startsWith("ldaps")){
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7118/pattern-ver1-serial/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java-validate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
+for(int i=0;i<charno;Math.abs(i++)){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
+char c=sourceExcerpt.charAt(Math.abs(i));
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(Math.abs('\n'));
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
+b.append(Math.abs(error.lineNumber));
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
+b.append(Math.abs(':'));
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(error==null){
+return "";
+}
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(error==null){
+return "";
+}
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(error==null){
+return "";
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+if(error==null){
+return "";
+}
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(b==null){
+return "";
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(b==null){
+return "";
+}
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+if(b==null){
+return "";
+}
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt==null){
+return "";
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/889/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxNumericSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(error==null){
+return null;
+}
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(error==null){
+return null;
+}
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(error==null){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(b==null){
+return null;
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+if(error==null){
+return null;
+}
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if(source==null){
+return null;
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(b==null){
+return null;
+}
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt==null){
+return null;
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||sourceExcerpt.isEmpty()){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/354/pattern-ver1-serial/hapi-fhir-base.src.main.java.ca.uhn.fhir.parser.XmlParser.java-encodeCompositeElementChildrenToStreamWriter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null||error.sourceName.isEmpty()){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/354/pattern-ver1-serial/hapi-fhir-base.src.main.java.ca.uhn.fhir.parser.XmlParser.java-encodeCompositeElementChildrenToStreamWriter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(b==null){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(b==null){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if(b==null){
+return null;
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+if(error==null){
+return null;
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(error==null){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+if(b==null){
+return null;
+}
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if(sourceExcerpt==null){
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+if(b==null){
+return null;
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt==null){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+if(error==null){
+return null;
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+if(error==null){
+return null;
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if(b==null){
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt==null){
+return null;
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if(excerpt==null){
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4743/pattern-ver1-serial/app.src.main.java.com.wafflestudio.shafe.MapManager.java-initializeMapWithSavedValue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(excerpt==null){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4743/pattern-ver1-serial/app.src.main.java.com.wafflestudio.shafe.MapManager.java-initializeMapWithSavedValue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+if("&null".equals(error)){
+return null;
+}
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if("&null".equals(error)){
+return null;
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if("&null".equals(error)){
+return null;
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if("&null".equals(b)){
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:50:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if("&null".equals(charno)){
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if("&null".equals(warning)){
+return null;
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if("&null".equals(charno)){
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if("&null".equals(sourceExcerpt)){
+return null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append(sourceExcerpt);
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append(sourceExcerpt);
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append(sourceExcerpt);
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append('\n');
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append('\n');
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:51:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append(' ');
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append("^\n");
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append(' ');
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(sourceExcerpt);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(sourceExcerpt);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(sourceExcerpt);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append(c);
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(c);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(' ');
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append(' ');
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append("^\n");
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append("^\n");
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(c);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+b.append(sourceExcerpt);
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(sourceExcerpt);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(sourceExcerpt);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(sourceExcerpt);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(sourceExcerpt);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(sourceExcerpt);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(sourceExcerpt);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(' ');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append("^\n");
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR).trim());
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+b.append(sourceExcerpt);
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(sourceExcerpt);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(sourceExcerpt);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append('\n');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append('\n');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append('\n');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append('\n');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(':');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(": ");
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(" - ");
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
-b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append('\n');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:55:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(sourceExcerpt);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append('\n');
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append('\n');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append('\n');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(' ');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append("^\n");
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(':');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(": ");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:56:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(" - ");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
 b.append(c);
+if(Character.isWhitespace(c)){
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
 b.append(':');
+if(error.lineNumber>0){
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(error.lineNumber);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if(source.equals("")){
+return "";
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.equals("")){
+return "";
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(b.equals("")){
+return "";
+}
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append("^\n");
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
+b.append("^\n");
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+b.append(' ');
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(": ");
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(':');
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(error.lineNumber);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(sourceExcerpt);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append('\n');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(' ');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("^\n");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
 b.append(error.sourceName);
+if(error.sourceName!=null){
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(error.lineNumber);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(':');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(':');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(error.lineNumber);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append(' ');
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append("^\n");
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append(c);
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:59:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(!sourceExcerpt.equals("")){
 b.append(sourceExcerpt);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(!error.sourceName.equals("")){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+if(!"^\n".equals("")){
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append(error.sourceName);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append(error.lineNumber);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append("^\n");
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append("https://myschool.ru.is/myschool/"+getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
-String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+String sourceExcerpt=source==null?null:this.excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(this.excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2168/pattern-ver1-serial/src.main.java.app.lsgui.gui.channelinfopanel.ChannelInfoPanel.java-recordStream.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if(source.equals("-1")){
+return null;
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(b.equals("-1")){
+return null;
+}
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.equals("-1")){
+return null;
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(": ");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/4610/pattern-ver1-serial/StashCache.app.src.main.java.com.geekeclectic.android.stashcache.StashOverviewActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append(sourceExcerpt);
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(sourceExcerpt);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append(sourceExcerpt);
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append(sourceExcerpt);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append(sourceExcerpt);
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append(sourceExcerpt);
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0||error.lineNumber==Long.MIN_VALUE){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append('\n');
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append('\n');
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append('\n');
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(' ');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(' ');
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append("^\n");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
-b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append('\n');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append(c);
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append(' ');
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)+" votes");
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append("^\n");
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append("There was a problem with the call to ManyWho: "+getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+b.append(' ');
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+b.append("^\n");
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(new BigDecimal(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)).setScale(2,RoundingMode.HALF_UP));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append(sourceExcerpt);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append('\n');
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append(':');
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.sourceName);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/4848/pattern-ver1-serial/marketplace-frontend.src.main.java.org.xine.marketplace.frontend.views.controller.requisitions.RequisitionSaverBean.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append(sourceExcerpt);
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append('\n');
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append('\n');
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(' ');
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
-b.append(' ');
 }
 }
 b.append("^\n");
+b.append(' ');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.lineNumber);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(':');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+b.append(error.sourceName);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/1924/pattern-ver1-serial/src.gui.map.MapDrawerPanel.java-restoreSession.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(sourceExcerpt==null){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+if(error==null){
+return null;
+}
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(Strings.nullToEmpty(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:05:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+assert (error!=null);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+assert (error!=null);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+assert (error!=null);
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+assert (error!=null);
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+assert (b!=null);
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+assert (b!=null);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+assert (!sourceExcerpt.isEmpty());
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(error.lineNumber);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:06:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(error.sourceName);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(error.lineNumber);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(error.sourceName);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(error.sourceName);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(error.lineNumber);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(error.lineNumber);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.sourceName);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.lineNumber);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+try{
 b.append("^\n");
+}finally{
+b.append(' ');
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:07:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+try{
 b.append(": ");
+}finally{
+b.append(error.sourceName);
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+try{
 b.append(error.sourceName);
+}finally{
+b.append(':');
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+try{
 b.append(error.sourceName);
+}finally{
+b.append(": ");
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR).subSequence(0,6));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
-b.append(' ');
 }
 }
+b.append(' ');
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5438/pattern-ver1-serial/cg.VertexSetComponent.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append((getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)).toLowerCase());
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(b!=null){
+b.append(sourceExcerpt);
+b.append('\n');
+int charno=error.getCharno();
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+for(int i=0;i<charno;i++){
+char c=sourceExcerpt.charAt(i);
+if(Character.isWhitespace(c)){
+b.append(c);
+}else {
+b.append(' ');
+}
+}
+b.append("^\n");
+}
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt!=null){
 if(sourceExcerpt!=null){
+b.append(sourceExcerpt);
+b.append('\n');
+int charno=error.getCharno();
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+for(int i=0;i<charno;i++){
+char c=sourceExcerpt.charAt(i);
+if(Character.isWhitespace(c)){
+b.append(c);
+}else {
+b.append(' ');
+}
+}
+b.append("^\n");
+}
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:08:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(error!=null){
+b.append(sourceExcerpt);
+b.append('\n');
+int charno=error.getCharno();
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+for(int i=0;i<charno;i++){
+char c=sourceExcerpt.charAt(i);
+if(Character.isWhitespace(c)){
+b.append(c);
+}else {
+b.append(' ');
+}
+}
+b.append("^\n");
+}
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+if(error!=null){
+SourceExcerptProvider source=getSource();
+String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+StringBuilder b=new StringBuilder();
+if(error.sourceName!=null){
+b.append(error.sourceName);
+if(error.lineNumber>0){
+b.append(':');
+b.append(error.lineNumber);
+}
+b.append(": ");
+}
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(" - ");
+b.append(error.description);
+b.append('\n');
+if(sourceExcerpt!=null){
+b.append(sourceExcerpt);
+b.append('\n');
+int charno=error.getCharno();
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+for(int i=0;i<charno;i++){
+char c=sourceExcerpt.charAt(i);
+if(Character.isWhitespace(c)){
+b.append(c);
+}else {
+b.append(' ');
+}
+}
+b.append("^\n");
+}
+}
+return b.toString();
+}
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(error!=null){
+b.append(error.sourceName);
+if(error.lineNumber>0){
+b.append(':');
+b.append(error.lineNumber);
+}
+b.append(": ");
+}
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString().replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if(sourceExcerpt.contains(sourceExcerpt)){
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt.contains(sourceExcerpt)){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
-b.append(error.lineNumber);
 }
+b.append(error.lineNumber);
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append(sourceExcerpt);
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2108/pattern-ver1-serial/pac4j-oauth.src.main.java.org.pac4j.oauth.client.BaseOAuth10Client.java-addAccessTokenToProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append(sourceExcerpt);
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2108/pattern-ver1-serial/pac4j-oauth.src.main.java.org.pac4j.oauth.client.BaseOAuth10Client.java-addAccessTokenToProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:09:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return String.format("%s",b.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+b.append(sourceExcerpt);
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+b.append(sourceExcerpt);
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+b.append('\n');
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append('\n');
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+b.append('\n');
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+b.append('\n');
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append('\n');
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+b.append('\n');
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append('\n');
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+b.append('\n');
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
+b.append(sourceExcerpt);
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append('\n');
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
-b.append('\n');
+b.append(' ');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append(' ');
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+assert (charno!=error.getCharno());
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+assert (source!=getSource());
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+assert (b!=new StringBuilder());
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append("PATH: \n"+getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+assert (sourceExcerpt!=null);
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+assert (b!=null);
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+assert (b!=null);
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.startsWith("https")){
+return sourceExcerpt;
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(String.valueOf(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)+"/logout");
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append("\nDealer has: \n"+getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.equalsIgnoreCase("/")){
+return sourceExcerpt;
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(error.sourceName);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(error.sourceName);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.sourceName);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.description);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(error.lineNumber);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(error.lineNumber);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+assert (error!=null);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+assert (error!=null);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:13:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+assert (error!=null);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
+assert (error!=null);
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+assert (b!=null);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+assert (b!=null);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+assert (sourceExcerpt!=null);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.equalsIgnoreCase("")){
+return "";
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(error.sourceName);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+b.append(error.sourceName);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(error.sourceName);
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.sourceName);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+b.append(error.lineNumber);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5672/pattern-ver1-serial/core.src.com.overwatch2d.game.GameScreen.java-beginContact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(b.equals(null)){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt.equals(null)){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+String indexClassList="com.servinglynk.hmis.warehouse.model.v2014.Client";
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
-StringBuilder b=new StringBuilder();
+StringBuilder b=new StringBuilder(indexClassList);
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/910/pattern-ver1-serial/hmis-service-v2014.src.main.java.com.servinglynk.hmis.warehouse.service.impl.SearchServiceImpl.java-indexing.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+b.append(sourceExcerpt);
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(sourceExcerpt);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append((getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)).toUpperCase());
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:15:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||"查看红包".equals(sourceExcerpt)){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null||"查看红包".equals(error.sourceName)){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0||"查看红包".equals(error.lineNumber)){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0||error.lineNumber==3){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)||c=='%'){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString()==null?"":b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if(sourceExcerpt.isEmpty()){
+sourceExcerpt=null;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||sourceExcerpt==""){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/7341/pattern-ver1-serial/log210_webproject_BDD.src.RechercheLivre.java-RechercheLivre.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null||error.sourceName==""){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/7341/pattern-ver1-serial/log210_webproject_BDD.src.RechercheLivre.java-RechercheLivre.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber<0||error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+int charno=error.getCharno();
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString()!=null?b.toString():new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0||error.lineNumber==0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0||error.lineNumber>9){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:17:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b==null?null:b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
+int charno=error.getCharno();
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1365/pattern-ver1-serial/src.main.java.nl.tue.win.vcp.virtualbreitenbergenvironment.model.Environment.java-draw.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0&&error.lineNumber<4000000){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||sourceExcerpt==null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null||error.sourceName==null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||sourceExcerpt.trim().isEmpty()){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1097/pattern-ver1-serial/src.bakatxt.core.BakaProcessor.java-editEndTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null||error.sourceName.trim().isEmpty()){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1097/pattern-ver1-serial/src.bakatxt.core.BakaProcessor.java-editEndTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b.toString()==null?new String():b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(error.lineNumber>0&&error.lineNumber!=9999){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
-if(error.lineNumber>0){
+if(0>0&&error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if((excerpt!=null&&excerpt.equals(LINE))&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2151/pattern-ver1-serial/coeus-impl.src.main.java.org.kuali.kra.award.document.authorization.AwardDocumentAuthorizer.java-canCancel.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:19:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+assert (charno>=0):"Receive a negative tratment";
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+assert (charno>=0):"Receive a negative tratment";
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
+if(b!=null){
 return b.toString();
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
+int charno=error.getCharno();
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
-return b.toString();
+return b!=null?b.toString():null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt!=null&&excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/2451/pattern-ver1-serial/GMSClient3.src.com.jstakun.gms.android.ui.GMSClientMainActivity.java-onResume.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(error.description);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.description);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+b.append(error.sourceName);
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.sourceName);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(error.lineNumber);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.lineNumber);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:21:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.sourceName);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.sourceName);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(error.lineNumber);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.lineNumber);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.description);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
-b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.description);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.sourceName);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.sourceName);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(error.lineNumber);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.lineNumber);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(error.sourceName);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.sourceName);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(error.lineNumber);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+b.append(error.lineNumber);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(sourceExcerpt.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+if(sourceExcerpt.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+assert (error!=null):"Appointments day is not allowed to be null!";
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+assert (error!=null):"Appointments day is not allowed to be null!";
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+assert (error!=null):"Appointments day is not allowed to be null!";
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+assert (error!=null):"Appointments day is not allowed to be null!";
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+assert (b!=null):"Appointments day is not allowed to be null!";
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+assert (b!=null):"Appointments day is not allowed to be null!";
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+assert (charno!=0):"Receive a size tratment";
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+assert (charno!=0):"Receive a size tratment";
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:23:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
+if(sourceExcerpt.isEmpty()){
+sourceExcerpt=null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
+if(sourceExcerpt.isEmpty()){
+sourceExcerpt=null;
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+synchronized(this){
 b.append(':');
 b.append(error.lineNumber);
+}
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(b==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if(b==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(charno>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
+if("^\n"==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:24:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.equals("")){
+sourceExcerpt="Manchester United FC";
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4958/pattern-ver1-serial/FootballScores.app.src.main.java.barqsoft.footballscores.widget.ScoresWidgetIntentService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+b.append(" (");
 b.append("^\n");
+b.append(") ");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
+b.append(" (");
 b.append(error.lineNumber);
+b.append(") ");
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+b.append(" (");
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+b.append(") ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+b.append(" (");
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+b.append(") ");
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(" (");
 b.append('\n');
 int charno=error.getCharno();
+b.append(") ");
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append(" (");
+b.append(") ");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(b!=null){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+if(b!=null){
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:25:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("\"category\" : [");
+b.append("]");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/1798/pattern-ver1-serial/src.main.java.com.github.jerdeb.daqvalidator.Validator.java-listCompliantCDM.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(b!=null){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+if(b!=null){
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean haveBreadCrumbs=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+if(b!=null){
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V46/1762/pattern-ver1-serial/app.src.main.java.kosbrother.com.doctorguide.SearchableActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
+if(b!=null){
 b.append('\n');
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/3313/pattern-ver1-serial/app.src.main.java.com.yyydjk.gank.fragments.VideoFragment.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null&&!sourceExcerpt.equals("")){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
-if(error.sourceName!=null){
+if(error.sourceName!=null&&!error.sourceName.equals("")){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append(sourceExcerpt);
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(": ");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append("^\n");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
+b.append(sourceExcerpt);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
+b.append(sourceExcerpt);
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
+b.append(sourceExcerpt);
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(": ");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
+b.append(sourceExcerpt);
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(" - ");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append("^\n");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
+b.append(sourceExcerpt);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
+b.append(':');
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
-b.append(':');
+b.append(sourceExcerpt);
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
+if(b!=null){
 b.append('\n');
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if(b!=null){
 b.append('\n');
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1339/pattern-ver1-serial/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java-onKeyDown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:27:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+if(b!=null){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
+}
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
-b.append(c);
-}else {
 b.append(' ');
+}else {
+b.append(c);
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/3575/pattern-ver1-serial/src.gamePieces.Card.java-smoothPlace.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+sourceExcerpt=sourceExcerpt.replaceAll(";","; ");
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5914/pattern-ver1-serial/app.src.main.java.rkr.directsmswidget.widgets.HomeWidget.java-updateAppWidget.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6358/pattern-ver1-serial/src.main.java.com.builtbroken.icbm.content.ams.TileAMSClient.java-onPlayerRightClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt!=null){
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+}else {
+b.append("");
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
+if(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR)!=null){
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+}else {
+b.append("");
+}
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
+if("^\n"!=null){
 b.append("^\n");
+}else {
+b.append("");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+if(" - "!=null){
 b.append(" - ");
+}else {
+b.append("");
+}
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/4235/pattern-ver1-serial/src.yakitmessenging.TextMessengerServlet.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if((excerpt.equals(LINE)&&0<=charno)&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+ final String currency=getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(currency);
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 4, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt==null){
+throw new IllegalStateException("User isn't registered! "+error);
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt==null){
+throw new IllegalStateException("User isn't registered! "+source);
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(sourceExcerpt==null||b==null){
+return null;
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+b.append("<table style=\"text-align: center;\" width=\"100%\" "+"height=\"100%\" border=\"0\" bordercolor=\"#000000\">");
+b.append("</table>");
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5923/pattern-ver1-serial/photoweb.src.com.utils.web.GenerateHTML.java-genDayNavigate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+if(sourceExcerpt.startsWith("/")){
+sourceExcerpt=sourceExcerpt.substring(1);
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append("^\n");
+b.append(' ');
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+b.append(' ');
+b.append("^\n");
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.startsWith("+")){
+sourceExcerpt=sourceExcerpt.substring(1);
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/820/pattern-ver1-serial/src.com.iotracks.iofabric.utils.configuration.Configuration.java-setConfig.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean haveBreadCrumbs=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+haveBreadCrumbs=true;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean haveBreadCrumbs=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+haveBreadCrumbs=true;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean haveBreadCrumbs=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+haveBreadCrumbs=true;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean haveBreadCrumbs=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+haveBreadCrumbs=true;
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean haveBreadCrumbs=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
+haveBreadCrumbs=true;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean haveBreadCrumbs=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&haveBreadCrumbs){
 b.append(c);
 }else {
 b.append(' ');
 }
+haveBreadCrumbs=true;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(b==null||sourceExcerpt==null){
+throw new NullPointerException();
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
+if(b==null||sourceExcerpt==null){
+throw new NullPointerException();
+}
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.contains("phpreturn")){
+sourceExcerpt=sourceExcerpt.replace("php","php\n");
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2350/pattern-ver1-serial/src.main.java.ru.andyskvo.main.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.contains("#")){
+sourceExcerpt=sourceExcerpt.split("#")[0];
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3981/pattern-ver1-serial/hdiv-core.src.main.java.org.hdiv.filter.ValidatorHelperRequest.java-restoreState.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean succeeded=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean succeeded=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+}
+if(!succeeded){
+return null;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+succeeded=true;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean succeeded=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
+succeeded=true;
 }
 b.append(": ");
+}
+if(!succeeded){
+return null;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean succeeded=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+boolean succeeded=false;
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+succeeded=true;
 }
 b.append("^\n");
+}
+if(!succeeded){
+return null;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+boolean succeeded=false;
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+}
+if(!succeeded){
+return null;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+succeeded=true;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(charno==3){
+System.out.println("debug");
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+if(charno==3){
+System.out.println("debug");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
+if(error.lineNumber>0){
+b.append(':');
+b.append(error.lineNumber);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
+if(error.lineNumber>0){
+b.append(':');
+b.append(error.lineNumber);
+}
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+if(sourceExcerpt.endsWith("/")==false){
+sourceExcerpt=sourceExcerpt+"/";
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(": "!=null){
+if(b!=null){
 b.append(error.sourceName);
+}
+b.append(": ");
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/7882/pattern-ver1-serial/RaspiMediaCenter.src.raspimediacenter.Logic.Utilities.ScraperUtils.java-scraperParseAlbum.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(sourceExcerpt.startsWith("extern ")){
+return sourceExcerpt.substring(6,sourceExcerpt.length()-1).trim();
+}
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()||"查看红包".equals(excerpt.equals(LINE)&&0<=charno)){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(!excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()||0=='%'){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(b==null||sourceExcerpt==null||error==null){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+if(sourceExcerpt==null||b==null||error==null){
+return null;
+}
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/1014/pattern-ver1-serial/src.main.java.HxCKDMS.HxCEnchants.Handlers.EnchantHandlers.java-handleBootEnchant.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(true){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()&&warning){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()==false){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()&&0>0){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/3401/pattern-ver1-serial/src.edu.gordian.scopes.Scope.java-toElement.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()==true){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+boolean matchFound=false;
 if(Character.isWhitespace(c)){
+matchFound=true;
 b.append(c);
 }else {
 b.append(' ');
+}
+if(!matchFound){
+i=-1;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/3537/pattern-ver1-serial/src.main.java.nl.giantit.minecraft.giantcore.Misc.Misc.java-startsWithAnyIgnoreCase.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
+boolean matchFound=false;
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+matchFound=true;
 b.append(' ');
+}
+if(!matchFound){
+i=-1;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/3537/pattern-ver1-serial/src.main.java.nl.giantit.minecraft.giantcore.Misc.Misc.java-startsWithAnyIgnoreCase.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
+long startTime=System.currentTimeMillis();
 b.append(':');
 b.append(error.lineNumber);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+long startTime=System.currentTimeMillis();
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
+long startTime=System.currentTimeMillis();
 b.append(c);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
+long startTime=System.currentTimeMillis();
 b.append(' ');
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
+long startTime=System.currentTimeMillis();
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+long startTime=System.currentTimeMillis();
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+long startTime=System.currentTimeMillis();
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
+long startTime=System.currentTimeMillis();
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}else {
+b.append(' ');
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 11, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 11, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+if(b!=null&&error.sourceName!=null){
 b.append(error.sourceName);
+}
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
+if(b!=null&&": "!=null){
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/3394/pattern-ver1-serial/src.autoresponse.app.LocationCreatorActivity.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
+synchronized(this){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+}
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
+}else {
+b.append(':');
+b.append(error.lineNumber);
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
-if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
-}
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&charno<sourceExcerpt.length()){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.substring(11,19).equals("00:00:00")){
+sourceExcerpt=sourceExcerpt.substring(0,11)+"23:59:59"+sourceExcerpt.substring(19);
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2005/pattern-ver1-serial/dspace-oai.src.main.java.org.dspace.xoai.filter.DateUntilFilter.java-buildSolrQuery.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt!=null&&sourceExcerpt.trim().length()==0){
+sourceExcerpt=null;
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
-if(sourceExcerpt!=null){
+if(sourceExcerpt!=null||sourceExcerpt.trim().length()==0){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5053/pattern-ver1-serial/src.edu.clemson.lph.civet.prefs.CivetConfig.java-getEmailErrorsDirPath.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 7, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
-b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 15, INS : 0, DEL : 6
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+synchronized(this){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 25, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
-b.append(c);
-}else {
 b.append(' ');
-}
-}
-b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 25, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(!(excerpt==null&&LINE!=null)&&!(excerpt!=null&&LINE==null)&&((excerpt==null&&LINE==null)||excerpt.equals(LINE))&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V15/7534/pattern-ver1-serial/app.src.main.java.com.geno.chaoli.forum.ConversationListFragment.java-areContentsTheSame.pattern
MATCHLEVEL : ALL
ALL : 27, UPD : 27, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
+if(b.toString().contains("E")&&b.toString().charAt(b.indexOf("E")+1)!='-'&&Integer.parseInt(b.toString().substring(b.indexOf("E")+1,b.length()))<=15){
+return String.format("%.0f",Double.parseDouble(b.toString().replace(' ','\0')));
+}
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 40, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
+if(sourceExcerpt.toString().contains("E")&&sourceExcerpt.toString().charAt(sourceExcerpt.indexOf("E")+1)!='-'&&Integer.parseInt(sourceExcerpt.toString().substring(sourceExcerpt.indexOf("E")+1,sourceExcerpt.length()))<=15){
+return String.format("%.0f",Double.parseDouble(sourceExcerpt.toString().replace(' ','\0')));
+}
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 40, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
+synchronized(this){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
+}else {
+b.append(' ');
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
-b.append('\n');
-int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
-b.append(c);
-}else {
 b.append(' ');
-}
-}
-b.append("^\n");
-}
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
-b.append('\n');
-if(sourceExcerpt!=null){
-b.append(sourceExcerpt);
 b.append('\n');
-int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
-for(int i=0;i<charno;i++){
-char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
-b.append(c);
-}else {
-b.append(' ');
-}
-}
-b.append("^\n");
-}
-}
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 50, UPD : 0, INS : 0, DEL : 50
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Candidate---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
-b.append(error.sourceName);
-if(error.lineNumber>0){
-b.append(':');
-b.append(error.lineNumber);
-}
-b.append(": ");
-}
-b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
-b.append(" - ");
-b.append(error.description);
-b.append('\n');
-if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
+}
+}
+b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
+b.append(" - ");
+b.append(error.description);
+b.append('\n');
+if(sourceExcerpt!=null){
+b.append(error.sourceName);
+if(error.lineNumber>0){
+b.append(':');
+b.append(error.lineNumber);
 }
+b.append(": ");
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 62, UPD : 62, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:45:38 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.AbstractMessageFormatter.getLevelName:[75, 74, 74, 76, 77]#1.0
Compute Candidate : 2019.09.06 AD at 08:47:12 CDT - 2019.09.06 AD at 08:54:33 CDT , PNumber : 11211, CandNumber : 60 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.name();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/6866/pattern-ver1-serial/src.main.java.com.epam.dao.EventDao.java-update.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:54:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return "";
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString().trim();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return new String(level.toString());
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return (String)level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString().toLowerCase();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return (String)(level.toString());
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return null;
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return null;
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return "";
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return "";
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR).trim();
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING).trim();
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return new String(maybeColorize("ERROR",Color.ERROR));
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return new String(maybeColorize("WARNING",Color.WARNING));
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return (String)maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return (String)maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+int a=0;
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+String OUTSTRING="";
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR).toLowerCase();
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:56:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING).toLowerCase();
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(equals(level)){
+return null;
+}
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return (String)(maybeColorize("ERROR",Color.ERROR));
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return (String)(maybeColorize("WARNING",Color.WARNING));
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return "FolderPersister for '"+this;
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return "FolderPersister for '"+this;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return "FolderPersister for '"+this;
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+int a=1;
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+String ERROR="%#.&f";
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+String WARNING="%#.&f";
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+boolean b=true;
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR)+".*";
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString()+".*";
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING)+".*";
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(level==null){
+return "";
+}
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(level==null){
+return null;
+}
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+assert (level!=null);
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(level!=null){
+switch (level){
+case ERROR :
+
+return maybeColorize("ERROR",Color.ERROR);
+case WARNING :
+
+return maybeColorize("WARNING",Color.WARNING);
+default :
+
+return level.toString();
+}
+}
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR).replaceAll("\r","");
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING).replaceAll("\r","");
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString().replaceAll("\r","");
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return String.format("%s",maybeColorize("ERROR",Color.ERROR));
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return String.format("%s",maybeColorize("WARNING",Color.WARNING));
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return String.format("%s",level.toString());
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR)==null?"":maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING)==null?"":maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString()==null?"":level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR)!=null?maybeColorize("ERROR",Color.ERROR):new String();
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString()!=null?level.toString():new String();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING)!=null?maybeColorize("WARNING",Color.WARNING):new String();
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level==null?null:level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
-return maybeColorize("ERROR",Color.ERROR);
+return maybeColorize("ERROR",Color.ERROR)==null?new String():maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level.toString()==null?new String():level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
-return maybeColorize("WARNING",Color.WARNING);
+return maybeColorize("WARNING",Color.WARNING)==null?new String():maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level!=null?level.toString():null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+assert (level!=null):"Appointments day is not allowed to be null!";
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
-return level.toString();
+return level!=null?level.toString():"";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3020/pattern-ver1-serial/src.main.java.com.karumi.reddo.task.GitHubRepositoryTask.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(level==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[73,79]
------------Candidate---------------
 String getLevelName(CheckLevel level){
+if(level!=null){
 switch (level){
 case ERROR :
 
 return maybeColorize("ERROR",Color.ERROR);
 case WARNING :
 
 return maybeColorize("WARNING",Color.WARNING);
 default :
 
 return level.toString();
+}
+}
+switch (level){
+case ERROR :
+
+return maybeColorize("ERROR",Color.ERROR);
+case WARNING :
+
+return maybeColorize("WARNING",Color.WARNING);
+default :
+
+return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4738/pattern-ver1-serial/src.tonegod.gui.controls.lists.ComboBox.java-getListItems.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 2, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:01:25 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.LightweightMessageFormatter.formatError:[59]#1.0
Compute Candidate : 2019.09.06 AD at 09:03:03 CDT - 2019.09.06 AD at 09:06:50 CDT , PNumber : 11418, CandNumber : 20 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return format(error,true);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V3/4718/pattern-ver1-serial/src.com.sleepfuriously.hpgworkout.GraphActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return new String(format(error,false));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return (String)format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+int a=0;
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+String OUTSTRING="";
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+if(equals(error)){
+return null;
+}
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return (String)(format(error,false));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+int a=1;
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:07:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+boolean b=true;
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public String formatError(JSError error){
-return format(error,false);
+return format(error,false)+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+if(error==null){
+return "";
+}
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+if(error==null){
+return null;
+}
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+assert (error!=null);
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+if(error!=null){
+return format(error,false);
+}
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return format(error,false).replaceAll(",",".");
 }

PATTERN : /home/jiajun/GithubData/2015/V15/7846/pattern-ver1-serial/src.java.voldemort.store.stats.RequestCounter.java-getDisplayThroughput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return format(error,false)!=null?format(error,false):new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
-return format(error,false);
+return format(error,false)==null?new String():format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[58,60]
------------Candidate---------------
 public String formatError(JSError error){
+assert (error!=null):"Appointments day is not allowed to be null!";
 return format(error,false);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:09:05 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.AbstractMessageFormatter.getSource:[44]#1.0
Compute Candidate : 2019.09.06 AD at 09:10:39 CDT - 2019.09.06 AD at 09:13:50 CDT , PNumber : 11279, CandNumber : 9 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
-return source;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
-return source;
+return this.source;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/1924/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.command.ImmutableCommandMapping.java-getCallable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
-return source;
+return this.getSource();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
+this.getSource();
 return source;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
-return source;
+return (SourceExcerptProvider)(source);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
+int a=0;
 return source;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
+String OUTSTRING="";
 return source;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
+int a=1;
 return source;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[40,45]
------------Candidate---------------
 protected final SourceExcerptProvider getSource(){
+boolean b=true;
 return source;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:14:53 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.AbstractMessageFormatter.maybeColorize:[82, 84]#1.0
Compute Candidate : 2019.09.06 AD at 09:16:32 CDT - 2019.09.06 AD at 09:23:03 CDT , PNumber : 11332, CandNumber : 135 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return "";
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+color.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3614/pattern-ver1-serial/library.src.main.java.com.davidstemmer.screenplay.flow.Screenplay.java-go.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+color+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.toString()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return new String(text);
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6348/pattern-ver1-serial/src.bufmgr.LIRS.java-getReplacementCandidate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+text;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:23:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+color;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
-if(!colorize){
+if(!!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V68/523/pattern-ver1-serial/teachme.src.main.java.com.kk.teachme.model.UserProblem.java-toString.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text.trim();
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
-if(!colorize){
+if(true){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color valueAnimator){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return valueAnimator.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text.toLowerCase();
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color edge){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return edge.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color methodOpeningBrace){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return methodOpeningBrace.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:24:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color mpR){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return mpR.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return (String)(text);
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color methodAST){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return methodAST.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color managerFactory){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return managerFactory.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text.toString()+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+synchronized(this){
 if(!colorize){
 return text;
+}
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter().trim()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/5751/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.play.collection.info.ResourceInfoView.java-setCountryCodeDetails.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text.toUpperCase()+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/3740/pattern-ver1-serial/src.javah.util.BarangayUtils.java-formatName.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
-private String maybeColorize(String text,Color color){
+private String maybeColorize(String text,Color methodOpeningBraceToken){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return methodOpeningBraceToken.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+synchronized(this){
 return text;
+}
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+int a=0;
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+int a=0;
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+String OUTSTRING="";
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+String OUTSTRING="";
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.isEmpty()){
+return null;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.isEmpty()){
+return null;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+(Color.RESET.getControlCharacter()+1);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/2277/pattern-ver1-serial/core.src.com.mygdx.dame.Token.java-jumpOver.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(equals(text)){
+return null;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(equals(text)){
+return null;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(equals(color)){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(equals(text)){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+" "+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/5232/pattern-ver1-serial/src.com.mydeblob.guard.CommandHandler.java-giveKit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return "FolderPersister for '"+this;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+int a=1;
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+int a=1;
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+String RESET="%#.&f";
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+boolean b=true;
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+boolean b=true;
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "client "+color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6134/pattern-ver1-serial/src.main.java.com.fejkathegame.server.ServerProgram.java-received.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "relativeCursorLocation: "+color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/6500/pattern-ver1-serial/pa.iscde.guibuilder.src.pt.iscte.pidesco.guibuilder.internal.GuiBuilderView.java-drop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "/"+color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V15/628/pattern-ver1-serial/Group9_TwitterDataAnalysis.ICT2107_Hadoop.src.model.task8.Task8Mapper.java-getSentiFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text==null){
+return "";
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text==null){
+return "";
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(color==null){
+return "";
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text==null){
+return null;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text==null){
+return null;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(color==null){
+return null;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(color==null){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(Color.RESET==null){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(text==null){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if("&null".equals(text)){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if("&null".equals(color)){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V65/5693/pattern-ver1-serial/src.org.community.intellij.plugins.communitycase.history.LogParser.java-getFormatOption.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+1+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text.replaceAll("[^\\w\\s]","")+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text.replace(color.getControlCharacter(),"")+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "ClientConnector{"+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/4331/pattern-ver1-serial/src.main.java.net.openhft.chronicle.map.TcpReplicator.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/2316/pattern-ver1-serial/src.main.java.net.cubespace.CloudChat.Module.IRC.Bot.Bot.java-relayMessage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+assert (text!=null);
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+assert (text!=null);
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+assert (color!=null);
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
+assert (!text.isEmpty());
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(color.equals(InputStream.class)){
+return text;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private String maybeColorize(String text,Color color){
+if(color.equals(InputStream.class)){
+return text;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text!=null){
+if(!colorize){
+return text;
+}
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text!=null){
+return text;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(color!=null){
+if(!colorize){
+return text;
+}
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text.replace(",","\n");
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/234/pattern-ver1-serial/src.maigosoft.mcpdict.SearchResultCursorAdapter.java-lineBreak.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text.replaceAll("\r","");
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return String.format("%s",text);
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+" "+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/5232/pattern-ver1-serial/src.com.mydeblob.guard.CommandHandler.java-giveKit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.startsWith("https")){
+return text;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.startsWith("https")){
+return text;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.equalsIgnoreCase("/")){
+return text;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.equalsIgnoreCase("/")){
+return text;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
+assert (text!=null);
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
+assert (color!=null);
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text.trim()+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/5751/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.play.collection.info.ResourceInfoView.java-setCountryCodeDetails.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.equalsIgnoreCase("")){
+return "";
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.equalsIgnoreCase("")){
+return "";
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "redirect:/articles/"+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/3567/pattern-ver1-serial/plan-comp.src.main.java.com.tissue.plan.web.spring.controllers.MessageController.java-updateMessage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "/saml/logout/request?EncryptedNameIdTime="+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2893/pattern-ver1-serial/platform.security.idp.security-idp-client.src.main.java.org.codice.ddf.security.idp.client.IdpLogoutActionProvider.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if((Thread.currentThread().interrupted())){
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text==null?"":text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(text.isEmpty()){
+text=null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text!=null?text:new String();
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return (color.getControlCharacter()!=null?color.getControlCharacter()+text:"")+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/3147/pattern-ver1-serial/src.com.pindroid.action.IntentHelper.java-ViewNote.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+return text==null?new String():text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(text.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+assert (text!=null):"Appointments day is not allowed to be null!";
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+assert (text!=null):"Appointments day is not allowed to be null!";
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+assert (color!=null):"Appointments day is not allowed to be null!";
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(text.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+"windows"+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2927/pattern-ver1-serial/SeleniumCoreAF.src.coreaf.framework.base.DriverFactory.java-createInstance.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(color==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(Color.RESET==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+"\""+text+"\""+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/3256/pattern-ver1-serial/src.main.java.com.rizomm.misys.model.PictureLink.java-getLink.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return 1+color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/6216/pattern-ver1-serial/src.main.java.controller.graph.GradeShape.java-getScoreFromLocation.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return new String(color.getControlCharacter()+text+Color.RESET.getControlCharacter());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter()+0.0;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/4899/pattern-ver1-serial/src.Point.java-slopeTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "";
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/748/pattern-ver1-serial/docear_plugin_core.src.org.docear.plugin.core.ui.CreateProjectPagePanel.java-getDescription.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return (String)color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter()!=null?color.getControlCharacter()+text+Color.RESET.getControlCharacter():new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return text;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/3906/pattern-ver1-serial/tetrad-lib.src.main.java.edu.cmu.tetrad.algcomparison.algorithm.oracle.pag.Ccd.java-getComparisonGraph.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "TREE";
 }

PATTERN : /home/jiajun/GithubData/2015/V31/5808/pattern-ver1-serial/core.src.main.java.com.graphhopper.storage.index.LocationIndexTree.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter()==null?new String():color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/4309/pattern-ver1-serial/source.src.com.bizcom.vc.activity.conversation.ConversationSelectFile.java-getCount.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return (String)(color.getControlCharacter()+text+Color.RESET.getControlCharacter());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
-return text;
+String t=text;
+text=null;
+return t;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+String t=text;
+text=null;
 if(!colorize){
-return text;
+return t;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return color.getControlCharacter()+text+Color.RESET.getControlCharacter()+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
 }
-return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
+return "DefaultAtmosphereObjectFactory";
 }

PATTERN : /home/jiajun/GithubData/2015/V1/76/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereFramework.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text==null){
+return "";
+}
+if(color==null){
+return text;
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.startsWith("\r\n")){
+text=text.substring(2);
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.startsWith("\r\n")){
+text=text.substring(2);
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(text==null||color==null){
+throw new NullPointerException();
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
 return text;
+}
+if(color==null||text==null){
+throw new NullPointerException();
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.length()==2){
+return "";
+}
 return text;
+}
+if(text.length()==1){
+return "";
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6820/pattern-ver1-serial/src.main.java.org.asciidoc.intellij.actions.asciidoc.SimpleFormatAsciiDocAction.java-removeSymbol.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
 if(!colorize){
+if(text.startsWith("extern ")){
+return text.substring(6,text.length()-1).trim();
+}
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[81,86]
------------Candidate---------------
 private String maybeColorize(String text,Color color){
+if(text.startsWith("extern ")){
+return text.substring(6,text.length()-1).trim();
+}
 if(!colorize){
 return text;
 }
 return color.getControlCharacter()+text+Color.RESET.getControlCharacter();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:38:40 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.SourceExcerptProvider.get:[36]#1.0
Compute Candidate : 2019.09.06 AD at 09:40:15 CDT - 2019.09.06 AD at 09:46:03 CDT , PNumber : 11177, CandNumber : 92 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider valueAnimator,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(valueAnimator.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter valueAnimator){
+return valueAnimator.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider edge,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(edge.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter edge){
+return edge.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter methodOpeningBrace){
+return methodOpeningBrace.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider methodOpeningBrace,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(methodOpeningBrace.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider mpR,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(mpR.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter mpR){
+return mpR.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter methodAST){
+return methodAST.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider methodAST,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(methodAST.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider managerFactory,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(managerFactory.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter managerFactory){
+return managerFactory.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider methodOpeningBraceToken,String sourceName,int lineNumber,ExcerptFormatter formatter){
+return formatter.formatLine(methodOpeningBraceToken.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
-@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+@Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter methodOpeningBraceToken){
+return methodOpeningBraceToken.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+int a=0;
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+String OUTSTRING="";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.isEmpty()){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(equals(sourceName)){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(equals(formatter)){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(equals(source)){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(equals(lineNumber)){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+int a=1;
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+boolean b=true;
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null){
+return "";
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null){
+return "";
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null){
+return "";
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(lineNumber<0){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber)+"\n",lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3324/pattern-ver1-serial/src.main.java.edu.clemson.cs.rsrg.init.Controller.java-compileTargetFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (sourceName!=null);
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:49:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (source!=null);
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (formatter!=null);
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter.equals(InputStream.class)){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source.equals(InputStream.class)){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName!=null){
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter!=null){
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source!=null){
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.startsWith("https")){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.equalsIgnoreCase("/")){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber).toString(),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/5021/pattern-ver1-serial/src.main.java.com.infinityraider.agricraft.tileentity.TileEntityCustomWood.java-getMaterialTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber)+1,lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7285/pattern-ver1-serial/jm-prta-parser.src.main.java.org.meyerlab.nopence.jm_prta_parser.attributes.NumericAttribute.java-getBinByValue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.equalsIgnoreCase("")){
+return "";
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber).replaceFirst("/whois",""),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/2616/pattern-ver1-serial/whois-api.src.main.java.net.ripe.db.whois.api.whois.GeolocationService.java-geolocation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (lineNumber>=0):"Receive a negative tratment";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (sourceName!=null):"Appointments day is not allowed to be null!";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (source!=null):"Appointments day is not allowed to be null!";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (formatter!=null):"Appointments day is not allowed to be null!";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+assert (lineNumber!=0):"Receive a size tratment";
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(lineNumber>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber-1),lineNumber-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber)==null?"":formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber).trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return sourceName;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return new String(formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return (String)formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber)!=null?formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber):new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter==null?null:formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber).toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber)==null?new String():formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber).replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter!=null){
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return (String)(formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return String.format("%s",formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter!=null?formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber):null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber)+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null){
+return "";
+}
+if(formatter==null){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null){
+return "";
+}
+if(source==null){
+return sourceName;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:54:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.startsWith("\r\n")){
+sourceName=sourceName.substring(2);
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null||formatter==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null||source==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null||sourceName==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null||sourceName==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null||source==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null||formatter==null){
+throw new NullPointerException();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
-return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+String taskList=formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+return taskList;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/3828/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.AbstractBlockServiceApiImpl.java-changeVolumeVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 7, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName.startsWith("extern ")){
+return sourceName.substring(6,sourceName.length()-1).trim();
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter!=null){
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
+}
+return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4738/pattern-ver1-serial/src.tonegod.gui.controls.lists.ComboBox.java-getListItems.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 7, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null||sourceName==null||formatter==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null||source==null||formatter==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null||source==null||sourceName==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(source==null||formatter==null||sourceName==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(formatter==null||sourceName==null||source==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/SourceExcerptProvider.java[33,38]
------------Candidate---------------
 @Override public String get(SourceExcerptProvider source,String sourceName,int lineNumber,ExcerptFormatter formatter){
+if(sourceName==null||formatter==null||source==null){
+return null;
+}
 return formatter.formatLine(source.getSourceLine(sourceName,lineNumber),lineNumber);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 09:56:53 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.AbstractMessageFormatter.Color:[64, 65, 66]#1.0
Compute Candidate : 2019.09.06 AD at 09:58:29 CDT - 2019.09.06 AD at 10:02:11 CDT , PNumber : 11189, CandNumber : 52 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter="";
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
+import static com.google.common.base.Preconditions.checkNotNull;
+
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=checkNotNull(controlCharacter);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3849/pattern-ver1-serial/src.main.java.uk.co.mdjcox.model.Episode.java-setEpisode.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String pSubject){
+this.controlCharacter=pSubject;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setSubject.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String appVersion){
+this.controlCharacter=appVersion;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2797/pattern-ver1-serial/dataprep-backend-common.src.main.java.org.talend.dataprep.api.preparation.Step.java-Step.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=controlCharacter.trim();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/7448/pattern-ver1-serial/DODO.src.Parser.Parser.java-setAddAttributes.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+synchronized(this){
 this.controlCharacter=controlCharacter;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String bindingModes){
+this.controlCharacter=bindingModes;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String collectorManager){
+this.controlCharacter=collectorManager;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String abt){
+this.controlCharacter=abt;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-timelineservice.src.main.java.org.apache.hadoop.yarn.server.timelineservice.collector.TimelineCollectorWebService.java-setAbout.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String srcPath){
+this.controlCharacter=srcPath;
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2105/pattern-ver1-serial/src.main.java.loaders.LocalPdfReader.java-LocalPdfReader.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String parentFileShare){
+this.controlCharacter=parentFileShare;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String pIssued){
+this.controlCharacter=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String Pin){
+this.controlCharacter=Pin;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=controlCharacter.toUpperCase();
 }

PATTERN : /home/jiajun/GithubData/2015/V7/4456/pattern-ver1-serial/src.main.java.com.codegen.model.ColumnDefinition.java-setDbColumnIdentifier.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String graphdbInput){
+this.controlCharacter=graphdbInput;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String thePrescribeMedicationCntl){
+this.controlCharacter=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String pScore){
+this.controlCharacter=pScore;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String name){
+this.controlCharacter=name;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/2621/pattern-ver1-serial/BP-javascript.src.bp.eventSets.EventStack.java-EventStack.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String pterm){
+this.controlCharacter=pterm;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String boid){
+this.controlCharacter=boid;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=controlCharacter+": ";
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/1370/pattern-ver1-serial/src.main.java.net.jeebiss.spazz.Spazz.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+int a=0;
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+String OUTSTRING="";
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+int a=1;
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+boolean b=true;
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+throw new RuntimeException(controlCharacter);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/2341/pattern-ver1-serial/OSA.addon.linux.fermat-osa-addon-linux-database-system-bitdubai.src.main.java.com.bitdubai.fermat_osa_addon.layer.linux.database_system.developer.bitdubai.version_1.desktop.database.bridge.DesktopDatabaseBridge.java-rawQuery.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:07:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=controlCharacter.replaceAll("\n","");
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter=(controlCharacter).replace("\\","\\\\");
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+assert (controlCharacter!=null);
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+assert (!controlCharacter.isEmpty());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
-Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+Color(String r){
+controlCharacter=r;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+assert (controlCharacter!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+if(controlCharacter.isEmpty()){
+controlCharacter=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:08:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+assert (controlCharacter!=null):"Appointments day is not allowed to be null!";
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+if(controlCharacter.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
-this.controlCharacter=controlCharacter;
+this.controlCharacter="'"+controlCharacter+"'";
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7/pattern-ver1-serial/src.generator.Generator.java-getTriggerLine.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+if(controlCharacter.startsWith("\r\n")){
+controlCharacter=controlCharacter.substring(2);
+}
 this.controlCharacter=controlCharacter;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+if(controlCharacter.startsWith("/")){
+controlCharacter=controlCharacter.substring(1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
 this.controlCharacter=controlCharacter;
+if(controlCharacter.endsWith("/")==false){
+controlCharacter=controlCharacter+"/";
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:09:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+if(null==controlCharacter||controlCharacter.equals("")){
+this.controlCharacter="null";
+}else {
 this.controlCharacter=controlCharacter;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V29/3929/pattern-ver1-serial/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.disruptor.inbound.QueueInfo.java-QueueInfo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:10:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+if(controlCharacter.contains("Selected")||controlCharacter.contains("Deselected")){
+this.controlCharacter="";
+}else {
 this.controlCharacter=controlCharacter;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/6027/pattern-ver1-serial/votebox.middle.view.widget.FocusableLabel.java-soundPath.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/AbstractMessageFormatter.java[64,66]
------------Candidate---------------
 Color(String controlCharacter){
+long startTime=System.currentTimeMillis();
 this.controlCharacter=controlCharacter;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:10:17 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.LightweightMessageFormatter.formatLine:[122]#1.0
Compute Candidate : 2019.09.06 AD at 10:11:56 CDT - 2019.09.06 AD at 10:15:24 CDT , PNumber : 11177, CandNumber : 32 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:15:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:15:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return new String(line);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6348/pattern-ver1-serial/src.bufmgr.LIRS.java-getReplacementCandidate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:15:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line.trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line.toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return (String)(line);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+int a=0;
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+String OUTSTRING="";
 return line;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.isEmpty()){
+return null;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(equals(line)){
+return null;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+int a=1;
 return line;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+boolean b=true;
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line==null){
+return "";
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:16:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line==null){
+return null;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+assert (line!=null);
 return line;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line!=null){
+return line;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line.replace(",","\n");
 }

PATTERN : /home/jiajun/GithubData/2015/V39/234/pattern-ver1-serial/src.maigosoft.mcpdict.SearchResultCursorAdapter.java-lineBreak.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line.replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return String.format("%s",line);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.startsWith("https")){
+return line;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.equalsIgnoreCase("/")){
+return line;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.equalsIgnoreCase("")){
+return "";
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:17:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line==null?"":line;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line!=null?line:new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+return line==null?new String():line;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+assert (line!=null):"Appointments day is not allowed to be null!";
 return line;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
-return line;
+String t=line;
+line=null;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.startsWith("\r\n")){
+line=line.substring(2);
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[121,123]
------------Candidate---------------
 public String formatLine(String line,int lineNumber){
+if(line.startsWith("extern ")){
+return line.substring(6,line.length()-1).trim();
+}
 return line;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:19:02 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.JSError.make:[85]#1.0
Compute Candidate : 2019.09.06 AD at 10:20:39 CDT - 2019.09.06 AD at 10:27:02 CDT , PNumber : 11188, CandNumber : 44 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+int a=0;
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+String OUTSTRING="";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName.isEmpty()){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments.isEmpty()){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+int a=1;
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+boolean b=true;
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName==null){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(type==null){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments==null){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(lineno<0){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(charno<0){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (sourceName!=null);
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (arguments!=null);
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (type!=null);
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName!=null){
+return new JSError(sourceName,null,lineno,charno,type,null,arguments);
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(type!=null){
+return new JSError(sourceName,null,lineno,charno,type,null,arguments);
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments!=null){
+return new JSError(sourceName,null,lineno,charno,type,null,arguments);
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:28:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (lineno>=0):"Receive a negative tratment";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (charno>=0):"Receive a negative tratment";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (sourceName!=null):"Appointments day is not allowed to be null!";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (type!=null):"Appointments day is not allowed to be null!";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (arguments!=null):"Appointments day is not allowed to be null!";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+import java.util.Calendar;
+
+import java.util.Date;
+
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (lineno!=0):"Receive a size tratment";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+import java.util.Calendar;
+
+import java.util.Date;
+
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+assert (charno!=0):"Receive a size tratment";
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(lineno>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(charno>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
-return new JSError(sourceName,null,lineno,charno,type,null,arguments);
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName.startsWith("\r\n")){
+sourceName=sourceName.substring(2);
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments.startsWith("\r\n")){
+arguments=arguments.substring(2);
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
-return new JSError(sourceName,null,lineno,charno,type,null,arguments);
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+return (JSError)(new JSError(sourceName,null,lineno,charno,type,null,arguments));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:30:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName==null||type==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName==null||arguments==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments==null||sourceName==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments==null||type==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(type==null||sourceName==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(type==null||arguments==null){
+throw new NullPointerException();
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments==null||sourceName==null||type==null){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName==null||arguments==null||type==null){
+return null;
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(arguments==null){
+arguments="20160101";
+}
+if(sourceName==null){
+sourceName="20200101";
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5352/pattern-ver1-serial/GitlabMonitor.src.main.java.org.gitmining.monitor.service.StudentService.java-getStudentEventItem.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[74,86]
------------Candidate---------------
-public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String... arguments){
+public static JSError make(String sourceName,int lineno,int charno,DiagnosticType type,String arguments){
+if(sourceName==null){
+sourceName="20160101";
+}
+if(arguments==null){
+arguments="20200101";
+}
 return new JSError(sourceName,null,lineno,charno,type,null,arguments);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5352/pattern-ver1-serial/GitlabMonitor.src.main.java.org.gitmining.monitor.service.StudentService.java-getStudentEventItem.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:32:03 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.JSError.getCharno:[200]#1.0
Compute Candidate : 2019.09.06 AD at 10:33:41 CDT - 2019.09.06 AD at 10:36:48 CDT , PNumber : 11259, CandNumber : 13 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
+import com.google.common.collect.Iterables;
+
 public int getCharno(){
-return charno;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V36/2385/pattern-ver1-serial/concourse-server.src.main.java.org.cinchapi.common.util.NonBlockingHashMultimap.java-size.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return this.charno;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/1924/pattern-ver1-serial/src.main.java.org.spongepowered.api.util.command.ImmutableCommandMapping.java-getCallable.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return this.getCharno();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+this.getCharno();
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return (int)(charno);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
-return charno;
+return charno&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+int a=0;
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+String OUTSTRING="";
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+int charno=8;
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:38:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+int a=1;
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:38:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/JSError.java[196,201]
------------Candidate---------------
 public int getCharno(){
+boolean b=true;
 return charno;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 10:38:17 CDT
--------------- END -----------------
Current failed test : com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2 | 2019.09.06 AD at 10:38:17 CDT
Already fixed : com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2
Finish : closure-63 > patch : 6 | Start : Fri Sep 06 06:06:59 CDT 2019 | End : 2019.09.06 AD at 10:38:17 CDT
