Repair : closure_40
Current failed test : com.google.javascript.jscomp.IntegrationTest::testIssue284 | 2019.09.05 AD at 05:22:36 CDT
Location : com.google.javascript.rhino.Node.toString:[930, 931, 932]#1.0
Compute Candidate : 2019.09.05 AD at 05:24:36 CDT - 2019.09.05 AD at 05:32:40 CDT , PNumber : 11338, CandNumber : 74 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+ StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+StringBuilder sb=new StringBuilder(null);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/104/pattern-ver1-serial/cps.hu.bme.mit.inf.cps.patterns.src-gen.hu.bme.mit.inf.cps.patterns.AllApplicationInstanceIsRunningMatch.java-newEmptyMatch.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(printSource){
 toString(sb,printSource,printAnnotations,printType);
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3119/pattern-ver1-serial/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java-setHighlighted.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(printAnnotations){
 toString(sb,printSource,printAnnotations,printType);
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3119/pattern-ver1-serial/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java-setHighlighted.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(printType){
 toString(sb,printSource,printAnnotations,printType);
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3119/pattern-ver1-serial/X3-InteractiveMap_GUI.src.main.java.de.ncm.x3.iam.gui.component.universe.JSector.java-setHighlighted.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+StringBuilder sb=new StringBuilder(1);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3262/pattern-ver1-serial/app.src.main.java.com.playing.lokasee.activites.MainActivity.java-onClose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
+import java.io.UnsupportedEncodingException;
+
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+StringBuilder sb=new StringBuilder("UTF-8");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/5909/pattern-ver1-serial/platform.security.handler.security-handler-api.src.main.java.org.codice.ddf.security.handler.api.PKIAuthenticationToken.java-PKIAuthenticationToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+StringBuilder sb=new StringBuilder(2);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5794/pattern-ver1-serial/app.src.main.java.io.github.louistsaitszho.erg2.gui.HistoryAdapter.java-startDateTimeToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+StringBuilder sb=new StringBuilder(1000);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V40/1052/pattern-ver1-serial/src.main.java.net.dv8tion.jda.requests.WebSocketClientV2.java-close.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+this.toString();
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString().trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return new String(sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return (String)sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString().toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+synchronized(this){
 toString(sb,printSource,printAnnotations,printType);
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return (String)(sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append("]");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append("            scope.apply();\n");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/4602/pattern-ver1-serial/layout.src.main.java.com.flarestar.drones.layout.directives.Click.java-afterViewCreated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb=sb;
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+int a=0;
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+String OUTSTRING="";
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(equals(sb)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(equals(printSource)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:35:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(equals(printAnnotations)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(equals(printType)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(equals(sb)){
+return null;
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(" & ");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append("    }\n");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+int a=1;
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(printSource);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(printAnnotations);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(printType);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+boolean b=true;
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString()+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb==null){
+return "";
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb==null){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(sb==null){
+return null;
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:37:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if("&null".equals(sb)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if("&null".equals(printSource)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if("&null".equals(printAnnotations)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if("&null".equals(printType)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb.equals("")){
+return "";
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb.equals("-1")){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+assert (sb!=null);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString().replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return String.format("%s",sb.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+assert (sb!=new StringBuilder());
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb.equals(null)){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(sb.equals(null)){
+return null;
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
-StringBuilder sb=new StringBuilder();
+String indexClassList="com.servinglynk.hmis.warehouse.model.v2014.Client";
+StringBuilder sb=new StringBuilder(indexClassList);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/910/pattern-ver1-serial/hmis-service-v2014.src.main.java.com.servinglynk.hmis.warehouse.service.impl.SearchServiceImpl.java-indexing.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(sb.equals("655")){
+System.out.println();
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb.equals("655")){
+System.out.println();
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if((Thread.currentThread().interrupted())){
+return null;
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString()==null?"":sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString()!=null?sb.toString():new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb==null?null:sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb.toString()==null?new String():sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(sb!=null){
 return sb.toString();
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb!=null?sb.toString():null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+assert (sb!=null):"Appointments day is not allowed to be null!";
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
-return sb.toString();
+return sb!=null?sb.toString():"";
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3020/pattern-ver1-serial/src.main.java.com.karumi.reddo.task.GitHubRepositoryTask.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(" ON UPDATE ").append(printSource);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V35/4790/pattern-ver1-serial/commons.datasource-impl.src.main.java.org.xipki.commons.datasource.impl.DataSourceWrapperImpl.java-getSqlToAddForeignKeyConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(" ON UPDATE ").append(printAnnotations);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V35/4790/pattern-ver1-serial/commons.datasource-impl.src.main.java.org.xipki.commons.datasource.impl.DataSourceWrapperImpl.java-getSqlToAddForeignKeyConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(" ON UPDATE ").append(printType);
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V35/4790/pattern-ver1-serial/commons.datasource-impl.src.main.java.org.xipki.commons.datasource.impl.DataSourceWrapperImpl.java-getSqlToAddForeignKeyConstraint.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
 toString(sb,printSource,printAnnotations,printType);
+if(sb==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:42:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append(" (");
+sb.append(") ");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append("\"category\" : [");
+sb.append("]");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/1798/pattern-ver1-serial/src.main.java.com.github.jerdeb.daqvalidator.Validator.java-listCompliantCDM.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+sb.append("<table style=\"text-align: center;\" width=\"100%\" "+"height=\"100%\" border=\"0\" bordercolor=\"#000000\">");
+sb.append("</table>");
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5923/pattern-ver1-serial/photoweb.src.com.utils.web.GenerateHTML.java-genDayNavigate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[926,933]
------------Candidate---------------
 public String toString(boolean printSource,boolean printAnnotations,boolean printType){
 StringBuilder sb=new StringBuilder();
+if(sb.toString().contains("E")&&sb.toString().charAt(sb.indexOf("E")+1)!='-'&&Integer.parseInt(sb.toString().substring(sb.indexOf("E")+1,sb.length()))<=15){
+return String.format("%.0f",Double.parseDouble(sb.toString().replace(' ','\0')));
+}
 toString(sb,printSource,printAnnotations,printType);
 return sb.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 40, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 05:42:36 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.Node.toString:[940, 941, 942, 943, 944, 954, 958, 966, 985, 994, 959, 960, 961, 962, 967, 968, 969, 970, 971, 972, 973, 975, 977, 980, 981, 986, 945, 949, 950, 952, 955, 956, 987, 988, 989, 990]#1.0
Compute Candidate : 2019.09.05 AD at 05:44:23 CDT - 2019.09.05 AD at 06:39:41 CDT , PNumber : 11402, CandNumber : 929 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+return ;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+return ;
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+return ;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+return ;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+return ;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/1695/pattern-ver1-serial/src.fr.project.bluechat.layout.activity.MainActivity.java-newName.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+return ;
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+return ;
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+return ;
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+return ;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+return ;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+return ;
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+return ;
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+return ;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+return ;
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==0){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==0){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString==null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5396/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiClient.java-getVirtualVolumes.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+long lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<=keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.Collection;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,myUid;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,DEFAULT_TIMEOUT2;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null&&first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V7/7763/pattern-ver1-serial/app.src.main.java.cheaphone.gui.Offerta.java-setOffert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+String jsTypeString=toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/3325/pattern-ver1-serial/jtrim-gui.src.main.java.org.jtrim.swing.component.SimpleAsyncImageDisplay.java-setRotateInDegrees.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i>keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,MAX_SERVICE_NODES;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,MAX_ZK_WAIT_RETRY_TIMES;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno==-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()==Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type<=Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type<=Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+float lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;i--){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=""){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/276/pattern-ver1-serial/src.edu.cpp.cs.cs141.final_project.User_Interface.TextUI.TextUserInterface.java-drawAlertText.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type>=Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type>=Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+int type=keys[1];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type!=Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type!=Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+Integer type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+Integer lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
-if(printAnnotations){
+if(true){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
-if(printSource){
+if(true){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
-if(printType){
+if(true){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,lineno;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 3 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4175/pattern-ver1-serial/keyvalue.common.src.main.java.alluxio.thrift.KeyValueWorkerClientService.java-findByThriftId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,localLevel;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 203 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4533/pattern-ver1-serial/src.com.orange.network.game.protocol.constants.GameConstantsProtos.java-valueOf.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 2 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/7455/pattern-ver1-serial/main.java.com.noni.embryio.TabsPagerAdapter.java-getItem.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+int type=keys[0];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5785/pattern-ver1-serial/src.Seminars.first.collections.ArrayPriorityQueue.java-extractMin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno<-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()<Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+int type=keys[2];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/963/pattern-ver1-serial/src.com.ict.apps.bobb.battle.BattleUtil.java-getJudgeResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type>Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type>Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()>Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno>-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 10 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/2044/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.item.ItemRelocatorModule.java-getRelocatorModule.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:49:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
-sb.append(']');
+sb.append('[');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5726/pattern-ver1-serial/org.osate.results.ui.src-gen.org.osate.results.ui.contentassist.antlr.internal.InternalResultsLexer.java-mT__43.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append('[');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5726/pattern-ver1-serial/org.osate.results.ui.src-gen.org.osate.results.ui.contentassist.antlr.internal.InternalResultsLexer.java-mT__43.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
-sb.append(' ');
+sb.append('[');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5726/pattern-ver1-serial/org.osate.results.ui.src-gen.org.osate.results.ui.contentassist.antlr.internal.InternalResultsLexer.java-mT__43.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
+sb.append('[');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5726/pattern-ver1-serial/org.osate.results.ui.src-gen.org.osate.results.ui.contentassist.antlr.internal.InternalResultsLexer.java-mT__43.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
-sb.append(' ');
+sb.append('[');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5726/pattern-ver1-serial/org.osate.results.ui.src-gen.org.osate.results.ui.contentassist.antlr.internal.InternalResultsLexer.java-mT__43.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case -1 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2443/pattern-ver1-serial/src.main.java.nl.rutgerkok.pokkit.world.PokkitBlockFace.java-toBukkit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;i++,new ArrayList<KeyBinding>()){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 13 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/5275/pattern-ver1-serial/src.edu.uiuc.groupmessage.GroupMessageProtos.java-valueOf.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
+case 0 :
+
+return ;
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/13/pattern-ver1-serial/src.main.java.org.apache.airavata.services.FileResource.java-findByThriftId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-2){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
+case 401 :
+
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+case 27 :
+
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1889/pattern-ver1-serial/app.src.main.java.johan.laststraw.AiPatterns.java-getAiPatternNr.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;type++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(sb!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/4918/pattern-ver1-serial/src.org.traccar.protocol.Gl200ProtocolDecoder.java-decode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(toString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,_afterComposeMethodCache;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(toString());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/1640/pattern-ver1-serial/spring-social-vkontakte.src.main.java.org.springframework.social.vkontakte.api.impl.WallTemplate.java-getPost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(sb!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
+i++;
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,mActions;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+sb.append(Token.name(type));
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append(Token.name(type));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
+sb.append(Token.name(type));
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,mRelationId;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5087/pattern-ver1-serial/src.main.java.ch.vorburger.raspberry.turtle.Turtle.java-haltInSeconds.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.toString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/7622/pattern-ver1-serial/AgreementMaker.src.am.app.feedback.FeedbackLoop.java-automaticValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ final int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ final int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ final int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ final int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final int type=keys[i];
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||this.first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(this.first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+this.toString();
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+this.toString();
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+this.toString();
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+this.toString();
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+this.toString();
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+this.toString();
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+this.toString();
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+this.toString();
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+this.toString();
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+this.toString();
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getString().trim());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
-sb.append(" [");
+sb.append(" [".trim());
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString(type).trim());
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
-sb.append(": ");
+sb.append(": ".trim());
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
-sb.append(value);
+sb.append(value.trim());
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
+sb.append("<invalid>".trim());
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString().trim());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
-sb.append(" : ");
+sb.append(" : ".trim());
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
-sb.append(jsTypeString);
+sb.append(jsTypeString.trim());
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7184/pattern-ver1-serial/src.Board.java-rotate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.Iterator;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==-1){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:58:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.Iterator;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==-1){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+lineno++;
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+type++;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+lineno++;
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+type++;
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+type++;
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
-if(printSource){
+if(!printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 06:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
-if(printType){
+if(!printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
-if(printAnnotations){
+if(!printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
+if(true){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+lineno--;
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+type--;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+lineno--;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+type--;
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+type--;
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
-String jsTypeString=jsType.toString();
+if(first!=null){
+String jsTypeString=first.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2709/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.expressions.Point2DExpression.java-getTablesInvolved.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value=x.toString().trim();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/973/pattern-ver1-serial/src.com.pindroid.authenticator.AuthenticatorActivity.java-handleLogin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+synchronized(sb){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+synchronized(sb){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+synchronized(sb){
 sb.append(' ');
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append((int)(getDouble()));
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name((int)(type)));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:01:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append((int)(' '));
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
-sb.append(' ');
+sb.append((int)(' '));
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
-sb.append(lineno);
+sb.append((int)(lineno));
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+PropListItem x=lookupProperty((int)(type));
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString((int)(type)));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
-sb.append(']');
+sb.append((int)(']'));
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+synchronized(sb){
 sb.append(' ');
+}
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/5664/pattern-ver1-serial/src.tr.broadcast.BroadcastManager.java-onClaimTokenReceive.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value="";
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6756/pattern-ver1-serial/src.main.java.org.silvertunnel_ng.netlib.adapter.url.impl.net.http.MessageHeader.java-mergeHeader.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value=null;
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append((getString()).toLowerCase());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append((first.getString()).toLowerCase());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append((propToString(type)).toLowerCase());
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
-sb.append(jsTypeString);
+sb.append((jsTypeString).toLowerCase());
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
-sb.append(" [");
+sb.append((" [").toLowerCase());
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
-sb.append(": ");
+sb.append((": ").toLowerCase());
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
-sb.append(value);
+sb.append((value).toLowerCase());
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
+sb.append(("<invalid>").toLowerCase());
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
-sb.append(" : ");
+sb.append((" : ").toLowerCase());
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean broadcast,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
-if(printSource){
+if(broadcast){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/4539/pattern-ver1-serial/src.main.java.io.minimum.minecraft.superbvote.votes.rewards.VoteReward.java-broadcastVote.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean broadcast){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
-if(printType){
+if(broadcast){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/4539/pattern-ver1-serial/src.main.java.io.minimum.minecraft.superbvote.votes.rewards.VoteReward.java-broadcastVote.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean printSource,boolean broadcast,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
-if(printAnnotations){
+if(broadcast){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/4539/pattern-ver1-serial/src.main.java.io.minimum.minecraft.superbvote.votes.rewards.VoteReward.java-broadcastVote.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+synchronized(this){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+synchronized(this){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+synchronized(this){
 sb.append(' ');
+}
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+synchronized(this){
 sb.append(' ');
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0,continentName,countryCode;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
+if(equals(printSource)){
+return ;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
+if(equals(printAnnotations)){
+return ;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
 }
+if(equals(printType)){
+return ;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+if(equals(lineno)){
+return ;
+}
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(equals(type)){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(equals(keys)){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(first.getString().isEmpty()){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(getString().isEmpty()){
+return ;
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+if(first.getString().isEmpty()){
+return ;
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if("<invalid>".isEmpty()){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:06:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+while(true){
+
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:08:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+while(true){
+
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+}
+while(true){
+
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+while(true){
+
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:12:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+while(true){
+
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:14:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
+while(true){
+
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:16:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+while(true){
+
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+while(true){
+
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+while(true){
+
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(Token.name(type).isEmpty()){
+return ;
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3182/pattern-ver1-serial/canal-client.src.main.java.com.tqmall.search.canal.handle.TableSectionHandle.java-runRowChangeAction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type>0){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type>0){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+i--;
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+synchronized(this){
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+synchronized(this){
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+synchronized(this){
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
+synchronized(this){
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+synchronized(this){
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+synchronized(sb){
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/1575/pattern-ver1-serial/api.JobContext.java-issueTask.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+if(sb==null){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(sb==null){
+return ;
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+if(sb==null){
+return ;
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:22:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if(sb==null){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(sb==null){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+if(sb==null){
+return ;
+}
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+if(sb==null){
+return ;
+}
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+if(sb==null){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+if(sb==null){
+return ;
+}
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys==null){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb==null){
+return ;
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:23:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(sb==null){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(sb==null){
+return ;
+}
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if(sb==null){
+return ;
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb==null){
+return ;
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(sb==null){
+return ;
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+if(sb==null){
+return ;
+}
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(sb==null){
+return ;
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:24:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb==null){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
+if(x==null){
+return ;
+}
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+if(jsTypeString==null){
+return ;
+}
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3545/pattern-ver1-serial/server.src.main.java.nl.inl.blacklab.server.requesthandlers.SearchParameters.java-docSortSettings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;i++,Charset.forName("UTF-8")){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(sb!=null){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb!=null){
 sb.append(' ');
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:25:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(getString()!=null){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+first=this;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(sb==null){
+return ;
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if(sb==null){
+return ;
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(keys==getSortedPropTypes()){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString.equals(null)){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(jsType.equals(null)){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+if(sb!=null){
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/5324/pattern-ver1-serial/src.main.java.de.cismet.cids.custom.objecteditors.wrrl_db_mv.HydrologRouteEditor.java-sldZoomStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+synchronized(this){
 sb.append("<invalid>");
+}
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(' '>0){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+if(lineno>0){
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if("index".equals(sb)){
+return ;
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if("index".equals(sb)){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if("index".equals(sb)){
+return ;
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if("index".equals(sb)){
+return ;
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if("index".equals(sb)){
+return ;
+}
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if("index".equals(sb)){
+return ;
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if("index".equals(sb)){
+return ;
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if("index".equals(sb)){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+if("index".equals(sb)){
+return ;
+}
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
+if("index".equals(sb)){
+return ;
+}
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(sb.equals("TIME")){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:28:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb.equals("TIME")){
+return ;
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb.equals("TIME")){
+return ;
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if(sb.equals("TIME")){
+return ;
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(sb.equals("TIME")){
+return ;
+}
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(sb.equals("TIME")){
+return ;
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb.equals("TIME")){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(sb.equals("TIME")){
+return ;
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(sb.equals("TIME")){
+return ;
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:29:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+if("&null".equals(sb)){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if("&null".equals(sb)){
+return ;
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+if("&null".equals(sb)){
+return ;
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if("&null".equals(sb)){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if("&null".equals(sb)){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if("&null".equals(sb)){
+return ;
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if("&null".equals(printSource)){
+return ;
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:30:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if("&null".equals(printAnnotations)){
+return ;
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+if(sb.equals("DATETIME")){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(sb.equals("DATETIME")){
+return ;
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+if(sb.equals("DATETIME")){
+return ;
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if(sb.equals("DATETIME")){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+if(sb.equals("DATETIME")){
+return ;
+}
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+if(sb.equals("DATETIME")){
+return ;
+}
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+if(sb.equals("DATETIME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(sb.equals("DATETIME")){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+if(sb.equals("DATETIME")){
+return ;
+}
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ final String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
+if(x==null){
+continue;
+}
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(value==null){
+continue;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(first==null){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final int type=keys[i];
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString.isEmpty()){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7829/pattern-ver1-serial/app.src.main.java.de.tum.in.tumcampusapp.activities.TransportationDetailsActivity.java-onLoadInBackground.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type).trim());
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ @SuppressWarnings("UnusedAssignment") int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ @SuppressWarnings("UnusedAssignment") int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ @SuppressWarnings("UnusedAssignment") PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ @SuppressWarnings("UnusedAssignment") int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ @SuppressWarnings("UnusedAssignment") int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ @SuppressWarnings("UnusedAssignment") String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ @SuppressWarnings("UnusedAssignment") int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ @SuppressWarnings("UnusedAssignment") PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ @SuppressWarnings("UnusedAssignment") String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ @SuppressWarnings("UnusedAssignment") int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ @SuppressWarnings("UnusedAssignment") int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ @SuppressWarnings("UnusedAssignment") String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ @SuppressWarnings("UnusedAssignment") int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+ @SuppressWarnings("UnusedAssignment") PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
+ @SuppressWarnings("UnusedAssignment") String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb=sb;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
+ final int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+ final int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
+ final String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
+ final int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
-PropListItem x=lookupProperty(type);
+ final int type=keys[i];
+ final PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.equals("")){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
+if(x.equals("")){
+return ;
+}
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(i==4){
+continue;
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+lineno=1000;
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(true){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(true){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(true){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(true){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
+if(this instanceof StringNode&&printSource){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2749/pattern-ver1-serial/Stuyablo.java-combat.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append("Error, "+getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4103/pattern-ver1-serial/src.recommendations.nodes.Product.java-Product.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append("Error, "+first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4103/pattern-ver1-serial/src.recommendations.nodes.Product.java-Product.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(type<0){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("https://myschool.ru.is/myschool/"+Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append("https://myschool.ru.is/myschool/"+getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append("https://myschool.ru.is/myschool/"+getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append("https://myschool.ru.is/myschool/"+first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append("https://myschool.ru.is/myschool/"+propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+Arrays.sort(keys);
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+Arrays.sort(keys);
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(jsType!=null){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.equals("-1")){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
+if(x.equals("-1")){
+return ;
+}
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+if(jsTypeString.equals("-1")){
+return ;
+}
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" votes");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getString()+" votes");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getDouble()+" votes");
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString()+" votes");
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString(type)+" votes");
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+String value;
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
-String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getDouble()-1);
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/4594/pattern-ver1-serial/EzSignin.app.src.main.java.signin.ez.ezsignin.MainActivity.java-populateFieldsWithRecord.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+int a=0;
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+int a=0;
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+int a=0;
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+int a=0;
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+int a=0;
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+int a=0;
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+int a=0;
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+int a=0;
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+int a=0;
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+int a=0;
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("There was a problem with the call to ManyWho: "+Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append("There was a problem with the call to ManyWho: "+getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append("There was a problem with the call to ManyWho: "+getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append("There was a problem with the call to ManyWho: "+first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append("There was a problem with the call to ManyWho: "+propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean readOnly,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
-if(printSource){
+if(!readOnly){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5595/pattern-ver1-serial/chrl-parent.chrl-vaadin-utils.src.main.java.at.chrl.vaadin.component.generator.GeneratedAbstractField.java-GeneratedAbstractField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean readOnly){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
-if(printType){
+if(!readOnly){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5595/pattern-ver1-serial/chrl-parent.chrl-vaadin-utils.src.main.java.at.chrl.vaadin.component.generator.GeneratedAbstractField.java-GeneratedAbstractField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
-private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+private void toString(StringBuilder sb,boolean printSource,boolean readOnly,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
-if(printAnnotations){
+if(!readOnly){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5595/pattern-ver1-serial/chrl-parent.chrl-vaadin-utils.src.main.java.at.chrl.vaadin.component.generator.GeneratedAbstractField.java-GeneratedAbstractField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(sb.equals(keys)){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:41:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(sb.equals(type)){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.equals(sb)){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(keys.equals(type)){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+String OUTSTRING="";
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+String OUTSTRING="";
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+String OUTSTRING="";
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+String OUTSTRING="";
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+String OUTSTRING="";
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+String OUTSTRING="";
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+String OUTSTRING="";
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+String OUTSTRING="";
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+String OUTSTRING="";
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+String OUTSTRING="";
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getDouble()*1000);
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;){
+i++;
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7304/pattern-ver1-serial/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.file.tasks.IngestUnmanagedFilesystems.java-ingestInChunks.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(value==null){
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:43:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Strings.nullToEmpty(Token.name(type)));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(Strings.nullToEmpty(getString()));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(Strings.nullToEmpty(first.getString()));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(Strings.nullToEmpty(propToString(type)));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int type=5;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int Token=5;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int FUNCTION=5;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int NUMBER=5;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int first=5;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append((Token.name(type)).toLowerCase());
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(Double.isNaN(type)){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(Double.isNaN(type)){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString.equalsIgnoreCase(null)){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/409/pattern-ver1-serial/src.com.wasteofplastic.askyblock.ASkyBlock.java-loadPluginConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(Math.abs(type)));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(Math.abs(getDouble()));
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append(Math.abs(' '));
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
+for(int i=0;i<keys.length;Math.abs(i++)){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
-sb.append(' ');
+sb.append(Math.abs(' '));
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
-sb.append(lineno);
+sb.append(Math.abs(lineno));
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
+PropListItem x=lookupProperty(Math.abs(type));
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:47:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString(Math.abs(type)));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
-sb.append(']');
+sb.append(Math.abs(']'));
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+int indexSelection=0;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+int indexSelection=0;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+int indexSelection=0;
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+int indexSelection=0;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+int indexSelection=0;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+int indexSelection=0;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+int indexSelection=0;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
+int indexSelection=0;
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
+int indexSelection=0;
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.Arrays;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
-int type=keys[i];
+int type=keys[i-1];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(keys.equals("setPackMode")){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("PATH: \n"+Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append("PATH: \n"+getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append("PATH: \n"+propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append("PATH: \n"+getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append("PATH: \n"+first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(" & ");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(" & ");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(" & ");
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(" & ");
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+sb.append(" & ");
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+sb.append(" & ");
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+sb.append(" & ");
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+sb.append(" & ");
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
+sb.append(" & ");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
+String value;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append("    }\n");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append("    }\n");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append("    }\n");
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append("    }\n");
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+sb.append("    }\n");
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+sb.append("    }\n");
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+sb.append("    }\n");
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+sb.append("    }\n");
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(String.valueOf(Token.name(type)));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(String.valueOf(getString()));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(String.valueOf(getDouble()));
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(String.valueOf(first.getString()));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(String.valueOf(propToString(type)));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if("Chrome".equals(first)||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+int a=1;
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+int a=1;
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+int a=1;
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+int a=1;
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+int a=1;
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+int a=1;
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+int a=1;
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+int a=1;
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+int a=1;
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
+int a=1;
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+"/logout");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getString()+"/logout");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getDouble()+"/logout");
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString()+"/logout");
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString(type)+"/logout");
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:55:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("\nDealer has: \n"+Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append("\nDealer has: \n"+getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append("\nDealer has: \n"+propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append("\nDealer has: \n"+getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append("\nDealer has: \n"+first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+String FUNCTION="%#.&f";
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+String NUMBER="%#.&f";
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:56:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+boolean NUMBER=true;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+boolean NAME=true;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+boolean FUNCTION=true;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+boolean Token=true;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+String value;
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+String value;
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+String value;
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+String value;
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+String value;
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+String value;
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+String value;
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+String value;
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
+if(sb!=null){
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
+}
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+boolean b=true;
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+boolean b=true;
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+boolean b=true;
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+boolean b=true;
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+boolean b=true;
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+boolean b=true;
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+boolean b=true;
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+boolean b=true;
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 07:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
+boolean b=true;
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
+boolean b=true;
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value=x.toString()+1;
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.equals(null)){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(sb==null){
+continue;
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null||jsTypeString.isEmpty()){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/354/pattern-ver1-serial/hapi-fhir-base.src.main.java.ca.uhn.fhir.parser.XmlParser.java-encodeCompositeElementChildrenToStreamWriter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+sb.append(' ');
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+sb.append("<invalid>");
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+sb.append(' ');
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+sb.append("<invalid>");
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+sb.append(' ');
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+sb.append("<invalid>");
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+sb.append(getDouble());
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+sb.append(' ');
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append(' ');
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append("<invalid>");
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+sb.append(getDouble());
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append("<invalid>");
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+sb.append(' ');
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+sb.append("<invalid>");
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
+sb.append(' ');
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+sb.append(' ');
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+sb.append("<invalid>");
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.isEmpty()){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V13/2794/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.VNXeCommunicationInterface.java-discoverIscsiPorts.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(getString());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(getDouble());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(' ');
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(" [");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(": ");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(']');
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append(getDouble());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(getDouble());
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+sb.append(lineno);
 if(lineno!=-1){
 sb.append(' ');
-sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
 sb.append(' ');
+if(this instanceof StringNode){
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(getString());
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append("<invalid>");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/2884/pattern-ver1-serial/src.edu.asu.laits.gui.nodeeditor.CalculationsPanelView.java-processNodeEquation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+sb.append(' ');
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+sb.append(getString());
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+sb.append(' ');
 int lineno=getLineno();
 if(lineno!=-1){
-sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+sb.append(' ');
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+sb.append(" [");
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
-sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+sb.append(": ");
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
-sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+sb.append(' ');
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(true){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(!getString().equals("")){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+sb.append(getDouble());
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+sb.append(getDouble());
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+sb.append(jsTypeString);
 if(jsTypeString!=null){
 sb.append(" : ");
-sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+sb.append(lineno);
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+sb.append(lineno);
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
+sb.append(jsTypeString);
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+sb.append(jsTypeString);
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+sb.append(getDouble());
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+sb.append(getDouble());
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1||lineno==Long.MIN_VALUE){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION||type==Long.MIN_VALUE){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER||type==Long.MIN_VALUE){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
-sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(' ');
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:07:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(' ');
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(' ');
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append("<invalid>");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+sb.append(' ');
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+sb.append("<invalid>");
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(' ');
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append("<invalid>");
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:08:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(' ');
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append("<invalid>");
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value=x.toString().replaceAll("\n","");
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/6059/pattern-ver1-serial/src.main.java.com.sequenceiq.cloudbreak.shell.commands.TemplateCommands.java-createAzureTemplate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
-value=x.toString();
+value=(x.toString()).replace("\\","\\\\");
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1801/pattern-ver1-serial/Alfresco.Alfresco-EE-v5.0.AAAR-Alfresco-EE-v5.0-Repository.src.main.java.com.fcorti.aaar.GetNodesModifiedAfterWebScript.java-getCustomProperties.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+int lineno=getLineno();
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+int[] keys=getSortedPropTypes();
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
-int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(getDouble());
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(getDouble());
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getDouble()*-1);
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+sb.append(getDouble());
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
 sb.append(' ');
+if(type==Token.FUNCTION){
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append("<invalid>");
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(getDouble());
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
 }
 }
+sb.append(getDouble());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:10:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append("<invalid>");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(new BigDecimal(Token.name(type)).setScale(2,RoundingMode.HALF_UP));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(new BigDecimal(getString()).setScale(2,RoundingMode.HALF_UP));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(new BigDecimal(getDouble()).setScale(2,RoundingMode.HALF_UP));
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(new BigDecimal(first.getString()).setScale(2,RoundingMode.HALF_UP));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(new BigDecimal(propToString(type)).setScale(2,RoundingMode.HALF_UP));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:12:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+sb.append(' ');
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+sb.append("<invalid>");
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append(getDouble());
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(' ');
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append("<invalid>");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:13:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(' ');
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(' ');
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
-sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(getDouble());
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5076/pattern-ver1-serial/src.main.java.org.jsweet.transpiler.StaticInitilializerAnalyzer.java-visitClassDef.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+assert (sb!=null);
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+assert (sb!=null);
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+assert (sb!=null);
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+assert (sb!=null);
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:14:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+assert (sb!=null);
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+assert (sb!=null);
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+assert (sb!=null);
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+assert (sb!=null);
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+assert (sb!=null);
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+assert (sb!=null);
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(' ');
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:15:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(" [");
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(": ");
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(']');
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+try{
 sb.append(' ');
+}finally{
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+try{
 sb.append(getString());
+}finally{
+sb.append(' ');
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type).subSequence(0,6));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getString().subSequence(0,6));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString().subSequence(0,6));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(propToString(type).subSequence(0,6));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(Double.isNaN(lineno)){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(sb!=null){
+sb.append(Token.name(type));
+if(this instanceof StringNode){
+sb.append(' ');
+sb.append(getString());
+}else {
+if(type==Token.FUNCTION){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
+}
+}
+if(printSource){
+int lineno=getLineno();
+if(lineno!=-1){
+sb.append(' ');
+sb.append(lineno);
+}
+}
+if(printAnnotations){
+int[] keys=getSortedPropTypes();
+for(int i=0;i<keys.length;i++){
+int type=keys[i];
+PropListItem x=lookupProperty(type);
+sb.append(" [");
+sb.append(propToString(type));
+sb.append(": ");
+String value;
+switch (type){
+default :
+
+value=x.toString();
+break;
+}
+sb.append(value);
+sb.append(']');
+}
+}
+if(printType){
+if(jsType!=null){
+String jsTypeString=jsType.toString();
+if(jsTypeString!=null){
+sb.append(" : ");
+sb.append(jsTypeString);
+}
+}
+}
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
+sb.append(' ');
+sb.append(getString());
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+}else {
+if(sb!=null){
+if(type==Token.FUNCTION){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
 }else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
+}
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb!=null){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb!=null){
+int[] keys=getSortedPropTypes();
+for(int i=0;i<keys.length;i++){
+int type=keys[i];
+PropListItem x=lookupProperty(type);
+sb.append(" [");
+sb.append(propToString(type));
+sb.append(": ");
+String value;
+switch (type){
+default :
+
+value=x.toString();
+break;
+}
+sb.append(value);
+sb.append(']');
+}
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+if(sb!=null){
+sb.append(first.getString());
+}
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(sb!=null){
+int type=keys[i];
+PropListItem x=lookupProperty(type);
+sb.append(" [");
+sb.append(propToString(type));
+sb.append(": ");
+String value;
+switch (type){
+default :
+
+value=x.toString();
+break;
+}
+sb.append(value);
+sb.append(']');
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
+sb.append(' ');
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+sb.append(' ');
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/442/pattern-ver1-serial/homework-g597-dmitrieva.src.main.java.ru.mipt.java2016.homework.g597.dmitrieva.task1.StackCalculator.java-toReversedPolish.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+assert (lineno!=getLineno());
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+assert (keys!=getSortedPropTypes());
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+assert (keys!=null);
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:19:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+if(sb.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getString().replace("\\n","\n"));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/3956/pattern-ver1-serial/Barlift.app.src.main.java.com.barliftapp.barlift.fragment.DealFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString().replace("\\n","\n"));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/3956/pattern-ver1-serial/Barlift.app.src.main.java.com.barliftapp.barlift.fragment.DealFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(value.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append("<invalid>");
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+assert (sb!=null);
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+assert (sb!=null);
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+assert (sb!=null);
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+assert (sb!=null);
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+assert (sb!=null);
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+assert (sb!=null);
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+assert (sb!=null);
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:21:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+assert (sb!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+assert (sb!=null);
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+assert (sb!=null);
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.equals("655")){
+System.out.println();
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null||"查看红包".equals(jsTypeString)){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(jsType!=null||"查看红包".equals(jsType)){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER||"查看红包".equals(type)){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION||"查看红包".equals(type)){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:22:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1||"查看红包".equals(lineno)){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION||type==3){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1||lineno==3){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER||type==3){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(first.getString());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(propToString(type));
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+sb.append(first.getString());
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:23:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
+sb.append(first.getString());
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/293/pattern-ver1-serial/common.ganymedes01.aobd.recipes.RecipesHandler.java-craftingRecipes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null||jsTypeString==""){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/7341/pattern-ver1-serial/log210_webproject_BDD.src.RechercheLivre.java-RechercheLivre.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type<0||type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type<0||type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno<0||lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(first.getString());
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/2664/pattern-ver1-serial/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.entities.EntityGrapple.java-EntityGrapple.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+sb.append(first.getString());
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:24:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+sb.append(first.getString());
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+sb.append(propToString(type));
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+sb.append(first.getString());
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+sb.append(first.getString());
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+sb.append(first.getString());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+PropListItem x=lookupProperty(type);
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
 String jsTypeString=jsType.toString();
+if(jsType!=null){
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:25:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+PropListItem x=lookupProperty(type);
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
-PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+String jsTypeString=jsType.toString();
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(first.getString());
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(first.getString());
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER||type==0){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION||type==0){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1||lineno==0){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(first.getString());
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+sb.append(first.getString());
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+}
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
+if(sb.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+if(keys.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1||lineno>9){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER||type>9){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:28:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION||type>9){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" -u "+sb);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" -u "+printSource);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" -u "+printAnnotations);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" -u "+printType);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(Token.name(type)+" -u "+type);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
+sb.append(propToString(type));
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4301/pattern-ver1-serial/api.src.main.java.com.abiquo.api.services.cloud.VirtualMachineService.java-changeVirtualMachineState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:29:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+sb.append(propToString(type));
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/4301/pattern-ver1-serial/api.src.main.java.com.abiquo.api.services.cloud.VirtualMachineService.java-changeVirtualMachineState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append(first.getString());
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION&&type<4000000){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1&&lineno<4000000){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER&&type<4000000){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null||jsTypeString==null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(jsType!=null||jsType==null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null||jsTypeString.trim().isEmpty()){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1097/pattern-ver1-serial/src.bakatxt.core.BakaProcessor.java-editEndTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first==null?null:first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(lineno!=-1&&lineno!=9999){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(type==Token.NUMBER&&type!=9999){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(type==Token.FUNCTION&&type!=9999){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
+if(Token.NUMBER>0&&type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
+if(Token.FUNCTION>0&&type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
-if(lineno!=-1){
+if(-1>0&&lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first!=null?first.getString():null);
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+sb.append(propToString(type));
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2108/pattern-ver1-serial/pac4j-oauth.src.main.java.org.pac4j.oauth.client.BaseOAuth10Client.java-addAccessTokenToProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
+PropListItem x=lookupProperty(type);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
+String jsTypeString=jsType.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:34:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+assert (sb!=null):"Appointments day is not allowed to be null!";
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+assert (sb!=null):"Appointments day is not allowed to be null!";
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+assert (sb!=null):"Appointments day is not allowed to be null!";
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+ final String currency=propToString(type);
 PropListItem x=lookupProperty(type);
 sb.append(" [");
-sb.append(propToString(type));
+sb.append(currency);
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 2, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+PropListItem x=lookupProperty(type);
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/2202/pattern-ver1-serial/fhirmapper.src.main.java.org.openmrs.module.fhir.mapper.bundler.ProcedureMapper.java-setDiagnosisToDiagnosticReport.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+synchronized(this){
 sb.append(' ');
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+synchronized(this){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+synchronized(this){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
+synchronized(this){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(sb==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(first==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if("<invalid>"==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(first.getString()==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+sb.append(Token.name(type));
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(Token.name(type));
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+sb.append(Token.name(type));
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append(Token.name(type));
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+sb.append(Token.name(type));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+sb.append(Token.name(type));
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append(Token.name(type));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5726/pattern-ver1-serial/library.src.main.java.com.cocosw.bottomsheet.ClosableSlidingLayout.java-onViewReleased.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(" (");
+sb.append(") ");
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+sb.append(" (");
 sb.append(getString());
+sb.append(") ");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append(" (");
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(") ");
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(" (");
+sb.append(") ");
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(" (");
 sb.append(getDouble());
+sb.append(") ");
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+sb.append(" (");
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+sb.append(") ");
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+sb.append(" (");
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
+sb.append(") ");
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+sb.append(" (");
+sb.append(") ");
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+sb.append(" (");
 PropListItem x=lookupProperty(type);
 sb.append(" [");
+sb.append(") ");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+if(sb!=null){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
-sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V62/5851/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.grid.GridMemberHandler.java-onTileRemoved.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(Token.name(type));
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
+}
+if(sb!=null){
 sb.append(getString());
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append(' '+",");
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
-sb.append(' ');
+sb.append(' '+",");
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3838/pattern-ver1-serial/Chess.src.CSE712.java-WriteFENToFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append(' '+",");
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
+sb.append(' '+",");
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3838/pattern-ver1-serial/Chess.src.CSE712.java-WriteFENToFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
+sb.append(' '+",");
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
-sb.append(' ');
+sb.append(' '+",");
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/3838/pattern-ver1-serial/Chess.src.CSE712.java-WriteFENToFile.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+sb.append(Token.name(type));
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+sb.append(Token.name(type));
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb==null){
+return ;
+}
 int[] keys=getSortedPropTypes();
+if(keys==null){
+return ;
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+ final String dropStatement=Token.name(type);
+sb.append(dropStatement);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+sb.append(Token.name(type));
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/1924/pattern-ver1-serial/src.gui.map.MapDrawerPanel.java-restoreSession.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+sb.append(Token.name(type));
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
+sb.append(Token.name(type));
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
+if(sb.equals("NAME")){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 sb.append(' ');
 sb.append(getString());
+if(sb.equals("NAME")){
+return ;
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+}
+if(sb.equals("NAME")){
+return ;
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if(sb.equals("NAME")){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 sb.append(' ');
 sb.append(getDouble());
+if(sb.equals("NAME")){
+return ;
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(sb.equals("NAME")){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
+if(sb.equals("NAME")){
+return ;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+if(sb.equals("NAME")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
+if(sb.equals("CALL_RECEIVED_AT")){
+return ;
+}
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
+if(sb.equals("NAME")){
+return ;
+}
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
+if(jsType!=null&&!jsType.equals("")){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null&&!jsTypeString.equals("")){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1339/pattern-ver1-serial/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java-onKeyDown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1339/pattern-ver1-serial/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java-onKeyDown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(sb!=null){
 sb.append(' ');
+}
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+if(sb!=null){
 sb.append(' ');
+}
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1339/pattern-ver1-serial/app.src.main.java.com.mobile.mipago.mipago.MainActivity.java-onKeyDown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+if(sb!=null){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+}
+if(sb.equals("INFO")){
+return ;
 }
+if(sb.equals("UNIT")){
+return ;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+}
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
+}
+if(sb.equals("INFO")){
+return ;
 }
+if(sb.equals("UNIT")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
+if(sb.equals("INFO")){
+return ;
+}
+if(sb.equals("UNIT")){
+return ;
+}
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
+if(getString()!=null){
 sb.append(getString());
+}else {
+sb.append("");
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/6520/pattern-ver1-serial/src.main.java.org.metadatacenter.submission.biosample.core.BioSampleValidator.java-generateBioSampleSubmissionXML.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
+if(value!=null){
 sb.append(value);
+}
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/7166/pattern-ver1-serial/src.main.java.net.dandielo.core.items.dItem.java-addAttribute.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
+if(value!=x.toString()){
 sb.append(value);
+}
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(Token.name(type)!=null){
 sb.append(Token.name(type));
+}else {
+sb.append("");
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/4235/pattern-ver1-serial/src.yakitmessenging.TextMessengerServlet.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(value==null){
+value=keys.toString();
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/70/pattern-ver1-serial/app.src.main.java.kr.ac.snu.imlab.scdc.service.core.SCDCService.java-changeConfig.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(value==null){
+value=x.toString();
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/70/pattern-ver1-serial/app.src.main.java.kr.ac.snu.imlab.scdc.service.core.SCDCService.java-changeConfig.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+sb.append(Token.name(type));
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
+sb.append(Token.name(type));
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+sb.append(Token.name(type));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+sb.append(Token.name(type));
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+sb.append(Token.name(type));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+sb.append(Token.name(type));
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+sb.append(Token.name(type));
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
+sb.append(Token.name(type));
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+sb.append(Token.name(type));
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
+if(x==null){
+throw new IllegalStateException("User isn't registered! "+type);
+}
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()!=Token.NAME||"查看红包".equals(first==null)){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()!=Token.NAME||first.getType()=='%'){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(true){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()!=Token.NAME==false){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5310/pattern-ver1-serial/src.main.java.snap.http.BearerAuthenticator.java-authenticate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(first.getString()+" ("+first.getLength()+")");
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/592/pattern-ver1-serial/app.src.main.java.website.julianrosser.podcastplayer.helpers.LibrarySongListAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()!=Token.NAME&&first.getParent()!=null){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/4529/pattern-ver1-serial/org.lateralgm.subframes.GmObjectFrame.java-valueChanged.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
+if(first==null||first.getType()!=Token.NAME==true){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(" : ");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
-sb.append(" : ");
+sb.append(Token.name(type));
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("<invalid>");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
+sb.append(Token.name(type));
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(" : ");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(getString());
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(Token.name(type));
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append("<invalid>");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(" [");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
-sb.append(" [");
+sb.append(Token.name(type));
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(": ");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
-sb.append(": ");
+sb.append(Token.name(type));
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append("<invalid>");
+sb.append(' ');
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(' ');
+sb.append(' ');
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(' ');
+sb.append("<invalid>");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
 sb.append(getString());
+sb.append(' ');
+if(this instanceof StringNode){
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+if(this instanceof StringNode){
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(getDouble());
+sb.append(' ');
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+sb.append(getDouble());
+sb.append("<invalid>");
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 2, DEL : 6
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
+boolean succeeded=false;
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+succeeded=true;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
 }
+if(!succeeded){
+return ;
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+}else {
+if(type==12){
+return ;
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
+sb.append("<invalid>");
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
+sb.append(' ');
+sb.append(getString());
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/3937/pattern-ver1-serial/src.Main.Analysis.java-calculatePrecisionRecall.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
+}
+if(sb==null||value==null){
+throw new NullPointerException();
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
+if(sb==null||jsTypeString==null){
+throw new NullPointerException();
+}
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:52:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
+if(sb==null||jsTypeString==null){
+throw new NullPointerException();
+}
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
+sb.append(first.getString());
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
-sb.append(first.getString());
+sb.append(Token.name(type));
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
+if(lineno==12){
+return ;
+}else {
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+if(type==Token.FUNCTION){
 sb.append(' ');
-sb.append(getString());
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
-sb.append(getString());
+sb.append(getDouble());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
-sb.append(getDouble());
+sb.append(getString());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/3937/pattern-ver1-serial/src.Main.Analysis.java-calculatePrecisionRecall.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+synchronized(this){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
+synchronized(this){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 8, INS : 0, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+long startTime=System.currentTimeMillis();
 sb.append(' ');
 sb.append(getString());
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
+long startTime=System.currentTimeMillis();
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
+long startTime=System.currentTimeMillis();
 sb.append(' ');
 sb.append(getDouble());
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
+long startTime=System.currentTimeMillis();
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
+long startTime=System.currentTimeMillis();
 sb.append(' ');
 sb.append(lineno);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
+long startTime=System.currentTimeMillis();
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+long startTime=System.currentTimeMillis();
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
+long startTime=System.currentTimeMillis();
 sb.append(" : ");
 sb.append(jsTypeString);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+long startTime=System.currentTimeMillis();
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
+long startTime=System.currentTimeMillis();
 sb.append("<invalid>");
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
-}
 }
-if(printSource){
-int lineno=getLineno();
-if(lineno!=-1){
-sb.append(' ');
-sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 0, DEL : 14
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
+if(first!=null){
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/501/pattern-ver1-serial/app.src.main.java.com.appteam.nimbus.adapters.NotificationAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
+}
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+if(printSource){
+int lineno=getLineno();
+if(lineno!=-1){
+sb.append(' ');
+sb.append(lineno);
+}
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
-}
 }
-if(printSource){
-int lineno=getLineno();
-if(lineno!=-1){
-sb.append(' ');
-sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+synchronized(this){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
-sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+if(type==Token.FUNCTION){
+sb.append(' ');
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 1, DEL : 15
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:56:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 1, DEL : 15
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
-String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
-sb.append(" : ");
-sb.append(jsTypeString);
-}
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 0, DEL : 16
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 1, DEL : 15
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 1, DEL : 15
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
 }
+}else {
+String jsTypeString=jsType.toString();
+if(jsTypeString!=null){
+sb.append(" : ");
+sb.append(jsTypeString);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/3950/pattern-ver1-serial/predictiveclustering.src.main.java.predictiveclustering.utils.Split.java-splitGroup.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
+if(jsType!=null){
+String jsTypeString=jsType.toString();
+if(jsTypeString!=null){
+sb.append(" : ");
+sb.append(jsTypeString);
+}
+}
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
-if(jsType!=null){
-String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
-sb.append(" : ");
-sb.append(jsTypeString);
-}
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
-}
-}
-if(printType){
-if(jsType!=null){
-String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
-sb.append(" : ");
-sb.append(jsTypeString);
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 0, DEL : 17
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
+if(jsType!=null){
+String jsTypeString=jsType.toString();
+if(jsTypeString!=null){
+sb.append(" : ");
+sb.append(jsTypeString);
+}
+}
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
+synchronized(this){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
+}
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
 sb.append(first.getString());
-}
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
+if(jsTypeString!=null&&jsTypeString.trim().length()==0){
+jsTypeString=null;
+}
+if(jsTypeString!=null||jsTypeString.trim().length()==0){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5053/pattern-ver1-serial/src.edu.clemson.lph.civet.prefs.CivetConfig.java-getEmailErrorsDirPath.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 7, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
+String jsTypeString=jsType.toString();
+if(jsTypeString!=null){
+sb.append(" : ");
+sb.append(jsTypeString);
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
-String jsTypeString=jsType.toString();
-if(jsTypeString!=null){
-sb.append(" : ");
-sb.append(jsTypeString);
-}
+sb.append(' ');
+sb.append(getString());
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
+int lineno=getLineno();
+if(lineno!=-1){
 sb.append(' ');
-sb.append(getString());
+sb.append(lineno);
+}
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
-int lineno=getLineno();
-if(lineno!=-1){
 sb.append(' ');
-sb.append(lineno);
-}
+sb.append(getString());
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 19, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
+for(int i=0;i<4;i++){
+keys[i]=Math.min(1,Math.max(0,keys[i]));
+}
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
+}else {
+if(type==Token.FUNCTION){
+sb.append(' ');
+sb.append(getString());
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/3937/pattern-ver1-serial/src.Main.Analysis.java-calculatePrecisionRecall.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 24, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
 }else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 0, DEL : 30
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
 }else {
 sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
+}else {
+if(type==12){
+return ;
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
+}
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 08:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
 }else {
-if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
-}
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
-sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
+sb.append(Token.name(type));
+if(this instanceof StringNode){
+sb.append(' ');
+sb.append(getString());
+}else {
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 31, UPD : 0, INS : 1, DEL : 30
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
-}
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 0, INS : 0, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
-}
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
+if(this instanceof StringNode){
+sb.append(' ');
+sb.append(getString());
+}else {
+if(type==Token.FUNCTION){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
+}
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 1, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if(printSource){
+int lineno=getLineno();
+if(lineno!=-1){
+sb.append(' ');
+sb.append(lineno);
+}
+}
+if(printAnnotations){
+int[] keys=getSortedPropTypes();
+for(int i=0;i<keys.length;i++){
+int type=keys[i];
+PropListItem x=lookupProperty(type);
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
-}
 }
-if(printSource){
-int lineno=getLineno();
-if(lineno!=-1){
-sb.append(' ');
-sb.append(lineno);
 }
 }
-if(printAnnotations){
-int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
-int type=keys[i];
-PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 1, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
-}
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
+}
+if(this instanceof StringNode){
+sb.append(' ');
+sb.append(getString());
+}else {
+if(type==Token.FUNCTION){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 1, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
+if(printSource){
+int lineno=getLineno();
+if(lineno!=-1){
+sb.append(' ');
+sb.append(lineno);
+}
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
-}
 }
 }
-if(printSource){
-int lineno=getLineno();
-if(lineno!=-1){
-sb.append(' ');
-sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 1, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:01:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
-if(this instanceof StringNode){
-sb.append(' ');
-sb.append(getString());
-}else {
-if(type==Token.FUNCTION){
-sb.append(' ');
-if(first==null||first.getType()!=Token.NAME){
-sb.append("<invalid>");
-}else {
-sb.append(first.getString());
-}
-}else {
-if(type==Token.NUMBER){
-sb.append(' ');
-sb.append(getDouble());
-}
-}
-}
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
+}
+if(this instanceof StringNode){
+sb.append(' ');
+sb.append(getString());
+}else {
+if(type==Token.FUNCTION){
+sb.append(' ');
+if(first==null||first.getType()!=Token.NAME){
+sb.append("<invalid>");
+}else {
+sb.append(first.getString());
+}
+}else {
+if(type==Token.NUMBER){
+sb.append(' ');
+sb.append(getDouble());
+}
+}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 39, UPD : 0, INS : 1, DEL : 38
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
 }
 }
 if(printAnnotations){
+synchronized(this){
 int[] keys=getSortedPropTypes();
 for(int i=0;i<keys.length;i++){
 int type=keys[i];
 PropListItem x=lookupProperty(type);
 sb.append(" [");
 sb.append(propToString(type));
 sb.append(": ");
 String value;
 switch (type){
 default :
 
 value=x.toString();
 break;
 }
 sb.append(value);
 sb.append(']');
+}
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 42, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[935,994]
------------Candidate---------------
 private void toString(StringBuilder sb,boolean printSource,boolean printAnnotations,boolean printType){
 sb.append(Token.name(type));
 if(this instanceof StringNode){
 sb.append(' ');
 sb.append(getString());
 }else {
 if(type==Token.FUNCTION){
 sb.append(' ');
 if(first==null||first.getType()!=Token.NAME){
 sb.append("<invalid>");
 }else {
 sb.append(first.getString());
 }
 }else {
 if(type==Token.NUMBER){
 sb.append(' ');
 sb.append(getDouble());
 }
 }
 }
 if(printSource){
 int lineno=getLineno();
 if(lineno!=-1){
 sb.append(' ');
 sb.append(lineno);
-}
-}
-if(printAnnotations){
-int[] keys=getSortedPropTypes();
-for(int i=0;i<keys.length;i++){
-int type=keys[i];
-PropListItem x=lookupProperty(type);
-sb.append(" [");
-sb.append(propToString(type));
-sb.append(": ");
-String value;
-switch (type){
-default :
-
-value=x.toString();
-break;
-}
-sb.append(value);
-sb.append(']');
 }
 }
 if(printType){
 if(jsType!=null){
 String jsTypeString=jsType.toString();
 if(jsTypeString!=null){
 sb.append(" : ");
 sb.append(jsTypeString);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 43, UPD : 0, INS : 0, DEL : 43
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:01:33 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.Node.NodeMismatch:[2125, 2126, 2127, 2128]#1.0
Compute Candidate : 2019.09.05 AD at 09:03:24 CDT - 2019.09.05 AD at 09:08:06 CDT , PNumber : 11280, CandNumber : 61 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+this.nodeA=nodeB;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=nodeA;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+this.nodeA=null;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+synchronized(this){
 this.nodeA=nodeA;
+}
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:08:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+synchronized(this){
 this.nodeB=nodeB;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node bindingModes,Node nodeB){
+this.nodeA=bindingModes;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node bindingModes){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=bindingModes;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node collectorManager,Node nodeB){
+this.nodeA=collectorManager;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node collectorManager){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=collectorManager;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node parentFileShare,Node nodeB){
+this.nodeA=parentFileShare;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node parentFileShare){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=parentFileShare;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node pIssued,Node nodeB){
+this.nodeA=pIssued;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node pIssued){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node Pin,Node nodeB){
+this.nodeA=Pin;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node Pin){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=Pin;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node graphdbInput,Node nodeB){
+this.nodeA=graphdbInput;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node graphdbInput){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=graphdbInput;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node thePrescribeMedicationCntl,Node nodeB){
+this.nodeA=thePrescribeMedicationCntl;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node thePrescribeMedicationCntl){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:12:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node pScore,Node nodeB){
+this.nodeA=pScore;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node pScore){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=pScore;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node pterm,Node nodeB){
+this.nodeA=pterm;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node pterm){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=pterm;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node boid,Node nodeB){
+this.nodeA=boid;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node boid){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+this.nodeB=boid;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+nodeA=nodeA;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+nodeB=nodeA;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:13:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+int a=0;
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+String OUTSTRING="";
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+int a=1;
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+boolean b=true;
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+nodeB.getParent().removeChild(nodeA);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3722/pattern-ver1-serial/zeppelin-zengine.src.main.java.org.apache.zeppelin.notebook.FolderView.java-onFolderRenamed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+nodeA.getParent().removeChild(nodeB);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3722/pattern-ver1-serial/zeppelin-zengine.src.main.java.org.apache.zeppelin.notebook.FolderView.java-onFolderRenamed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+assert (nodeA!=null);
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+assert (nodeB!=null);
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+assert (!nodeA.isEmpty());
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+assert (!nodeB.isEmpty());
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:15:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+NodeMismatch(Node r,Node nodeB){
+nodeA=r;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
-NodeMismatch(Node nodeA,Node nodeB){
+NodeMismatch(Node nodeA,Node r){
 this.nodeA=nodeA;
-this.nodeB=nodeB;
+nodeB=r;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+assert (nodeA!=null);
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+assert (nodeB!=null);
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+if(nodeA.isEmpty()){
+nodeA=null;
+}
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+if(nodeB.isEmpty()){
+nodeB=null;
+}
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
-this.nodeA=nodeA;
+try{
 this.nodeB=nodeB;
+}finally{
+this.nodeA=nodeA;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+try{
 this.nodeA=nodeA;
+}finally{
 this.nodeB=nodeB;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+assert (nodeA!=null):"Appointments day is not allowed to be null!";
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+assert (nodeB!=null):"Appointments day is not allowed to be null!";
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+if(nodeA.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+if(nodeB.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+if(nodeA==null||nodeB==null){
+throw new NullPointerException();
+}
 this.nodeA=nodeA;
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:17:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
 this.nodeA=nodeA;
+if(nodeB==null||nodeA==null){
+throw new NullPointerException();
+}
 this.nodeB=nodeB;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:18:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[2125,2128]
------------Candidate---------------
 NodeMismatch(Node nodeA,Node nodeB){
+long startTime=System.currentTimeMillis();
 this.nodeA=nodeA;
 this.nodeB=nodeB;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:18:12 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.Node.propToString:[117, 129, 142, 143, 118, 119, 120, 122, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 146]#1.0
Compute Candidate : 2019.09.05 AD at 09:20:04 CDT - 2019.09.05 AD at 09:44:36 CDT , PNumber : 11179, CandNumber : 141 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return null;
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return null;
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return null;
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return null;
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return null;
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return null;
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return null;
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return null;
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return null;
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return null;
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:45:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
+case 401 :
+
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1693/pattern-ver1-serial/src.main.java.uk.ac.ic.wlgitbridge.snapshot.getdoc.GetDocResult.java-fromJSON.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
+
+case 4 :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2088/pattern-ver1-serial/core.src.com.finalstand.game.Screens.PlayScreen.java-findCreepStartingPos.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
+import java.util.regex.Pattern;
+
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalArgumentException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/7192/pattern-ver1-serial/src.main.java.nl.ivonet.dzone.ChemicalSymbol.java-validateElement.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
+import java.util.Iterator;
+
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
+
+case 5 :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V13/1378/pattern-ver1-serial/src.haven.OptWnd.java-changed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:47:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return propToString(0);
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return propToString(0);
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return propToString(0);
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return propToString(0);
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return propToString(0);
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return propToString(0);
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return propToString(0);
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:48:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return propToString(0);
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return propToString(0);
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return propToString(0);
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic".trim();
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file".trim();
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id".trim();
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type".trim();
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename".trim();
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name".trim();
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr".trim();
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info".trim();
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized".trim();
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted".trim();
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return new String("synthetic");
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return new String("source_file");
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return new String("input_id");
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return new String("braceless_type");
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return new String("sourcename");
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return new String("var_args_name");
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return new String("incrdecr");
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return new String("jsdoc_info");
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return new String("parenthesized");
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return new String("quoted");
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic".toLowerCase();
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file".toLowerCase();
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id".toLowerCase();
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type".toLowerCase();
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename".toLowerCase();
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name".toLowerCase();
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr".toLowerCase();
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:52:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info".toLowerCase();
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized".toLowerCase();
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted".toLowerCase();
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException("unexpect prop id "+(int)(propType));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return (String)("synthetic");
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return (String)("source_file");
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return (String)("input_id");
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return (String)("braceless_type");
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return (String)("var_args_name");
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return (String)("sourcename");
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return (String)("jsdoc_info");
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return (String)("incrdecr");
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return (String)("parenthesized");
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return (String)("quoted");
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+int a=0;
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+String OUTSTRING="";
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException(Strings.nullToEmpty("unexpect prop id "+propType));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+int a=1;
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+boolean b=true;
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException("relativeCursorLocation: "+"unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/6500/pattern-ver1-serial/pa.iscde.guibuilder.src.pt.iscte.pidesco.guibuilder.internal.GuiBuilderView.java-drop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException("/"+"unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V15/628/pattern-ver1-serial/Group9_TwitterDataAnalysis.ICT2107_Hadoop.src.model.task8.Task8Mapper.java-getSentiFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+if(propType<0){
+return null;
+}
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new UnsupportedOperationException();
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic".replaceAll("\r","");
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file".replaceAll("\r","");
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id".replaceAll("\r","");
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type".replaceAll("\r","");
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename".replaceAll("\r","");
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name".replaceAll("\r","");
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr".replaceAll("\r","");
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:56:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info".replaceAll("\r","");
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized".replaceAll("\r","");
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted".replaceAll("\r","");
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return String.format("%s","synthetic");
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return String.format("%s","source_file");
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return String.format("%s","input_id");
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return String.format("%s","braceless_type");
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:57:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return String.format("%s","sourcename");
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return String.format("%s","var_args_name");
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return String.format("%s","incrdecr");
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return String.format("%s","jsdoc_info");
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return String.format("%s","parenthesized");
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return String.format("%s","quoted");
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
+import java.text.DecimalFormat;
+
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException("unexpect prop id "+new DecimalFormat("##.##").format(propType));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/5949/pattern-ver1-serial/workshop.MyWorkshop_IP.java-updateValueArea.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic"==null?"":"synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file"==null?"":"source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id"==null?"":"input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type"==null?"":"braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename"==null?"":"sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name"==null?"":"var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr"==null?"":"incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info"==null?"":"jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 09:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized"==null?"":"parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted"==null?"":"quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic"!=null?"synthetic":new String();
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file"!=null?"source_file":new String();
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id"!=null?"input_id":new String();
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type"!=null?"braceless_type":new String();
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename"!=null?"sourcename":new String();
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name"!=null?"var_args_name":new String();
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr"!=null?"incrdecr":new String();
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info"!=null?"jsdoc_info":new String();
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized"!=null?"parenthesized":new String();
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted"!=null?"quoted":new String();
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException("unexpect prop id "+propType+" -u "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
-return "synthetic";
+return "synthetic"==null?new String():"synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
-return "source_file";
+return "source_file"==null?new String():"source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
-return "input_id";
+return "input_id"==null?new String():"input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
-return "braceless_type";
+return "braceless_type"==null?new String():"braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
-return "sourcename";
+return "sourcename"==null?new String():"sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
-return "incrdecr";
+return "incrdecr"==null?new String():"incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
-return "var_args_name";
+return "var_args_name"==null?new String():"var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
-return "parenthesized";
+return "parenthesized"==null?new String():"parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
-return "jsdoc_info";
+return "jsdoc_info"==null?new String():"jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
-return "quoted";
+return "quoted"==null?new String():"quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+assert (propType>=0):"Receive a negative tratment";
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private static final String propToString(int propType){
+assert (propType!=0):"Receive a size tratment";
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+if(propType>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
 throw new IllegalStateException("unexpect prop id "+propType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+ final String dropStatement="unexpect prop id "+propType;
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException(dropStatement);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[116,148]
------------Candidate---------------
 private static final String propToString(int propType){
+String loc="unexpect prop id "+propType;
 switch (propType){
 case BRACELESS_TYPE :
 
 return "braceless_type";
 case VAR_ARGS_NAME :
 
 return "var_args_name";
 case SOURCENAME_PROP :
 
 return "sourcename";
 case JSDOC_INFO_PROP :
 
 return "jsdoc_info";
 case INCRDECR_PROP :
 
 return "incrdecr";
 case PARENTHESIZED_PROP :
 
 return "parenthesized";
 case QUOTED_PROP :
 
 return "quoted";
 case OPT_ARG_NAME :
 
 return "opt_arg";
 case SYNTHETIC_BLOCK_PROP :
 
 return "synthetic";
 case EMPTY_BLOCK :
 
 return "empty_block";
 case ORIGINALNAME_PROP :
 
 return "originalname";
 case SIDE_EFFECT_FLAGS :
 
 return "side_effect_flags";
 case IS_CONSTANT_NAME :
 
 return "is_constant_name";
 case IS_OPTIONAL_PARAM :
 
 return "is_optional_param";
 case IS_VAR_ARGS_PARAM :
 
 return "is_var_args_param";
 case IS_NAMESPACE :
 
 return "is_namespace";
 case IS_DISPATCHER :
 
 return "is_dispatcher";
 case DIRECTIVES :
 
 return "directives";
 case DIRECT_EVAL :
 
 return "direct_eval";
 case FREE_CALL :
 
 return "free_call";
 case STATIC_SOURCE_FILE :
 
 return "source_file";
 case INPUT_ID :
 
 return "input_id";
 case LENGTH :
 
 return "length";
 default :
 
-throw new IllegalStateException("unexpect prop id "+propType);
+throw new IllegalStateException(loc);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:03:49 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.Node.getSortedPropTypes:[866, 867, 868, 871, 872, 873, 874, 877, 878]#1.0
Compute Candidate : 2019.09.05 AD at 10:05:34 CDT - 2019.09.05 AD at 10:23:21 CDT , PNumber : 9715, CandNumber : 191 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+continue;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+continue;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
-int count=0;
+ int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
-int[] keys=new int[count];
+ int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x==null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x==null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+return null;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+return null;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+x=x.getNext();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.Collection;
+
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,myUid;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.Collection;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,myUid;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,DEFAULT_TIMEOUT2;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,DEFAULT_TIMEOUT2;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,MAX_SERVICE_NODES;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,MAX_SERVICE_NODES;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,MAX_ZK_WAIT_RETRY_TIMES;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,MAX_ZK_WAIT_RETRY_TIMES;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+break;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+break;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
-count++;
+count--;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/4666/pattern-ver1-serial/src.main.java.com.deanveloper.playtimeplus.commands.playtime.subcommand.TopSubCmd.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[1]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6103/pattern-ver1-serial/src.br.unicamp.ic.recod.gpsi.applications.gpsiJGAPEvolver.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
-int count=0;
+Integer count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,localLevel;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,localLevel;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),new ArrayList<KeyBinding>()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),new ArrayList<KeyBinding>()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
-int[] keys=new int[count];
+int[] keys=new int[(count)];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
-count--;
+count++;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/12/pattern-ver1-serial/src.main.java.com.quadcoder.coinpet.page.signup.SignupFormFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
-Arrays.sort(keys);
+Arrays.toString(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,_afterComposeMethodCache;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,_afterComposeMethodCache;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
-Arrays.sort(keys);
+Arrays.stream(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/1949/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.webapp.QueryExecutorServlet.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+count--;
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,mActions;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,mActions;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return this.getSortedPropTypes();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=1;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=-1;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
-int count=0;
+ int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
-int[] keys=new int[count];
+ int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=0;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+this.getSortedPropTypes();
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+this.getSortedPropTypes();
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+this.getSortedPropTypes();
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+count++;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+count++;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return keys.clone();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4683/pattern-ver1-serial/backend.src.main.java.com.benine.backend.camera.ipcameracontrol.IPCamera.java-getPresets.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+count--;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;first!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=first.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2709/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.expressions.Point2DExpression.java-getTablesInvolved.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;first!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=first.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2709/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.expressions.Point2DExpression.java-getTablesInvolved.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=count;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=2;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+synchronized(this){
 keys[count]=x.getType();
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=null){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=null){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+synchronized(this){
 Arrays.sort(keys);
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+synchronized(this){
 count++;
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+synchronized(this){
 count--;
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,continentName,countryCode;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,continentName,countryCode;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return (int[])(keys);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+return null;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+return null;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+while(true){
+
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+while(true){
+
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,userEmail;x!=null;x=x.getNext(),x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,userEmail;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead,userEmail;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+break;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+break;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),Charset.forName("UTF-8")){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;x=x.getNext(),Charset.forName("UTF-8")){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+if(keys!=null){
 Arrays.sort(keys);
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if(x.getType()!=0){
 keys[count]=x.getType();
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+count=count;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+keys[count]=count;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+count=count;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+count=count;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count--;
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if(count==4){
+continue;
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count--;
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count++;
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+count=1000;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+Arrays.sort(keys);
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+Arrays.sort(keys);
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V24/5055/pattern-ver1-serial/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java-getCluster.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.annotation.Nonnull;
+
+import javax.annotation.Nullable;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return (int[])keys.clone();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/4389/pattern-ver1-serial/src.main.java.net.steveperkins.fitnessjiffy.etl.model.Food.java-getLastUpdatedTime.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+count--;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
-count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+int a=0;
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+int a=0;
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+int a=0;
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+String OUTSTRING="";
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+String OUTSTRING="";
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+String OUTSTRING="";
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+try{
 Arrays.sort(keys);
+}finally{
+count++;
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+try{
 Arrays.sort(keys);
+}finally{
+count--;
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
+int x=5;
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
+int propListHead=5;
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
-count--;
+try{
 keys[count]=x.getType();
+}finally{
+count--;
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 1, INS : 0, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(equals(count)){
+return null;
+}
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(equals(count)){
+return null;
+}
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if(equals(count)){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+}
+if(equals(count)){
+return null;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+int indexSelection=0;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+int indexSelection=0;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+int indexSelection=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.Arrays;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count-1]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7420/pattern-ver1-serial/src.webradio.Show.java-convertArrToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+int a=1;
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+int a=1;
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+int a=1;
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(keys==null){
+return null;
+}
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if(keys==null){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if(x==null){
+return null;
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if(count==0){
+return keys;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+}
+if(keys==null){
+return null;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if("&null".equals(count)){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if("&null".equals(count)){
+return null;
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+if("&null".equals(count)){
+return null;
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if("&null".equals(keys)){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if("&null".equals(keys)){
+return null;
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+Arrays.sort(keys);
 count--;
 keys[count]=x.getType();
 }
-Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+Arrays.sort(keys);
 keys[count]=x.getType();
 }
-Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
-}
 Arrays.sort(keys);
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+if(!keys.equals("")){
 Arrays.sort(keys);
+}
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count<0){
+return null;
+}
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count<0){
+return null;
+}
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if(count<0){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+}
+if(count<0){
+return null;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if(keys.equals("-1")){
+return null;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+assert (keys!=null);
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+assert (keys!=null);
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+if(keys[count]==0){
+return null;
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+}
+if(keys[count]==0){
+return null;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+assert (count!=0);
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+assert (keys!=new int[count]);
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+assert (x!=null);
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;String.valueOf(x=x.getNext())){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;x!=null;String.valueOf(x=x.getNext())){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count++;
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+count++;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count++;
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+count++;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+count--;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+count--;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+count--;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+count--;
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=-1;
+keys[count]++;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
-keys[count]=x.getType();
+keys[count]=-1;
 }
+keys[count]++;
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;null!=x&&x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1691/pattern-ver1-serial/src.main.java.net.imadz.lifecycle.meta.builder.impl.helpers.CallbackMethodConfigureScanner.java-evaluateObserverMethod.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
-for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+for(PropListItem x=propListHead;null!=x&&x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1691/pattern-ver1-serial/src.main.java.net.imadz.lifecycle.meta.builder.impl.helpers.CallbackMethodConfigureScanner.java-evaluateObserverMethod.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+assert (count>=0):"Receive a negative tratment";
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+assert (count>=0):"Receive a negative tratment";
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+assert (count>=0):"Receive a negative tratment";
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+if(x==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if(count>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+}
+if(count>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+keys[count]=x.getType();
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+}
+if(keys==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
+keys[count]=x.getType();
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+if(count<=0){
+count=1;
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+}
+if(count<=0){
+count=1;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/2376/pattern-ver1-serial/src.br.com.siva.pinkmusic.list.RadioStationList.java-cancel.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+if(keys[count]<0){
+keys[count]=0;
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+}
+if(keys[count]<0){
+keys[count]=0;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if(count<=0){
+count=1;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if(count<=0){
+count=1;
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+if(count==100){
+count=0;
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
+}
+if(count==100){
+count=0;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/7421/pattern-ver1-serial/MyDate.java-increment.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+try{
 count--;
+}finally{
 keys[count]=x.getType();
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+int[] t=keys;
+keys=null;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
-return keys;
+return t;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+if(keys==null){
+throw new IllegalStateException("User isn't registered! "+count);
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(keys[count]!=x.getType()){
 count--;
-keys[count]=x.getType();
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count==3){
+System.out.println("debug");
+}
 count--;
 keys[count]=x.getType();
+if(count==3){
+System.out.println("debug");
+}
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
+if(count==3){
+System.out.println("debug");
+}
+if(count==3){
+System.out.println("debug");
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+if(count==3){
+System.out.println("debug");
+}
 count++;
+if(count==3){
+System.out.println("debug");
+}
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
-Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+long startTime=System.currentTimeMillis();
 count++;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
+long startTime=System.currentTimeMillis();
 count--;
 keys[count]=x.getType();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
+long startTime=System.currentTimeMillis();
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+keys[28]=(byte)0x88;
+keys[29]=0x58;
+keys[30]=0x01;
+keys[31]=0x00;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
+keys[28]=(byte)0x88;
+keys[29]=0x58;
+keys[30]=0x01;
+keys[31]=0x00;
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/2015/pattern-ver1-serial/src.info.dreamingfish123.wavetransdemo.MainActivity.java-writeWaveFile.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 17, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_40_buggy/src/com/google/javascript/rhino/Node.java[865,879]
------------Candidate---------------
 private int[] getSortedPropTypes(){
 int count=0;
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count++;
 }
 int[] keys=new int[count];
+for(int i=0;i<4;i++){
+keys[i]=Math.min(1,Math.max(0,keys[i]));
+}
 for(PropListItem x=propListHead;x!=null;x=x.getNext()){
 count--;
 keys[count]=x.getType();
 }
 Arrays.sort(keys);
 return keys;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2980/pattern-ver1-serial/megamek.src.megamek.client.ui.swing.MiniMap.java-paintBVSection.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 20, DEL : 0
Failing Tests:[com.google.javascript.jscomp.NameAnalyzerTest::testIssue284, com.google.javascript.jscomp.IntegrationTest::testIssue284]
---------START : 2019.09.05 AD at 05:22:36 CDT
---------TIME : 2019.09.05 AD at 10:23:21 CDT
--------------- END -----------------
Current failed test : com.google.javascript.jscomp.NameAnalyzerTest::testIssue284 | 2019.09.05 AD at 10:23:21 CDT
Finish : closure-40 > patch : 0 | Start : Thu Sep 05 05:22:36 CDT 2019 | End : 2019.09.05 AD at 10:23:22 CDT
