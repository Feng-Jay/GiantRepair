Repair : closure_11
Current failed test : com.google.javascript.jscomp.TypeCheckTest::testGetprop4 | 2019.09.04 AD at 14:21:51 CDT
Location : com.google.javascript.rhino.jstype.NoObjectType.getPropertyType:[138]#1.0
Compute Candidate : 2019.09.04 AD at 14:24:33 CDT - 2019.09.04 AD at 14:30:14 CDT , PNumber : 11192, CandNumber : 9 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
-return getNativeType(JSTypeNative.NO_TYPE);
+return this;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
-return getNativeType(JSTypeNative.NO_TYPE);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:30:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
-return getNativeType(JSTypeNative.NO_TYPE);
+return (JSType)getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
-return getNativeType(JSTypeNative.NO_TYPE);
+return (JSType)(getNativeType(JSTypeNative.NO_TYPE));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:30:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
+int a=0;
 return getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:31:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
+String OUTSTRING="";
 return getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
+int a=1;
 return getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
+String NO_TYPE="%#.&f";
 return getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[135,139]
------------Candidate---------------
 @Override public JSType getPropertyType(String propertyName){
+boolean b=true;
 return getNativeType(JSTypeNative.NO_TYPE);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:31:38 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.jstype.NoObjectType.defineProperty:[151]#1.0
Compute Candidate : 2019.09.04 AD at 14:33:49 CDT - 2019.09.04 AD at 14:38:52 CDT , PNumber : 11310, CandNumber : 7 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
-return true;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
-return true;
+return inferred;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
-return true;
+return (boolean)(true);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
+int a=0;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
+String OUTSTRING="";
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
+int a=1;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[147,152]
------------Candidate---------------
 @Override boolean defineProperty(String propertyName,JSType type,boolean inferred,Node propertyNode){
+boolean b=true;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:39:49 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.jstype.NoObjectType.isPropertyTypeInferred:[171]#1.0
Compute Candidate : 2019.09.04 AD at 14:41:55 CDT - 2019.09.04 AD at 14:45:17 CDT , PNumber : 11307, CandNumber : 6 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
+import java.util.Collections;
+
 @Override public boolean isPropertyTypeInferred(String propertyName){
-return false;
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:45:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
 @Override public boolean isPropertyTypeInferred(String propertyName){
-return false;
+return (boolean)(false);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
 @Override public boolean isPropertyTypeInferred(String propertyName){
+int a=0;
 return false;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
 @Override public boolean isPropertyTypeInferred(String propertyName){
+String OUTSTRING="";
 return false;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
 @Override public boolean isPropertyTypeInferred(String propertyName){
+int a=1;
 return false;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:46:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[169,172]
------------Candidate---------------
 @Override public boolean isPropertyTypeInferred(String propertyName){
+boolean b=true;
 return false;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:46:10 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.jstype.NoObjectType.getOwnPropertyJSDocInfo:[161]#1.0
Compute Candidate : 2019.09.04 AD at 14:48:27 CDT - 2019.09.04 AD at 14:51:29 CDT , PNumber : 11199, CandNumber : 5 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[159,162]
------------Candidate---------------
 @Override public JSDocInfo getOwnPropertyJSDocInfo(String propertyName){
-return null;
+return new JSDocInfo();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5649/pattern-ver1-serial/src.todolist.logic.FunctionChecker.java-deleteChecker.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:51:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[159,162]
------------Candidate---------------
 @Override public JSDocInfo getOwnPropertyJSDocInfo(String propertyName){
+int a=0;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[159,162]
------------Candidate---------------
 @Override public JSDocInfo getOwnPropertyJSDocInfo(String propertyName){
+String OUTSTRING="";
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[159,162]
------------Candidate---------------
 @Override public JSDocInfo getOwnPropertyJSDocInfo(String propertyName){
+int a=1;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[159,162]
------------Candidate---------------
 @Override public JSDocInfo getOwnPropertyJSDocInfo(String propertyName){
+boolean b=true;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 14:52:07 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.jstype.JSType.findPropertyType:[580, 575, 576, 577]#1.0
Compute Candidate : 2019.09.04 AD at 14:54:16 CDT - 2019.09.04 AD at 15:01:27 CDT , PNumber : 11329, CandNumber : 86 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
-ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+ ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(autoboxObjType==null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
-return null;
+return this;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4081/pattern-ver1-serial/src.com.bthorson.torule.screens.MessageScreen.java-respondToMouseClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
-return null;
+return autoboxObjType;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:01:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(propertyName!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType.findPropertyType(propertyName.trim());
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
+findPropertyType(propertyName);
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType.findPropertyType((propertyName).toLowerCase());
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+synchronized(this){
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
+}
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType.findPropertyType((propertyName).toUpperCase());
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return this;
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/2420/pattern-ver1-serial/Nian_Karl.QL.src.org.uva.ql.ast.value.Undefined.java-getValue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return null;
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(autoboxObjType.equals(null)){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+synchronized(this){
 return autoboxObjType.findPropertyType(propertyName);
+}
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+autoboxObjType=autoboxObjType;
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(true){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return (JSType)autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+int a=0;
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+int a=0;
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+String OUTSTRING="";
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+String OUTSTRING="";
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName.isEmpty()){
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+if(propertyName.isEmpty()){
+return null;
+}
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType.findPropertyType(Strings.nullToEmpty(propertyName));
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(equals(propertyName)){
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(equals(autoboxObjType)){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(equals(propertyName)){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(equals(autoboxObjType)){
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return (JSType)(autoboxObjType.findPropertyType(propertyName));
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.isEmpty()){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+int a=1;
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+int a=1;
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+boolean b=true;
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+boolean b=true;
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:05:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.isEmpty()){
+return autoboxObjType;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName==null){
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+if(propertyName==null){
+return null;
+}
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType==null){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(autoboxObjType==null){
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName==null){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if("&null".equals(propertyName)){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if("&null".equals(autoboxObjType)){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType.equals("-1")){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+assert (propertyName!=null);
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+assert (propertyName!=null);
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+assert (autoboxObjType!=null);
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+assert (autoboxObjType!=null);
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+assert (!propertyName.isEmpty());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.equals(InputStream.class)){
+return autoboxObjType;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName.equals(InputStream.class)){
+return autoboxObjType;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:07:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName!=null){
+return autoboxObjType.findPropertyType(propertyName);
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+if(propertyName!=null){
+ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType!=null){
+return autoboxObjType.findPropertyType(propertyName);
+}
+return null;
+}
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType!=null){
 if(autoboxObjType!=null){
+return autoboxObjType.findPropertyType(propertyName);
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+assert (autoboxObjType!=ObjectType.cast(autoboxesTo()));
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+assert (propertyName!=null);
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType.equals(null)){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType.equals("655")){
+System.out.println();
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if((Thread.currentThread().interrupted())){
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:08:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(autoboxObjType!=null||"查看红包".equals(autoboxObjType)){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.isEmpty()){
+propertyName=null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType==null?null:autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(autoboxObjType!=null||autoboxObjType==null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return propertyName==null?null:autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4622/pattern-ver1-serial/src.soot.shimple.ShimpleMethodSource.java-getBody.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType!=null){
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
+}else {
+return null;
+}
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
-return autoboxObjType.findPropertyType(propertyName);
+return autoboxObjType!=null?autoboxObjType.findPropertyType(propertyName):null;
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:09:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+assert (propertyName!=null):"Appointments day is not allowed to be null!";
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+assert (propertyName!=null):"Appointments day is not allowed to be null!";
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+assert (autoboxObjType!=null):"Appointments day is not allowed to be null!";
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+assert (autoboxObjType!=null):"Appointments day is not allowed to be null!";
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:10:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(autoboxObjType==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(propertyName==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+if(autoboxesTo()==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
-if(autoboxObjType!=null){
+if(autoboxObjType!=null&&!autoboxObjType.equals("")){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType!=null){
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
+}
+return null;
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/4738/pattern-ver1-serial/src.tonegod.gui.controls.lists.ComboBox.java-getListItems.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(propertyName.startsWith("\r\n")){
+propertyName=propertyName.substring(2);
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:11:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
+if(propertyName.startsWith("\r\n")){
+propertyName=propertyName.substring(2);
+}
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
+if(autoboxObjType==null||propertyName==null){
+throw new NullPointerException();
+}
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
+if(autoboxObjType==null||propertyName==null){
+throw new NullPointerException();
+}
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:12:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/JSType.java[564,581]
------------Candidate---------------
 public JSType findPropertyType(String propertyName){
 ObjectType autoboxObjType=ObjectType.cast(autoboxesTo());
 if(autoboxObjType!=null){
 return autoboxObjType.findPropertyType(propertyName);
+}
+if(propertyName.endsWith("/")==false){
+propertyName=propertyName+"/";
 }
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:12:27 CDT
--------------- END -----------------
Location : com.google.javascript.rhino.jstype.NoObjectType.hasProperty:[144]#1.0
Compute Candidate : 2019.09.04 AD at 15:14:33 CDT - 2019.09.04 AD at 15:17:46 CDT , PNumber : 11309, CandNumber : 6 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
-return true;
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
-return true;
+return (boolean)(true);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:18:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
+int a=0;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
+String OUTSTRING="";
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
+int a=1;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:18:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/rhino/jstype/NoObjectType.java[141,145]
------------Candidate---------------
 @Override public boolean hasProperty(String propertyName){
+boolean b=true;
 return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 15:18:30 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.TypeInference.ensurePropertyDefined:[550, 545, 535, 541, 537, 522, 555, 511, 512, 513, 515, 518, 516, 519, 538, 547]#1.0
Compute Candidate : 2019.09.04 AD at 15:20:36 CDT - 2019.09.04 AD at 16:22:24 CDT , PNumber : 11363, CandNumber : 746 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:22:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:22:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+return ;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:22:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+return ;
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+return ;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+return ;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+return ;
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+return ;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+return ;
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+return ;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+return ;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+return ;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+return ;
 }
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
+ String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
+ JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)&&!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(objectType!=null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equalsIgnoreCase(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/1785/pattern-ver1-serial/src.edu.asu.laits.gui.menus.ModelMenu.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!nodeType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!rightType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/79/pattern-ver1-serial/src.main.java.com.brxt.service.impl.ReportManagerImpl.java-getFinanceCheckList.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".startsWith(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/797/pattern-ver1-serial/src.main.java.com.github.games647.scoreboardstats.scoreboard.VariableReplacer.java-getFactionsValue.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:26:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".contains(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/1219/pattern-ver1-serial/src.lisong_mechlab.view.render.StyleManager.java-getBgColorFor.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/1681/pattern-ver1-serial/src.edu.umn.cs.melt.copper.compiletime.srcbuilders.single.ParserFragmentEngineBuilder.java-writeRunProductionSemanticAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
+String propName=getprop.getLastChild().toString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5598/pattern-ver1-serial/Main.java-jsonToCsv.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".endsWith(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/2302/pattern-ver1-serial/src.org.exist.storage.NativeValueIndex.java-matches.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
+String propName=getprop.getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
+ final String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ final ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
+ final String propName=getprop.getLastChild().getString();
+ final JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ final JSType nodeType=getJSType(getprop.getFirstChild());
+ final ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
-String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
+ String propName=getprop.getLastChild().getString();
+ JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ JSType nodeType=getJSType(getprop.getFirstChild());
+ ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
+this.registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(this.syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName.trim())||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName.trim())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(propName.trim())){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.isEmpty()){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.isEmpty()){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.isEmpty()){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(getprop.isEmpty()){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(getprop.isEmpty()){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.TreeSet;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop.isEmpty()){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/1891/pattern-ver1-serial/src.jp.ac.osaka_u.ist.sdl.prevol.db.retriever.MethodDataRetriever.java-retrieveInSpecifiedFiles.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.TreeSet;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+if(getprop.isEmpty()){
+return ;
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/1891/pattern-ver1-serial/src.jp.ac.osaka_u.ist.sdl.prevol.db.retriever.MethodDataRetriever.java-retrieveInSpecifiedFiles.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:29:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.isEmpty()){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/2729/pattern-ver1-serial/davinci.src.main.java.cn.hadcn.davinci.image.DiskLruImageCache.java-getBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+synchronized(registry){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+synchronized(objectType){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+synchronized(objectType){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty((propName).toLowerCase())||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals((propName).toLowerCase())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared((propName).toLowerCase())){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".trim().equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/2546/pattern-ver1-serial/src.com.nth.ikiam.MapActivity.java-verFotosUsuario.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+synchronized(this){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+synchronized(this){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(equals(getprop)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(equals(getprop)){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(equals(getprop)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(equals(getprop)){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(equals(objectType)){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(equals(objectType)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(equals(objectType)){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(equals(objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName.isEmpty()){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(propName.isEmpty()){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/5123/pattern-ver1-serial/src.main.java.org.mcstats.generator.ReflectionAggregator.java-getValues.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+while(true){
+
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:32:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+while(true){
+
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+while(true){
+
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+while(true){
+
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+while(true){
+
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
+while(true){
+
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+while(true){
+
+}
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:39:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+while(true){
+
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+while(true){
+
+}
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+synchronized(this){
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+synchronized(this){
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+synchronized(this){
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName.isEmpty()){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/2662/pattern-ver1-serial/letter-annotator-api.src.main.java.org.modelcatalogue.letter.annotator.AbstractHighlighter.java-highlight.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(getprop.isEmpty()){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(getprop.isEmpty()){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(getprop.isEmpty()){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty((propName).toUpperCase())||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals((propName).toUpperCase())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared((propName).toUpperCase())){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop==null){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(rightType==null){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop==null){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop==null){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType==null){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(rightType==null){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(getprop==null){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(rightType==null){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(getprop==null){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(rightType==null){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(getprop==null){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(rightType==null){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(rightType==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName==null){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType==null){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(registry!=null){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(objectType!=null){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(objectType!=null){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7075/pattern-ver1-serial/app.src.main.java.com.gustavoparreira.realtimetile.Player.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(objectType==rightType){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType==objectType){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(objectType==rightType){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(registry==null){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(registry==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(registry==null){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(registry==null){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(registry==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(syntacticScope==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==getprop.getLastChild().getString()){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==ObjectType.cast(nodeType.restrictByNotNullOrUndefined())){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(propName==getprop.getLastChild().getString()){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(nodeType==getJSType(getprop.getFirstChild())){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType==getJSType(getprop.getFirstChild())){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(objectType==null){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName==null){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(objectType==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(objectType.equals(null)){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+synchronized(this){
 return ;
+}
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(objectType==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V45/2972/pattern-ver1-serial/app.src.main.java.com.nealyi.app.activity.UserProfileActivity.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
+if(!ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(!"prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if("index".equals(getprop)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if("index".equals(rightType)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("index".equals(getprop)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if("index".equals(getprop)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("index".equals(rightType)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if("index".equals(rightType)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if("index".equals(propName)){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if("index".equals(propName)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if("index".equals(getprop)){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if("index".equals(getprop)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.equals("TIME")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType.equals("TIME")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.equals("TIME")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.equals("TIME")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType.equals("TIME")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType.equals("TIME")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName.equals("TIME")){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName.equals("TIME")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop.equals("TIME")){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName.equals("TIME")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if("&null".equals(getprop)){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if("&null".equals(rightType)){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if("&null".equals(getprop)){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if("&null".equals(getprop)){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if("&null".equals(rightType)){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if("&null".equals(rightType)){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if("&null".equals(getprop)){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if("&null".equals(rightType)){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if("&null".equals(getprop)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if("&null".equals(rightType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.equals("DATETIME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(rightType.equals("DATETIME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.equals("DATETIME")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.equals("DATETIME")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(rightType.equals("DATETIME")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType.equals("DATETIME")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if(propName.equals("DATETIME")){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(propName.equals("DATETIME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(propName.equals("DATETIME")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(propName.equals("DATETIME")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+rightType=rightType;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.getFirstChild()!=null){
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+propName=propName;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType=objectType;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+getprop=getprop;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType.equals("")){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.equals("")){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType.equals("")){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype"!=null){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/4672/pattern-ver1-serial/main.src.main.java.com.example.wduello.collectionmanager.ItemListFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(true){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(true){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
+if(true){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(objectType!=null){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/6062/pattern-ver1-serial/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java-addCapabilityList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
+if(ensurePropertyDeclaredHelper(getprop,objectType)==false){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)==false){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(propName!=null){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4078/pattern-ver1-serial/com.profidatagroup.e4.advancedlaunch.src.ch.parisi.e4.advancedlaunch.tabs.LaunchTab.java-editLaunchConfiguration.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType.equals("-1")){
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType.equals("-1")){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.equals("-1")){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName!=null){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/991/pattern-ver1-serial/CEO.src.cs2103.CommandParser.java-separateParameters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+int a=0;
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 16:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+int a=0;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+int a=0;
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+int a=0;
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+int a=0;
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+int a=0;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+int a=0;
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+int a=0;
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+int a=0;
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+int a=0;
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType.equals(getprop)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.equals(rightType)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType.equals(getprop)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.equals(rightType)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(objectType.equals(getprop)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.equals(objectType)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName.equals(getprop)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.equals(propName)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.equals(getprop)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.equals(objectType)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(propName!=null){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/691/pattern-ver1-serial/us.textrade.models.MatchesQueue.java-addTradeToQueue.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+String OUTSTRING="";
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+String OUTSTRING="";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+String OUTSTRING="";
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+String OUTSTRING="";
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+String OUTSTRING="";
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+String OUTSTRING="";
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
+String OUTSTRING="";
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+String OUTSTRING="";
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+String OUTSTRING="";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+String OUTSTRING="";
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType==null){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(objectType==null){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop==null){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(propName==null){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(Strings.nullToEmpty(propName))||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(Strings.nullToEmpty(propName))){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import com.google.common.base.Strings;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(Strings.nullToEmpty(propName))){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/5967/pattern-ver1-serial/src.main.java.com.threebird.recorder.models.sessions.SessionManager.java-therapistProperty.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:04:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+int registry=5;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+int registry=5;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+int syntacticScope=5;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType.equals(InputStream.class)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType.equals(InputStream.class)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType.equals(InputStream.class)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(objectType.equals(InputStream.class)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:05:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(rightType.equals(InputStream.class)){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(rightType.equals(InputStream.class)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(nodeType.equals(InputStream.class)){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(rightType.equals(InputStream.class)){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.equals(InputStream.class)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(nodeType.equals(InputStream.class)){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)==true){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
+if(ensurePropertyDeclaredHelper(getprop,objectType)==true){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:07:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+int indexSelection=0;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+int indexSelection=0;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+int indexSelection=0;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+int indexSelection=0;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:08:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+int indexSelection=0;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+int indexSelection=0;
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+int indexSelection=0;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+int indexSelection=0;
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+int indexSelection=0;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+propName="";
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1830/pattern-ver1-serial/SR03.src.java.controler.ActionQuestion.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:09:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.equals("setPackMode")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType.equals("setPackMode")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(propName.equals("setPackMode")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(objectType.equals("setPackMode")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if((getprop.getFirstChild().isThis())&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+int a=1;
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+int a=1;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+int a=1;
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+int a=1;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+int a=1;
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+int a=1;
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+int a=1;
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+int a=1;
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+int a=1;
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:11:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+int a=1;
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+boolean registry=true;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+boolean registry=true;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+boolean syntacticScope=true;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+boolean b=true;
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+boolean b=true;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+boolean b=true;
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+boolean b=true;
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+boolean b=true;
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+boolean b=true;
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+boolean b=true;
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+boolean b=true;
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+boolean b=true;
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+boolean b=true;
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.startsWith("ldaps")){
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/7118/pattern-ver1-serial/gateway.engine.policies.src.main.java.io.apiman.gateway.engine.policies.auth.LDAPIdentityValidator.java-validate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if((Thread.currentThread().interrupted())){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if((Thread.currentThread().interrupted())){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+synchronized(this){
 registry.registerPropertyOnType(propName,nodeType);
+}
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:15:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(!("prototype"==null)){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5193/pattern-ver1-serial/IJC_UI.src.nl.detoren.ijc.ui.view.Hoofdscherm.java-updateUpdateStandButton.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(true){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(propName)==false){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType!=null){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/2504/pattern-ver1-serial/app.src.main.java.com.projectmanagement.benson.homeinventoryapp.Models.List.java-setKeys.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (getprop!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (rightType!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+assert (getprop!=null);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+assert (getprop!=null);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+assert (rightType!=null);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+assert (rightType!=null);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+assert (getprop!=null);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+assert (getprop!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:17:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+assert (getprop!=null);
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+assert (rightType!=null);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (!getprop.isEmpty());
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+assert (!getprop.isEmpty());
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+assert (!getprop.isEmpty());
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+assert (!getprop.isEmpty());
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (!propName.isEmpty());
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:18:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+assert (!propName.isEmpty());
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(propName)==true){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(getprop!=null){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop!=null){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+}else {
+if(getprop!=null){
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
+if(getprop!=null){
+String propName=getprop.getLastChild().getString();
+JSType nodeType=getJSType(getprop.getFirstChild());
+ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null){
+registry.registerPropertyOnType(propName,nodeType);
+}else {
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
+}
+}
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(objectType!=null){
+registry.registerPropertyOnType(propName,objectType);
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName!=null){
+registry.registerPropertyOnType(propName,objectType);
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:19:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(objectType!=null){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType!=null){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(propName!=null){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+}else {
+if(objectType!=null){
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+assert (!getprop.isEmpty());
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getOptionalStringArrayParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (!getprop.isEmpty());
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getOptionalStringArrayParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(objectType.hasProperty(propName.trim())||!objectType.isInstanceType()){
+if("prototype".equals(propName.trim())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/7016/pattern-ver1-serial/ClassApplication.src.main.java.com.exam.ViewExamAnsAction.java-performBaseAction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:20:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(!objectType.isPropertyTypeDeclared(propName.trim())){
+if(objectType.hasProperty(propName.trim())||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/7016/pattern-ver1-serial/ClassApplication.src.main.java.com.exam.ViewExamAnsAction.java-performBaseAction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(propName.trim())){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName.trim())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/7016/pattern-ver1-serial/ClassApplication.src.main.java.com.exam.ViewExamAnsAction.java-performBaseAction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+assert (objectType!=ObjectType.cast(nodeType.restrictByNotNullOrUndefined()));
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+assert (propName!=getprop.getLastChild().getString());
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+assert (nodeType!=getJSType(getprop.getFirstChild()));
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
+return ;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/7529/pattern-ver1-serial/BigNumber.src.BigNumber.java-compare.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+assert (propName!=null);
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (propName!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+assert (propName!=null);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+assert (propName!=null);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+assert (propName!=null);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+assert (propName!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+assert (objectType!=null);
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:22:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (objectType!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+assert (propName!=null);
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+assert (propName!=null);
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:23:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(getprop.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(rightType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+assert (rightType!=null);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:24:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(propName.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(propName.isEmpty()){
+System.out.println("Team has to have a name");
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (getprop!=null);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (rightType!=null);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:25:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+assert (getprop!=null);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+assert (getprop!=null);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+assert (objectType!=null);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (objectType!=null);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+assert (getprop!=null);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+assert (getprop!=null);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+assert (rightType!=null);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:26:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+assert (rightType!=null);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType.equals("655")){
+System.out.println();
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName.equals("655")){
+System.out.println();
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType.equals("655")){
+System.out.println();
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode())!=null&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/947/pattern-ver1-serial/com.ge.research.sadl.jena-wrapper-for-sadl.src.main.java.com.ge.research.sadl.jena.reasoner.JenaReasonerPlugin.java-prepareSubjectPredicateObject.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(objectType==null||"查看红包".equals(objectType)){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype"!=null&&"prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7778/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.utils.attrmatchers.SoftLimitMatcher.java-matchStoragePoolsWithAttributeOn.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType!=null&&!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/4226/pattern-ver1-serial/src.main.java.org.walkmod.javalang.walkers.ChangeLogVisitor.java-visit.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+synchronized(this){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+synchronized(this){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+}
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+registry.registerPropertyOnType(propName,objectType);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)||"9".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5280/pattern-ver1-serial/onebusaway-twilio-webapp.src.main.java.org.onebusaway.twilio.actions.bookmarks.BookmarkStopAction.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+registry.registerPropertyOnType(propName,objectType);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+registry.registerPropertyOnType(propName,objectType);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+registry.registerPropertyOnType(propName,nodeType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.isEmpty()){
+getprop=null;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.isEmpty()){
+getprop=null;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.isEmpty()){
+getprop=null;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(getprop.isEmpty()){
+getprop=null;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+if(getprop.isEmpty()){
+getprop=null;
+}
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.isEmpty()){
+getprop=null;
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+registry.registerPropertyOnType(propName,objectType);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+registry.registerPropertyOnType(propName,objectType);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+registry.registerPropertyOnType(propName,objectType);
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+registry.registerPropertyOnType(propName,objectType);
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:31:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+registry.registerPropertyOnType(propName,objectType);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype"==null||"prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/4012/pattern-ver1-serial/core.core-impl.src.main.java.org.openbaton.nfvo.core.api.NetworkServiceRecordManagement.java-getVNFCI.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)||"/preEvaluatorImpersonation".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/4389/pattern-ver1-serial/gde-webapp.src.main.java.com.nagarro.gde.base.CandidateDataController.java-assessmentReturnView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+registry.registerPropertyOnType(propName,objectType);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(("prototype"!=null)&&("prototype".equals(propName))){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/4845/pattern-ver1-serial/app.src.main.java.hu.bme.aut.szabolcs.szokol.countryinfo.ui.main.MainActivity.java-onBackPressed.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(rightType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(rightType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(getprop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(rightType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
+if(getprop.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
+if(rightType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
 registry.registerPropertyOnType(propName,objectType);
+}else {
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(("prototype"!=null)&&"prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/3368/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.networkcontroller.impl.brocade.BrocadeNetworkSystemDevice.java-getVersion.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(objectType==null||objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope==null?null:syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
+JSType nodeType=getJSType(getprop==null?null:getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ObjectType objectType=ObjectType.cast(nodeType==null?null:nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if((getprop.getFirstChild()!=null&&getprop.getFirstChild().isThis())&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2151/pattern-ver1-serial/coeus-impl.src.main.java.org.kuali.kra.award.document.authorization.AwardDocumentAuthorizer.java-canCancel.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope!=null?syntacticScope.getRootNode():null).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
-JSType nodeType=getJSType(getprop.getFirstChild());
+JSType nodeType=getJSType(getprop!=null?getprop.getFirstChild():null);
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
-ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+ObjectType objectType=ObjectType.cast(nodeType!=null?nodeType.restrictByNotNullOrUndefined():null);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (getprop!=null):"Appointments day is not allowed to be null!";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+assert (rightType!=null):"Appointments day is not allowed to be null!";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+assert (getprop!=null):"Appointments day is not allowed to be null!";
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+assert (getprop!=null):"Appointments day is not allowed to be null!";
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+assert (rightType!=null):"Appointments day is not allowed to be null!";
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+assert (rightType!=null):"Appointments day is not allowed to be null!";
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+assert (getprop!=null):"Appointments day is not allowed to be null!";
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+assert (getprop!=null):"Appointments day is not allowed to be null!";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+assert (rightType!=null):"Appointments day is not allowed to be null!";
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+assert (rightType!=null):"Appointments day is not allowed to be null!";
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+registry.registerPropertyOnType(propName,objectType);
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+registry.registerPropertyOnType(propName,objectType);
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2420/pattern-ver1-serial/OpenWatch.src.org.ale.openwatch.fb.FBUtils.java-onPostExecute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(registry==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(syntacticScope==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(objectType==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:42:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
-objectType.defineInferredProperty(propName,rightType,getprop);
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==null){
+propName="";
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/755/pattern-ver1-serial/src.org.simiancage.bukkit.messagechangerlite.MessageChangerLite.java-getMessage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.equals("")){
+propName="Manchester United FC";
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4958/pattern-ver1-serial/FootballScores.app.src.main.java.barqsoft.footballscores.widget.ScoresWidgetIntentService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:43:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
-objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/2664/pattern-ver1-serial/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.entities.EntityGrapple.java-EntityGrapple.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/2664/pattern-ver1-serial/src.main.java.micdoodle8.mods.galacticraft.planets.asteroids.entities.EntityGrapple.java-EntityGrapple.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+objectType.defineInferredProperty(propName,rightType,getprop);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+objectType.defineInferredProperty(propName,rightType,getprop);
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3737/pattern-ver1-serial/webapp.src.main.java.org.mediameter.cliff.servlet.ParseTextServlet.java-doPost.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(objectType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(rightType==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:48:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(propName==null){
+return ;
+}
+if(getprop==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5076/pattern-ver1-serial/src.main.java.org.jsweet.transpiler.StaticInitilializerAnalyzer.java-visitClassDef.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)&&!propName.equals("全部")){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/6475/pattern-ver1-serial/src.main.java.com.morningsidevc.service.impl.FeedInfoServiceImpl.java-findFeeds.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.equals("NAME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(rightType.equals("CALL_RECEIVED_AT")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(rightType.equals("NAME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.equals("NAME")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.equals("NAME")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:49:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(rightType.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType.equals("NAME")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(rightType.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(rightType.equals("NAME")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(propName.equals("CALL_RECEIVED_AT")){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(propName.equals("NAME")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName.equals("CALL_RECEIVED_AT")){
+return ;
+}
 registry.registerPropertyOnType(propName,objectType);
+if(propName.equals("NAME")){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(getprop.equals("NAME")){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(rightType.equals("CALL_RECEIVED_AT")){
+return ;
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+if(rightType.equals("NAME")){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
+if(objectType==null&&!objectType.equals("")){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)||"prototype".length()==0){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/2922/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.equals("INFO")){
+return ;
+}
+if(getprop.equals("UNIT")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(rightType.equals("INFO")){
+return ;
+}
+if(rightType.equals("UNIT")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(getprop.equals("INFO")){
+return ;
+}
+if(getprop.equals("UNIT")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.equals("INFO")){
+return ;
+}
+if(getprop.equals("UNIT")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(rightType.equals("INFO")){
+return ;
+}
+if(rightType.equals("UNIT")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(rightType.equals("INFO")){
+return ;
+}
+if(rightType.equals("UNIT")){
+return ;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if(propName.equals("INFO")){
+return ;
+}
+if(propName.equals("UNIT")){
+return ;
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+if(propName.equals("INFO")){
+return ;
+}
+if(propName.equals("UNIT")){
+return ;
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+}
+if(getprop.equals("INFO")){
+return ;
 }
+if(getprop.equals("UNIT")){
+return ;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(propName.equals("INFO")){
+return ;
+}
+if(propName.equals("UNIT")){
+return ;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+propName=propName.replaceAll(";","; ");
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5914/pattern-ver1-serial/app.src.main.java.rkr.directsmswidget.widgets.HomeWidget.java-updateAppWidget.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()||"查看红包".equals(objectType.hasProperty(propName))){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(objectType!=null&&propName!=null){
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/523/pattern-ver1-serial/src.se.chalmers.lidkopingsh.model.Order.java-sync.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(!objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType!=null&&objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/3312/pattern-ver1-serial/WWIDesigner.src.main.com.wwidesigner.note.view.FingeringPatternPanel.java-getData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(true){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()==false){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null||nodeType==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(nodeType==null||objectType==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==null||nodeType==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(nodeType==null||propName==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop.getFirstChild()!=null&&getJSType(syntacticScope.getRootNode())!=null){
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1305/pattern-ver1-serial/portlets.proposals-portlet.src.main.java.org.xcolab.jsp.tags.discussion.GetRoleNameTag.java-doStartTag.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==null||objectType==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null||propName==null){
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V22/6302/pattern-ver1-serial/modules.core.src.main.java.io.smsc.repository.customer.customer.CustomerRepositoryImpl.java-removeUser.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName!=null){
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5356/pattern-ver1-serial/src.main.java.it.istc.cnr.stlab.clodg.quality.AnalyseNames.java-extractCoauthorsForAuthor.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(propName!=null){
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5356/pattern-ver1-serial/src.main.java.it.istc.cnr.stlab.clodg.quality.AnalyseNames.java-extractCoauthorsForAuthor.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/947/pattern-ver1-serial/advinst-server.src.main.java.jetbrains.buildServer.advinst.server.AdvinstRunTypePropertiesProcessor.java-process.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)||"prototype".trim().equals(propName.trim())){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/720/pattern-ver1-serial/FileDownloader.src.main.java.org.wlf.filedownloader.DownloadFileChangeObserver.java-onDownloadFileUpdated.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()==true){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType==null||objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(registry!=null){
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(registry!=null){
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(!objectType.hasProperty(propName)){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/5657/pattern-ver1-serial/services.src.main.java.org.devgateway.geoph.services.geojson.ConverterUtil.java-merge.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType==null){
+throw new IllegalStateException("User isn't registered! "+getprop);
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName==null){
+throw new IllegalStateException("User isn't registered! "+getprop);
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null){
+throw new IllegalStateException("User isn't registered! "+nodeType);
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()||"查看红包".equals(getprop.getFirstChild().isThis())){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isEmpty()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(!getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild()!=null&&getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(true){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()==false){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/573/pattern-ver1-serial/src.CollisionDetection.java-detection.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName==null){
+System.out.println("UNKOWN PLAYER TRIED UNLOCK BUG WITHOUT REGISTATION: "+rightType.getDisplayName());
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/3018/pattern-ver1-serial/src.main.java.hok.chompzki.biocristals.items.insects.ItemUnlockBug.java-onEaten.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(nodeType==null){
+System.out.println("UNKOWN PLAYER TRIED UNLOCK BUG WITHOUT REGISTATION: "+rightType.getDisplayName());
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/3018/pattern-ver1-serial/src.main.java.hok.chompzki.biocristals.items.insects.ItemUnlockBug.java-onEaten.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==null){
+System.out.println("UNKOWN PLAYER TRIED UNLOCK BUG WITHOUT REGISTATION: "+objectType.getDisplayName());
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/3018/pattern-ver1-serial/src.main.java.hok.chompzki.biocristals.items.insects.ItemUnlockBug.java-onEaten.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+if(propName==null){
+System.out.println("UNKOWN PLAYER TRIED UNLOCK BUG WITHOUT REGISTATION: "+nodeType.getDisplayName());
+return ;
+}
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/3018/pattern-ver1-serial/src.main.java.hok.chompzki.biocristals.items.insects.ItemUnlockBug.java-onEaten.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null){
+System.out.println("UNKOWN PLAYER TRIED UNLOCK BUG WITHOUT REGISTATION: "+rightType.getDisplayName());
+return ;
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/3018/pattern-ver1-serial/src.main.java.hok.chompzki.biocristals.items.insects.ItemUnlockBug.java-onEaten.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()==true){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(syntacticScope==null){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5750/pattern-ver1-serial/src.main.java.com.qwertyness.feudal.command.KingdomCommand.java-claim.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild()==null||getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
+registry.registerPropertyOnType(propName,nodeType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
+registry.registerPropertyOnType(propName,objectType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
+registry.registerPropertyOnType(propName,nodeType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.startsWith("+")){
+propName=propName.substring(1);
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/820/pattern-ver1-serial/src.com.iotracks.iofabric.utils.configuration.Configuration.java-setConfig.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+boolean succeeded=false;
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+succeeded=true;
 }
 }
 }
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
+boolean succeeded=false;
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+succeeded=true;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
+if(!succeeded){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(!getprop.getFirstChild().isThis()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/5657/pattern-ver1-serial/services.src.main.java.org.devgateway.geoph.services.geojson.ConverterUtil.java-merge.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getJSType(syntacticScope.getRootNode())!=null&&(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor())){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/668/pattern-ver1-serial/opencga-catalog.src.main.java.org.opencb.opencga.catalog.models.Status.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 17:59:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(propName==null||objectType==null){
+throw new NullPointerException();
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(propName==null||objectType==null){
+throw new NullPointerException();
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(propName==null||objectType==null){
+throw new NullPointerException();
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(propName==null||objectType==null){
+throw new NullPointerException();
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(propName==null||objectType==null){
+throw new NullPointerException();
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+if(objectType==null||propName==null){
+throw new NullPointerException();
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(objectType==null||propName==null){
+throw new NullPointerException();
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType==null||propName==null){
+throw new NullPointerException();
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(objectType==null||propName==null){
+throw new NullPointerException();
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(objectType==null||propName==null){
+throw new NullPointerException();
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.contains("phpreturn")){
+propName=propName.replace("php","php\n");
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2350/pattern-ver1-serial/src.main.java.ru.andyskvo.main.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.contains("#")){
+propName=propName.split("#")[0];
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3981/pattern-ver1-serial/hdiv-core.src.main.java.org.hdiv.filter.ValidatorHelperRequest.java-restoreState.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if(objectType.hasProperty(propName)){
+if("prototype".equals(propName)&&!objectType.isInstanceType()){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if(propName.endsWith("/")==false){
+propName=propName+"/";
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop==null||objectType==null||rightType==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop==null||rightType==null||objectType==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop==null||objectType==null||rightType==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop==null||objectType==null||rightType==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop==null||rightType==null||objectType==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop==null||rightType==null||objectType==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop==null||rightType==null||propName==null){
+return ;
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+if(getprop==null||rightType==null||propName==null){
+return ;
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(getprop==null||rightType==null||propName==null){
+return ;
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(getprop==null||rightType==null||objectType==null){
+return ;
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+registry.registerPropertyOnType(propName,objectType);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+registry.registerPropertyOnType(propName,objectType);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+registry.registerPropertyOnType(propName,objectType);
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
+objectType.defineInferredProperty(propName,rightType,getprop);
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineInferredProperty(propName,rightType,getprop);
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+objectType.defineInferredProperty(propName,rightType,getprop);
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1600/pattern-ver1-serial/src.main.java.org.cyberpwn.phantom.clust.ConfigurationHandler.java-fromMysql.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 2, DEL : 10
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+synchronized(this){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if((objectType.hasProperty(propName))||(!objectType.isInstanceType())){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if((getprop.getFirstChild().isThis())&&(getJSType(syntacticScope.getRootNode()).isConstructor())){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+}else {
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype"==null){
+return ;
+}else {
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3795/pattern-ver1-serial/opentripplanner-routing.src.main.java.org.opentripplanner.routing.edgetype.PlainStreetEdge.java-calculateSpeed.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals("getTile")){
+return ;
+}else {
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/81/pattern-ver1-serial/src.com.ombda.Map.java-getVar.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
 objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+long startTime=System.currentTimeMillis();
 registry.registerPropertyOnType(propName,objectType);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+long startTime=System.currentTimeMillis();
 objectType.defineInferredProperty(propName,rightType,getprop);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+long startTime=System.currentTimeMillis();
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+long startTime=System.currentTimeMillis();
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+long startTime=System.currentTimeMillis();
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+long startTime=System.currentTimeMillis();
 objectType.defineInferredProperty(propName,rightType,getprop);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+long startTime=System.currentTimeMillis();
 registry.registerPropertyOnType(propName,nodeType);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+long startTime=System.currentTimeMillis();
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
+long startTime=System.currentTimeMillis();
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
 }
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+}else {
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
 objectType.defineInferredProperty(propName,rightType,getprop);
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:07:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if(objectType.hasProperty(propName)){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()&&!objectType.isInstanceType()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:08:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.substring(11,19).equals("00:00:00")){
+propName=propName.substring(0,11)+"23:59:59"+propName.substring(19);
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2005/pattern-ver1-serial/dspace-oai.src.main.java.org.dspace.xoai.filter.DateUntilFilter.java-buildSolrQuery.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 18, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:10:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName!=null&&propName.trim().length()==0){
+propName=null;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
+if("prototype".equals(propName)||propName.trim().length()==0){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5053/pattern-ver1-serial/src.edu.clemson.lph.civet.prefs.CivetConfig.java-getEmailErrorsDirPath.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 7, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName!=null&&propName.trim().length()==0){
+propName=null;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
-if(!objectType.isPropertyTypeDeclared(propName)){
+if(!objectType.isPropertyTypeDeclared(propName)||propName.trim().length()==0){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5053/pattern-ver1-serial/src.edu.clemson.lph.civet.prefs.CivetConfig.java-getEmailErrorsDirPath.pattern
MATCHLEVEL : ALL
ALL : 19, UPD : 7, INS : 12, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
+if(propName.toString().contains("E")&&propName.toString().charAt(propName.indexOf("E")+1)!='-'&&Integer.parseInt(propName.toString().substring(propName.indexOf("E")+1,propName.length()))<=15){
+return ;
+}
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 30, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+synchronized(this){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 0, INS : 0, DEL : 37
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:11:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+}else {
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/3408/pattern-ver1-serial/COMP90015ChatClient.src.tiredale.client.ChatClientSocketThread.java-IdentityChangeResponse.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
 registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 37, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 0, INS : 1, DEL : 37
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:12:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
+}
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 38, UPD : 0, INS : 1, DEL : 37
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 0, DEL : 41
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
-}else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
 }
+}else {
+if(ensurePropertyDeclaredHelper(getprop,objectType)){
+return ;
 }
+if(!objectType.isPropertyTypeDeclared(propName)){
+registry.registerPropertyOnType(propName,nodeType);
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/3937/pattern-ver1-serial/src.Main.Analysis.java-calculatePrecisionRecall.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 41, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 0, INS : 1, DEL : 41
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
+}else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 0, INS : 1, DEL : 41
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
+}
+if(!objectType.isPropertyTypeDeclared(propName)){
+if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
+if("prototype".equals(propName)){
+objectType.defineDeclaredProperty(propName,rightType,getprop);
+}else {
+objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
+}else {
+if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
+objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
+registry.registerPropertyOnType(propName,objectType);
+}
+}
+}
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 0, INS : 1, DEL : 41
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
-}else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
-}
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
-}else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:13:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
-}else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
 }else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7797/pattern-ver1-serial/src.com.felhr.usbserial.UsbSerialDevice.java-createUsbSerialDevice.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
-}
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
 if(objectType==null){
 registry.registerPropertyOnType(propName,nodeType);
 }else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
-}
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2933/pattern-ver1-serial/common.common-io.src.main.java.com.twelvemonkeys.io.AbstractCachedSeekableStream.java-seekImpl.pattern
MATCHLEVEL : ALL
ALL : 44, UPD : 44, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
-}else {
+if(objectType!=null){
 if(ensurePropertyDeclaredHelper(getprop,objectType)){
 return ;
 }
 if(!objectType.isPropertyTypeDeclared(propName)){
 if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
 if("prototype".equals(propName)){
 objectType.defineDeclaredProperty(propName,rightType,getprop);
 }else {
 objectType.defineInferredProperty(propName,rightType,getprop);
 }
 }else {
 if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
 objectType.defineInferredProperty(propName,rightType,getprop);
 }else {
 registry.registerPropertyOnType(propName,objectType);
 }
 }
 }
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/572/pattern-ver1-serial/CloudPlayer.app.src.main.java.com.example.user.cloudplayer.ui.PlayListActivity.java-onSongDeleted.pattern
MATCHLEVEL : ALL
ALL : 49, UPD : 49, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypeInference.java[507,555]
------------Candidate---------------
 private void ensurePropertyDefined(Node getprop,JSType rightType){
 String propName=getprop.getLastChild().getString();
 JSType nodeType=getJSType(getprop.getFirstChild());
 ObjectType objectType=ObjectType.cast(nodeType.restrictByNotNullOrUndefined());
-if(objectType==null){
-registry.registerPropertyOnType(propName,nodeType);
-}else {
-if(ensurePropertyDeclaredHelper(getprop,objectType)){
-return ;
-}
-if(!objectType.isPropertyTypeDeclared(propName)){
-if(objectType.hasProperty(propName)||!objectType.isInstanceType()){
-if("prototype".equals(propName)){
-objectType.defineDeclaredProperty(propName,rightType,getprop);
-}else {
-objectType.defineInferredProperty(propName,rightType,getprop);
-}
-}else {
-if(getprop.getFirstChild().isThis()&&getJSType(syntacticScope.getRootNode()).isConstructor()){
-objectType.defineInferredProperty(propName,rightType,getprop);
-}else {
-registry.registerPropertyOnType(propName,objectType);
-}
-}
-}
-}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3277/pattern-ver1-serial/core.src.main.java.org.infinispan.transaction.WriteSkewHelper.java-updateLocalModeCacheEntries.pattern
MATCHLEVEL : ALL
ALL : 51, UPD : 0, INS : 0, DEL : 51
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:14:48 CDT
--------------- END -----------------
Location : com.google.javascript.jscomp.TypedScopeCreator.maybeCollectMember:[1738, 1730, 1735, 1741, 1742, 1743, 1744, 1746, 1751]#1.0
Compute Candidate : 2019.09.04 AD at 18:16:57 CDT - 2019.09.04 AD at 18:51:04 CDT , PNumber : 11462, CandNumber : 421 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+ JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
-Node name=member.getLastChild();
+ Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null&&!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()&&!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()&&name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType==null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info!=null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+JSDocInfo info=member.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6964/pattern-ver1-serial/storm-core.src.jvm.backtype.storm.elasticity.ElasticTaskHolder.java-handleScalingOutSubtaskCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+JSDocInfo info=value.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6964/pattern-ver1-serial/storm-core.src.jvm.backtype.storm.elasticity.ElasticTaskHolder.java-handleScalingOutSubtaskCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!value.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/79/pattern-ver1-serial/src.main.java.com.brxt.service.impl.ReportManagerImpl.java-getFinanceCheckList.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!value.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/79/pattern-ver1-serial/src.main.java.com.brxt.service.impl.ReportManagerImpl.java-getFinanceCheckList.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!nodeWithJsDocInfo.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/3430/pattern-ver1-serial/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.java-inferFunctionalInterfaceParameterization.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!nodeWithJsDocInfo.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/3430/pattern-ver1-serial/org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.java-inferFunctionalInterfaceParameterization.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()!=!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null!=!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null==(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/427/pattern-ver1-serial/softwaresystems.src.ss.week5.Board.java-isFull.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(t.toString(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(t!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(member!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(nodeWithJsDocInfo!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(value!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
-thisType.defineDeclaredProperty(name.getString(),jsType,member);
+thisType.defineDeclaredProperty(name.toString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/5598/pattern-ver1-serial/Main.java-jsonToCsv.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+member.getFirstChild().setJSType(thisType);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+member.setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5764/pattern-ver1-serial/SmartTrader.app.src.main.java.com.loveboyuan.smarttrader.InventoryActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:54:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+ final JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
-Node name=member.getLastChild();
+ final Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+ final JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ final JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
-Node name=member.getLastChild();
+ final JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ final Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+ JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
-Node name=member.getLastChild();
+ JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.isEmpty()){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.isEmpty()){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.isEmpty()){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.isEmpty()){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name.isEmpty()){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.isEmpty()){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||!name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node valueAnimator,Node value){
+JSDocInfo info=valueAnimator.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal valueAnimator,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(valueAnimator.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3559/pattern-ver1-serial/library.src.main.java.qiu.niorgai.StatusBarCompatLollipop.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+synchronized(thisType){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+synchronized(member.getFirstChild()){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null&&!member.isGetProp()&&!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/4407/pattern-ver1-serial/app.src.main.java.com.coderockets.referandumproject.util.adapter.MyFavoritesAdapter.java-bind.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(!name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3067/pattern-ver1-serial/core.src.com.ashenrider.game.Player.java-killPlayer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node edge,Node value){
+JSDocInfo info=edge.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal edge,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(edge.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1943/pattern-ver1-serial/violet-framework.src.main.java.com.horstmann.violet.product.diagram.abstracts.node.AbstractNode.java-addConnection.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node methodOpeningBrace,Node value){
+JSDocInfo info=methodOpeningBrace.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal methodOpeningBrace,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(methodOpeningBrace.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-hasTryFinallyBlock.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+synchronized(this){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node mpR,Node value){
+JSDocInfo info=mpR.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal mpR,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(mpR.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/2030/pattern-ver1-serial/app.src.main.java.com.example.andreas.mainview.slashy.SlashyActivity.java-onCompletion.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(equals(member)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(equals(member)){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(equals(value)){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(equals(t)){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(equals(nodeWithJsDocInfo)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node methodAST,Node value){
+JSDocInfo info=methodAST.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal methodAST,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(methodAST.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.CustomDeclarationOrderCheck.java-isMainMethodParameters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+while(true){
+
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+while(true){
+
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!value.isGetProp()||!value.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!value.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+value.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!nodeWithJsDocInfo.isGetProp()||!nodeWithJsDocInfo.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 18:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!nodeWithJsDocInfo.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+nodeWithJsDocInfo.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node managerFactory,Node value){
+JSDocInfo info=managerFactory.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal managerFactory,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(managerFactory.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1774/pattern-ver1-serial/src.main.java.com.spontaneous.server.SpontaneousApplication.java-sessionFactory.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!value.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+value.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/329/pattern-ver1-serial/src.com.ggasoftware.indigo.knime.IndigoFingerprintSimilarityNodeModel.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info!=null&&!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7445/pattern-ver1-serial/bungeecord.src.main.java.com.vexsoftware.votifier.bungee.forwarding.OnlineForwardPluginMessagingForwardingSource.java-forward.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+synchronized(this){
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
+}
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+synchronized(this){
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.isEmpty()){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(value.isEmpty()){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(nodeWithJsDocInfo.isEmpty()){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(member.isEmpty()){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(value.isEmpty()){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/6812/pattern-ver1-serial/src.main.java.wslf.homemoviebase.logic.Worker.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
-JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+private void maybeCollectMember(NodeTraversal t,Node member,Node methodOpeningBraceToken,Node value){
+JSDocInfo info=methodOpeningBraceToken.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
-private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+private void maybeCollectMember(NodeTraversal methodOpeningBraceToken,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
-JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JSType jsType=getDeclaredType(methodOpeningBraceToken.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/3430/pattern-ver1-serial/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.FinalizeImplementationCheck.java-isMethodEmpty.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!nodeWithJsDocInfo.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+nodeWithJsDocInfo.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2308/pattern-ver1-serial/src.main.java.hudson.plugins.s3.S3BucketPublisher.java-perform.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member==null){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(t==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(value==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(nodeWithJsDocInfo==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(jsType==null){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name==null){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member==null){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType==null){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name==null){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(thisType!=null){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+if(member.getFirstChild()!=null){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+if(thisType!=null){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/262/pattern-ver1-serial/src.internal.tree.WorldTree.java-getAllChildren.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==nodeWithJsDocInfo){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==nodeWithJsDocInfo){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==member){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==value){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==member){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==value){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(member==null){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(t==null){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(thisType==null){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==member.getLastChild()){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:05:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==getDeclaredType(t.getSourceName(),info,member,value)){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(info==nodeWithJsDocInfo.getJSDocInfo()){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(info==nodeWithJsDocInfo.getJSDocInfo()){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(jsType==getDeclaredType(t.getSourceName(),info,member,value)){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member==null){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value==null){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(info==null){
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+synchronized(this){
 return ;
+}
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(jsType==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4291/pattern-ver1-serial/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java-handleWrite.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if("index".equals(member)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if("index".equals(name)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if("index".equals(name)){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if("index".equals(member)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if("index".equals(value)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if("index".equals(t)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:07:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("index".equals(info)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if("index".equals(nodeWithJsDocInfo)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if("index".equals(jsType)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if("index".equals(jsType)){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("TIME")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.equals("TIME")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name.equals("TIME")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.equals("TIME")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.equals("TIME")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t.equals("TIME")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("TIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.equals("TIME")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("TIME")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType.equals("TIME")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("&null".equals(value)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:09:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if("&null".equals(member)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("&null".equals(t)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("&null".equals(member)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("&null".equals(info)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if("&null".equals(nodeWithJsDocInfo)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if("&null".equals(jsType)){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if("&null".equals(jsType)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if("&null".equals(name)){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:10:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if("&null".equals(name)){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member.equals("DATETIME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("DATETIME")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name.equals("DATETIME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.equals("DATETIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(value.equals("DATETIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(t.equals("DATETIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("DATETIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:11:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(nodeWithJsDocInfo.equals("DATETIME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("DATETIME")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(jsType.equals("DATETIME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+member=member;
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:12:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||info.equals("")||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/347/pattern-ver1-serial/app.src.main.java.jog.my.memory.Home.HomeFragment.java-updateProfileName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member!=null){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("-1")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("-1")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("-1")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:13:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+int a=0;
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+int a=0;
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+int a=0;
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals(member)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals(value)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals(t)){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t.equals(member)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:14:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t.equals(value)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.equals(t)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.equals(t)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.equals(member)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.equals(value)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.equals(t)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+String OUTSTRING="";
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:15:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+String OUTSTRING="";
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+String OUTSTRING="";
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(info.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(value.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(t.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(nodeWithJsDocInfo.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:16:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.equals(InputStream.class)){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.equals(InputStream.class)){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+int indexSelection=0;
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+int indexSelection=0;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.equals("setPackMode")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:17:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member.equals("setPackMode")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(member.equals("setPackMode")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if("Chrome".equals(info)||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if("Chrome".equals(jsType)&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+int a=1;
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+int a=1;
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+int a=1;
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+boolean b=true;
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+boolean b=true;
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+boolean b=true;
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+if(member!=null){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2120/pattern-ver1-serial/app.src.main.java.ua.darkstar.reminder.SplashFragment.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+member.getParent().removeChild(value);
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3722/pattern-ver1-serial/zeppelin-zengine.src.main.java.org.apache.zeppelin.notebook.FolderView.java-onFolderRenamed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:19:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+value.getParent().removeChild(member);
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3722/pattern-ver1-serial/zeppelin-zengine.src.main.java.org.apache.zeppelin.notebook.FolderView.java-onFolderRenamed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+if(!thisType.equals("")){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (member!=null);
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (member!=null);
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (value!=null);
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (t!=null);
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:20:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (info!=null);
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (nodeWithJsDocInfo!=null);
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+assert (jsType!=null);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (jsType!=null);
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+assert (name!=null);
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (name!=null);
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+assert (!member.isEmpty());
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (!member.isEmpty());
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (!value.isEmpty());
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (!nodeWithJsDocInfo.isEmpty());
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+assert (!name.isEmpty());
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+assert (!name.isEmpty());
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo!=null){
+JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+member.getFirstChild().setJSType(thisType);
+JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+Node name=member.getLastChild();
+if(jsType!=null&&(name.isName()||name.isString())){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member!=null){
+JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+member.getFirstChild().setJSType(thisType);
+JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+Node name=member.getLastChild();
+if(jsType!=null&&(name.isName()||name.isString())){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value!=null){
+JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+member.getFirstChild().setJSType(thisType);
+JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+Node name=member.getLastChild();
+if(jsType!=null&&(name.isName()||name.isString())){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t!=null){
+JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+member.getFirstChild().setJSType(thisType);
+JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+Node name=member.getLastChild();
+if(jsType!=null&&(name.isName()||name.isString())){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member!=null){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (info!=nodeWithJsDocInfo.getJSDocInfo());
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+assert (jsType!=getDeclaredType(t.getSourceName(),info,member,value));
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+assert (name!=member.getLastChild());
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(member.isEmpty()){
+System.out.println("Team has to have a name");
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
+member.setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7599/pattern-ver1-serial/core.src.main.java.com.graphhopper.reader.osgb.OsItnReader.java-processRelation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+assert (member!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (member!=null);
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (value!=null);
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (t!=null);
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (nodeWithJsDocInfo!=null);
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+assert (jsType!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+assert (name!=null);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(info.equals("655")){
+System.out.println();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("655")){
+System.out.println();
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(jsType.equals("655")){
+System.out.println();
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("655")){
+System.out.println();
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+member.getFirstChild().setJSType(thisType);
 return ;
 }
-member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+member.getFirstChild().setJSType(thisType);
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+member.getFirstChild().setJSType(thisType);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&name.isEmpty()){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2095/pattern-ver1-serial/app.src.main.java.com.bulletphysics.dynamics.RigidBody.java-destroy.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member.isEmpty()){
+member=null;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.isEmpty()){
+member=null;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(value.isEmpty()){
+value=null;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(nodeWithJsDocInfo.isEmpty()){
+nodeWithJsDocInfo=null;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.isEmpty()){
+name=null;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name.isEmpty()){
+name=null;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||name.equals("manufacturedOn")||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V37/509/pattern-ver1-serial/product-validation-system-war.src.main.java.com.pvs.web.freemarker.processors.ProductTemplateRegistrationProcessor.java-postHTML.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&jsType.equals("")){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/347/pattern-ver1-serial/app.src.main.java.jog.my.memory.Home.HomeFragment.java-updateProfileName.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&!(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(t.getClass().getSimpleName().startsWith("SystemException")){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(member.getClass().getSimpleName().startsWith("SystemException")){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(value.getClass().getSimpleName().startsWith("SystemException")){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
+if(nodeWithJsDocInfo.getClass().getSimpleName().startsWith("SystemException")){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(jsType.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||(name!=null&&name.isString()))){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/2463/pattern-ver1-serial/src.Level.java-collides.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (member!=null):"Appointments day is not allowed to be null!";
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (t!=null):"Appointments day is not allowed to be null!";
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (member!=null):"Appointments day is not allowed to be null!";
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (value!=null):"Appointments day is not allowed to be null!";
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+assert (info!=null):"Appointments day is not allowed to be null!";
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+assert (nodeWithJsDocInfo!=null):"Appointments day is not allowed to be null!";
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (jsType!=null):"Appointments day is not allowed to be null!";
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+assert (name!=null):"Appointments day is not allowed to be null!";
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+assert (jsType!=null):"Appointments day is not allowed to be null!";
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+assert (name!=null):"Appointments day is not allowed to be null!";
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
+}
+if(member.isEmpty()){
+member=null;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member.isEmpty()){
+member=null;
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
+}
+if(member.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+synchronized(this){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
+}
+if(member==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(t==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
+if(member==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
+if(value==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
+if(t==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null){
+return ;
+}
+if(t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==null){
+return ;
+}
+if(t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t==null){
+return ;
+}
+if(member==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t==null){
+return ;
+}
+if(value==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==null){
+return ;
+}
+if(member==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null){
+return ;
+}
+if(value==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==null){
+return ;
+}
+if(t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(name.equals("NAME")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(member.equals("CALL_RECEIVED_AT")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member.equals("NAME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member.equals("CALL_RECEIVED_AT")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+if(member.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value.equals("CALL_RECEIVED_AT")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+if(value.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t.equals("CALL_RECEIVED_AT")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+if(t.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(name.equals("CALL_RECEIVED_AT")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name.equals("NAME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(info.equals("NAME")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo.equals("CALL_RECEIVED_AT")){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
+if(nodeWithJsDocInfo.equals("NAME")){
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(jsType.equals("NAME")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType.equals("CALL_RECEIVED_AT")){
+return ;
+}
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(jsType.equals("NAME")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name.equals("INFO")){
+return ;
+}
+if(name.equals("UNIT")){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(member.equals("INFO")){
+return ;
+}
+if(member.equals("UNIT")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member.equals("INFO")){
+return ;
+}
+if(member.equals("UNIT")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(value.equals("INFO")){
+return ;
+}
+if(value.equals("UNIT")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(name.equals("INFO")){
+return ;
+}
+if(name.equals("UNIT")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(t.equals("INFO")){
+return ;
+}
+if(t.equals("UNIT")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info.equals("INFO")){
+return ;
+}
+if(info.equals("UNIT")){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(nodeWithJsDocInfo.equals("INFO")){
+return ;
+}
+if(nodeWithJsDocInfo.equals("UNIT")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType.equals("INFO")){
+return ;
+}
+if(jsType.equals("UNIT")){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(jsType.equals("INFO")){
+return ;
+}
+if(jsType.equals("UNIT")){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(nodeWithJsDocInfo==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(value==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/6299/pattern-ver1-serial/src.main.java.com.lothrazar.cyclicmagic.util.UtilNBT.java-countItemsFromNBT.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+thisType.defineDeclaredProperty(name.getString(),jsType,member);
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(jsType==null||name==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==null||jsType==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(info==null||jsType==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(jsType==null||info==null){
+return ;
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if("Chrome".equals(info==null)||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(info==null){
+throw new IllegalStateException("User isn't registered! "+nodeWithJsDocInfo);
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+throw new IllegalStateException("User isn't registered! "+info);
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+throw new IllegalStateException("User isn't registered! "+member);
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+throw new IllegalStateException("User isn't registered! "+value);
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(jsType==null){
+throw new IllegalStateException("User isn't registered! "+t);
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
+if(name==null){
+throw new IllegalStateException("User isn't registered! "+member);
+}
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if((jsType!=null)&&((name.isName()||name.isString()))){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+boolean succeeded=false;
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(!succeeded){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+succeeded=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||name.isString())||"查看红包".equals(jsType!=null)){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/6809/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.WebSocketService.java-sendWebSocketBroadcast.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(true){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||name.isString())==false){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if((name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/293/pattern-ver1-serial/src.snpsvm.app.CommandLineApp.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||name.isString())==true){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member==null||info==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value==null||info==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(t==null||info==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(info==null||member==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(info==null||value==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(info==null||t==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member==null||value==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value==null||member==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(member==null||t==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(value==null||t==null){
+throw new NullPointerException();
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(thisType!=null){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/5497/pattern-ver1-serial/app.src.main.java.hm.orz.chaos114.android.tumekyouen.TitleActivity.java-afterViews.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(!member.isEmpty()){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/251/pattern-ver1-serial/src.focus.up.DAO.java-removeBroadcast.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if((info==null)||(!member.isGetProp())||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&((name.isName())||(name.isString()))){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+for(int i=0;i<24;i++){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+for(int i=0;i<24;i++){
 member.getFirstChild().setJSType(thisType);
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+boolean atLeastOneNonProhibited=false;
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+if(atLeastOneNonProhibited){
+throw new IllegalStateException("There should be a vertex satisfying these properties, but there is not, so there must be something wrong..");
+}
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+atLeastOneNonProhibited=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4655/pattern-ver1-serial/src.Alg.Algorithms.IterativeCompression.SimpleDisjointAlg.java-findVertexWithOneNonProhibitedNeighbour.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member==null||info==null||value==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member==null||info==null||t==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
+if(member==null||info==null||nodeWithJsDocInfo==null){
+return ;
+}
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member==null||info==null||jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member==null||value==null||jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member==null||t==null||jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member==null||nodeWithJsDocInfo==null||jsType==null){
+return ;
+}
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null||t==null||value==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null||value==null||t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+if(member==null||nodeWithJsDocInfo==null||t==null){
+return ;
+}
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member!=null&&!member.isEmpty()){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5563/pattern-ver1-serial/app.src.main.java.com.example.houzhe.weatheronclass.MainActivity.java-parseXML.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 7, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()||"查看红包".equals(info==null||!member.isGetProp())){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/3312/pattern-ver1-serial/WWIDesigner.src.main.com.wwidesigner.note.view.FingeringPatternPanel.java-getData.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/933/pattern-ver1-serial/app.src.main.java.com.example.agrael.calculator.Utils.java-isOperator.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(true){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()==false){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()&&false){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()==true){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(member.isGetProp()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if(!member.isGetProp()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
-return ;
-}
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+return ;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 1, DEL : 12
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
+long startTime=System.currentTimeMillis();
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
+long startTime=System.currentTimeMillis();
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member!=null&&!member.isEmpty()){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/5563/pattern-ver1-serial/app.src.main.java.com.example.houzhe.weatheronclass.MainActivity.java-parseXML.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 7, INS : 0, DEL : 6
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if((info==null)||(!member.isGetProp())||!member.getFirstChild().isThis()){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if((jsType!=null)&&((name.isName()||name.isString()))){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 14, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
-return ;
-}
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
+if(member!=null){
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 3, INS : 0, DEL : 12
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
+boolean haveBreadCrumbs=false;
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&(name.isName()||name.isString())&&haveBreadCrumbs){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
+haveBreadCrumbs=true;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 9, INS : 6, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
-if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
+if((info==null||!member.isGetProp())||(!member.getFirstChild().isThis())){
 return ;
 }
 member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
-if(jsType!=null&&(name.isName()||name.isString())){
+if(jsType!=null&&((name.isName())||(name.isString()))){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_11_buggy/src/com/google/javascript/jscomp/TypedScopeCreator.java[1728,1751]
------------Candidate---------------
 private void maybeCollectMember(NodeTraversal t,Node member,Node nodeWithJsDocInfo,Node value){
 JSDocInfo info=nodeWithJsDocInfo.getJSDocInfo();
 if(info==null||!member.isGetProp()||!member.getFirstChild().isThis()){
 return ;
 }
-member.getFirstChild().setJSType(thisType);
 JSType jsType=getDeclaredType(t.getSourceName(),info,member,value);
 Node name=member.getLastChild();
 if(jsType!=null&&(name.isName()||name.isString())){
 thisType.defineDeclaredProperty(name.getString(),jsType,member);
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/3556/pattern-ver1-serial/src.net.tootallnate.websocket.WebSocketClient.java-close.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 11, INS : 0, DEL : 4
Failing Tests:[com.google.javascript.jscomp.TypeCheckTest::testGetprop4, com.google.javascript.jscomp.TypeCheckTest::testIssue810]
---------START : 2019.09.04 AD at 14:21:51 CDT
---------TIME : 2019.09.04 AD at 19:21:56 CDT
--------------- END -----------------
Current failed test : com.google.javascript.jscomp.TypeCheckTest::testIssue810 | 2019.09.04 AD at 19:21:56 CDT
Finish : closure-11 > patch : 0 | Start : Wed Sep 04 14:21:51 CDT 2019 | End : 2019.09.04 AD at 19:21:57 CDT
